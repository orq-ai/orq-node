/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { OrqError } from "./orqerror.js";

/**
 * Internal server error
 */
export type EvalsRagasConcisenessEvalsResponseBodyData = {
  message: string;
};

/**
 * Internal server error
 */
export class EvalsRagasConcisenessEvalsResponseBody extends OrqError {
  /** The original data that was passed to this error instance. */
  data$: EvalsRagasConcisenessEvalsResponseBodyData;

  constructor(
    err: EvalsRagasConcisenessEvalsResponseBodyData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;

    this.name = "EvalsRagasConcisenessEvalsResponseBody";
  }
}

/**
 * Evaluator not found
 */
export type EvalsRagasConcisenessResponseBodyData = {
  message: string;
};

/**
 * Evaluator not found
 */
export class EvalsRagasConcisenessResponseBody extends OrqError {
  /** The original data that was passed to this error instance. */
  data$: EvalsRagasConcisenessResponseBodyData;

  constructor(
    err: EvalsRagasConcisenessResponseBodyData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;

    this.name = "EvalsRagasConcisenessResponseBody";
  }
}

/** @internal */
export const EvalsRagasConcisenessEvalsResponseBody$inboundSchema: z.ZodType<
  EvalsRagasConcisenessEvalsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new EvalsRagasConcisenessEvalsResponseBody(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type EvalsRagasConcisenessEvalsResponseBody$Outbound = {
  message: string;
};

/** @internal */
export const EvalsRagasConcisenessEvalsResponseBody$outboundSchema: z.ZodType<
  EvalsRagasConcisenessEvalsResponseBody$Outbound,
  z.ZodTypeDef,
  EvalsRagasConcisenessEvalsResponseBody
> = z.instanceof(EvalsRagasConcisenessEvalsResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsRagasConcisenessEvalsResponseBody$ {
  /** @deprecated use `EvalsRagasConcisenessEvalsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    EvalsRagasConcisenessEvalsResponseBody$inboundSchema;
  /** @deprecated use `EvalsRagasConcisenessEvalsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsRagasConcisenessEvalsResponseBody$outboundSchema;
  /** @deprecated use `EvalsRagasConcisenessEvalsResponseBody$Outbound` instead. */
  export type Outbound = EvalsRagasConcisenessEvalsResponseBody$Outbound;
}

/** @internal */
export const EvalsRagasConcisenessResponseBody$inboundSchema: z.ZodType<
  EvalsRagasConcisenessResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new EvalsRagasConcisenessResponseBody(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type EvalsRagasConcisenessResponseBody$Outbound = {
  message: string;
};

/** @internal */
export const EvalsRagasConcisenessResponseBody$outboundSchema: z.ZodType<
  EvalsRagasConcisenessResponseBody$Outbound,
  z.ZodTypeDef,
  EvalsRagasConcisenessResponseBody
> = z.instanceof(EvalsRagasConcisenessResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsRagasConcisenessResponseBody$ {
  /** @deprecated use `EvalsRagasConcisenessResponseBody$inboundSchema` instead. */
  export const inboundSchema = EvalsRagasConcisenessResponseBody$inboundSchema;
  /** @deprecated use `EvalsRagasConcisenessResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsRagasConcisenessResponseBody$outboundSchema;
  /** @deprecated use `EvalsRagasConcisenessResponseBody$Outbound` instead. */
  export type Outbound = EvalsRagasConcisenessResponseBody$Outbound;
}
