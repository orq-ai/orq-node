/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { OrqError } from "./orqerror.js";

/**
 * Internal server error
 */
export type EvalsFactCheckingKnowledgeBaseEvalsResponseBodyData = {
  message: string;
};

/**
 * Internal server error
 */
export class EvalsFactCheckingKnowledgeBaseEvalsResponseBody extends OrqError {
  /** The original data that was passed to this error instance. */
  data$: EvalsFactCheckingKnowledgeBaseEvalsResponseBodyData;

  constructor(
    err: EvalsFactCheckingKnowledgeBaseEvalsResponseBodyData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;

    this.name = "EvalsFactCheckingKnowledgeBaseEvalsResponseBody";
  }
}

/**
 * Evaluator not found
 */
export type EvalsFactCheckingKnowledgeBaseResponseBodyData = {
  message: string;
};

/**
 * Evaluator not found
 */
export class EvalsFactCheckingKnowledgeBaseResponseBody extends OrqError {
  /** The original data that was passed to this error instance. */
  data$: EvalsFactCheckingKnowledgeBaseResponseBodyData;

  constructor(
    err: EvalsFactCheckingKnowledgeBaseResponseBodyData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;

    this.name = "EvalsFactCheckingKnowledgeBaseResponseBody";
  }
}

/** @internal */
export const EvalsFactCheckingKnowledgeBaseEvalsResponseBody$inboundSchema:
  z.ZodType<
    EvalsFactCheckingKnowledgeBaseEvalsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new EvalsFactCheckingKnowledgeBaseEvalsResponseBody(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type EvalsFactCheckingKnowledgeBaseEvalsResponseBody$Outbound = {
  message: string;
};

/** @internal */
export const EvalsFactCheckingKnowledgeBaseEvalsResponseBody$outboundSchema:
  z.ZodType<
    EvalsFactCheckingKnowledgeBaseEvalsResponseBody$Outbound,
    z.ZodTypeDef,
    EvalsFactCheckingKnowledgeBaseEvalsResponseBody
  > = z.instanceof(EvalsFactCheckingKnowledgeBaseEvalsResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsFactCheckingKnowledgeBaseEvalsResponseBody$ {
  /** @deprecated use `EvalsFactCheckingKnowledgeBaseEvalsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    EvalsFactCheckingKnowledgeBaseEvalsResponseBody$inboundSchema;
  /** @deprecated use `EvalsFactCheckingKnowledgeBaseEvalsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsFactCheckingKnowledgeBaseEvalsResponseBody$outboundSchema;
  /** @deprecated use `EvalsFactCheckingKnowledgeBaseEvalsResponseBody$Outbound` instead. */
  export type Outbound =
    EvalsFactCheckingKnowledgeBaseEvalsResponseBody$Outbound;
}

/** @internal */
export const EvalsFactCheckingKnowledgeBaseResponseBody$inboundSchema:
  z.ZodType<EvalsFactCheckingKnowledgeBaseResponseBody, z.ZodTypeDef, unknown> =
    z.object({
      message: z.string(),
      request$: z.instanceof(Request),
      response$: z.instanceof(Response),
      body$: z.string(),
    })
      .transform((v) => {
        return new EvalsFactCheckingKnowledgeBaseResponseBody(v, {
          request: v.request$,
          response: v.response$,
          body: v.body$,
        });
      });

/** @internal */
export type EvalsFactCheckingKnowledgeBaseResponseBody$Outbound = {
  message: string;
};

/** @internal */
export const EvalsFactCheckingKnowledgeBaseResponseBody$outboundSchema:
  z.ZodType<
    EvalsFactCheckingKnowledgeBaseResponseBody$Outbound,
    z.ZodTypeDef,
    EvalsFactCheckingKnowledgeBaseResponseBody
  > = z.instanceof(EvalsFactCheckingKnowledgeBaseResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsFactCheckingKnowledgeBaseResponseBody$ {
  /** @deprecated use `EvalsFactCheckingKnowledgeBaseResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    EvalsFactCheckingKnowledgeBaseResponseBody$inboundSchema;
  /** @deprecated use `EvalsFactCheckingKnowledgeBaseResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsFactCheckingKnowledgeBaseResponseBody$outboundSchema;
  /** @deprecated use `EvalsFactCheckingKnowledgeBaseResponseBody$Outbound` instead. */
  export type Outbound = EvalsFactCheckingKnowledgeBaseResponseBody$Outbound;
}
