/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetEvalsRequest = {
  /**
   * A limit on the number of objects to be returned. Limit can range between 1 and 50, and the default is 10
   */
  limit?: number | undefined;
  /**
   * A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with `01JJ1HDHN79XAS7A01WB3HYSDB`, your subsequent call can include `after=01JJ1HDHN79XAS7A01WB3HYSDB` in order to fetch the next page of the list.
   */
  startingAfter?: string | undefined;
  /**
   * A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with `01JJ1HDHN79XAS7A01WB3HYSDB`, your subsequent call can include `before=01JJ1HDHN79XAS7A01WB3HYSDB` in order to fetch the previous page of the list.
   */
  endingBefore?: string | undefined;
};

export const GetEvalsObject = {
  List: "list",
} as const;
export type GetEvalsObject = ClosedEnum<typeof GetEvalsObject>;

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type =
  {
    Number: "number",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type
  >;

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator = {
  Eq: "eq",
  Ne: "ne",
  Gt: "gt",
  Gte: "gte",
  Lt: "lt",
  Lte: "lte",
} as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator
  >;

export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber = {
  enabled: boolean;
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type;
  value: number;
  operator: GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator;
};

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type =
  {
    Boolean: "boolean",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type
  >;

export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean = {
  enabled: boolean;
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type;
  value: boolean;
};

export type GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig =
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean;

export const GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType = {
  TypescriptEval: "typescript_eval",
} as const;
export type GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType
  >;

export type Typescript = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean
    | undefined;
  code: string;
  type: GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType;
  key: string;
};

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type =
  {
    Number: "number",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type
  >;

export const GetEvalsGuardrailConfigEvalsResponse200Operator = {
  Eq: "eq",
  Ne: "ne",
  Gt: "gt",
  Gte: "gte",
  Lt: "lt",
  Lte: "lte",
} as const;
export type GetEvalsGuardrailConfigEvalsResponse200Operator = ClosedEnum<
  typeof GetEvalsGuardrailConfigEvalsResponse200Operator
>;

export type GetEvalsGuardrailConfigEvalsResponse200Number = {
  enabled: boolean;
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type;
  value: number;
  operator: GetEvalsGuardrailConfigEvalsResponse200Operator;
};

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type =
  {
    Boolean: "boolean",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type
  >;

export type GetEvalsGuardrailConfigEvalsResponse200Boolean = {
  enabled: boolean;
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type;
  value: boolean;
};

export type GetEvalsDataEvalsResponse200GuardrailConfig =
  | GetEvalsGuardrailConfigEvalsResponse200Number
  | GetEvalsGuardrailConfigEvalsResponse200Boolean;

export const GetEvalsDataEvalsResponse200ApplicationJSONType = {
  Ragas: "ragas",
} as const;
export type GetEvalsDataEvalsResponse200ApplicationJSONType = ClosedEnum<
  typeof GetEvalsDataEvalsResponse200ApplicationJSONType
>;

export const RagasMetric = {
  ContextPrecision: "context_precision",
  ContextRecall: "context_recall",
  ContextEntitiesRecall: "context_entities_recall",
  Harmfulness: "harmfulness",
  Maliciousness: "maliciousness",
  Coherence: "coherence",
  Correctness: "correctness",
  Conciseness: "conciseness",
  ResponseRelevancy: "response_relevancy",
  Faithfulness: "faithfulness",
  Summarization: "summarization",
  NoiseSensitivity: "noise_sensitivity",
} as const;
export type RagasMetric = ClosedEnum<typeof RagasMetric>;

export type Ragas = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | GetEvalsGuardrailConfigEvalsResponse200Number
    | GetEvalsGuardrailConfigEvalsResponse200Boolean
    | undefined;
  type: GetEvalsDataEvalsResponse200ApplicationJSONType;
  ragasMetric: RagasMetric;
  key: string;
  model: string;
};

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type =
  {
    Number: "number",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type
  >;

export const GetEvalsGuardrailConfigEvalsResponseOperator = {
  Eq: "eq",
  Ne: "ne",
  Gt: "gt",
  Gte: "gte",
  Lt: "lt",
  Lte: "lte",
} as const;
export type GetEvalsGuardrailConfigEvalsResponseOperator = ClosedEnum<
  typeof GetEvalsGuardrailConfigEvalsResponseOperator
>;

export type GetEvalsGuardrailConfigEvalsResponseNumber = {
  enabled: boolean;
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type;
  value: number;
  operator: GetEvalsGuardrailConfigEvalsResponseOperator;
};

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type =
  {
    Boolean: "boolean",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type
  >;

export type GetEvalsGuardrailConfigEvalsResponseBoolean = {
  enabled: boolean;
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type;
  value: boolean;
};

export type GetEvalsDataEvalsResponseGuardrailConfig =
  | GetEvalsGuardrailConfigEvalsResponseNumber
  | GetEvalsGuardrailConfigEvalsResponseBoolean;

export const GetEvalsDataEvalsResponse200Type = {
  FunctionEval: "function_eval",
} as const;
export type GetEvalsDataEvalsResponse200Type = ClosedEnum<
  typeof GetEvalsDataEvalsResponse200Type
>;

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type =
  {
    LevenshteinDistance: "levenshtein_distance",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type
  >;

export type TwentyFour = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type =
  {
    CosineSimilarity: "cosine_similarity",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type
  >;

export type TwentyThree = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type =
  {
    MeteorScore: "meteor_score",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type
  >;

export type TwentyTwo = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type =
  {
    RougeN: "rouge_n",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type
  >;

export type TwentyOne = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type =
  {
    BleuScore: "bleu_score",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type
  >;

export type Twenty = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type =
  {
    BertScore: "bert_score",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type
  >;

export type Nineteen = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type =
  {
    ModerationsGoogle: "moderations_google",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type
  >;

export type Eighteen = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type =
  {
    ModerationsOpenai: "moderations_openai",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type
  >;

export type Seventeen = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type =
  {
    IsValidJson: "is_valid_json",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type
  >;

export type Sixteen = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type =
  {
    Regex: "regex",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type
  >;

export type Fifteen = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type;
  pattern: string;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type =
  {
    OneLine: "one_line",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type
  >;

export type Fourteen = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type =
  {
    LengthGreaterThan: "length_greater_than",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type
  >;

export type Thirteen = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type;
  value: number;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type =
  {
    LengthBetween: "length_between",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type
  >;

export type Twelve = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type;
  min: number;
  max: number;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type =
  {
    LengthLessThan: "length_less_than",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type
  >;

export type Eleven = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type;
  value: number;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type =
  {
    ExactMatch: "exact_match",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type
  >;

export type Ten = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type =
  {
    EndsWith: "ends_with",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type
  >;

export type Nine = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type;
  value: string;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType =
  {
    StartWith: "start_with",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType
  >;

export type Eight = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType;
  value: string;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType =
  {
    ContainsValidLink: "contains_valid_link",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType
  >;

export type Seven = {
  type: GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType = {
  ContainsUrl: "contains_url",
} as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType =
  ClosedEnum<typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType>;

export type Six = {
  type: GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType;
};

export const GetEvalsFunctionParamsEvalsResponse200Type = {
  ContainsEmail: "contains_email",
} as const;
export type GetEvalsFunctionParamsEvalsResponse200Type = ClosedEnum<
  typeof GetEvalsFunctionParamsEvalsResponse200Type
>;

export type Five = {
  type: GetEvalsFunctionParamsEvalsResponse200Type;
};

export const GetEvalsFunctionParamsEvalsResponseType = {
  ContainsAny: "contains_any",
} as const;
export type GetEvalsFunctionParamsEvalsResponseType = ClosedEnum<
  typeof GetEvalsFunctionParamsEvalsResponseType
>;

export type FunctionParams4 = {
  type: GetEvalsFunctionParamsEvalsResponseType;
  keywords: Array<string>;
};

export const GetEvalsFunctionParamsEvalsType = {
  ContainsAll: "contains_all",
} as const;
export type GetEvalsFunctionParamsEvalsType = ClosedEnum<
  typeof GetEvalsFunctionParamsEvalsType
>;

export type FunctionParams3 = {
  type: GetEvalsFunctionParamsEvalsType;
  keywords: Array<string>;
};

export const GetEvalsFunctionParamsType = {
  ContainsNone: "contains_none",
} as const;
export type GetEvalsFunctionParamsType = ClosedEnum<
  typeof GetEvalsFunctionParamsType
>;

export type FunctionParams2 = {
  type: GetEvalsFunctionParamsType;
  keywords: Array<string>;
};

export const FunctionParamsType = {
  Contains: "contains",
} as const;
export type FunctionParamsType = ClosedEnum<typeof FunctionParamsType>;

export type FunctionParams1 = {
  type: FunctionParamsType;
  value: string;
};

export type DataFunctionParams =
  | Twelve
  | FunctionParams1
  | FunctionParams2
  | FunctionParams3
  | FunctionParams4
  | Eight
  | Nine
  | Eleven
  | Thirteen
  | Fifteen
  | Five
  | Six
  | Seven
  | Ten
  | Fourteen
  | Sixteen
  | Seventeen
  | Eighteen
  | Nineteen
  | Twenty
  | TwentyOne
  | TwentyTwo
  | TwentyThree
  | TwentyFour;

export type DataFunction = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | GetEvalsGuardrailConfigEvalsResponseNumber
    | GetEvalsGuardrailConfigEvalsResponseBoolean
    | undefined;
  type: GetEvalsDataEvalsResponse200Type;
  functionParams:
    | Twelve
    | FunctionParams1
    | FunctionParams2
    | FunctionParams3
    | FunctionParams4
    | Eight
    | Nine
    | Eleven
    | Thirteen
    | Fifteen
    | Five
    | Six
    | Seven
    | Ten
    | Fourteen
    | Sixteen
    | Seventeen
    | Eighteen
    | Nineteen
    | Twenty
    | TwentyOne
    | TwentyTwo
    | TwentyThree
    | TwentyFour;
  key: string;
};

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType =
  {
    Number: "number",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType
  >;

export const GetEvalsGuardrailConfigEvalsOperator = {
  Eq: "eq",
  Ne: "ne",
  Gt: "gt",
  Gte: "gte",
  Lt: "lt",
  Lte: "lte",
} as const;
export type GetEvalsGuardrailConfigEvalsOperator = ClosedEnum<
  typeof GetEvalsGuardrailConfigEvalsOperator
>;

export type GetEvalsGuardrailConfigEvalsNumber = {
  enabled: boolean;
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType;
  value: number;
  operator: GetEvalsGuardrailConfigEvalsOperator;
};

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType =
  {
    Boolean: "boolean",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType
  >;

export type GetEvalsGuardrailConfigEvalsBoolean = {
  enabled: boolean;
  type: GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType;
  value: boolean;
};

export type GetEvalsDataEvalsGuardrailConfig =
  | GetEvalsGuardrailConfigEvalsNumber
  | GetEvalsGuardrailConfigEvalsBoolean;

export const GetEvalsDataEvalsResponseType = {
  PythonEval: "python_eval",
} as const;
export type GetEvalsDataEvalsResponseType = ClosedEnum<
  typeof GetEvalsDataEvalsResponseType
>;

export type DataPython = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | GetEvalsGuardrailConfigEvalsNumber
    | GetEvalsGuardrailConfigEvalsBoolean
    | undefined;
  code: string;
  type: GetEvalsDataEvalsResponseType;
  key: string;
};

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType = {
  Number: "number",
} as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType =
  ClosedEnum<typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType>;

export const GetEvalsGuardrailConfigOperator = {
  Eq: "eq",
  Ne: "ne",
  Gt: "gt",
  Gte: "gte",
  Lt: "lt",
  Lte: "lte",
} as const;
export type GetEvalsGuardrailConfigOperator = ClosedEnum<
  typeof GetEvalsGuardrailConfigOperator
>;

export type GetEvalsGuardrailConfigNumber = {
  enabled: boolean;
  type: GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType;
  value: number;
  operator: GetEvalsGuardrailConfigOperator;
};

export const GetEvalsGuardrailConfigEvalsResponse200Type = {
  Boolean: "boolean",
} as const;
export type GetEvalsGuardrailConfigEvalsResponse200Type = ClosedEnum<
  typeof GetEvalsGuardrailConfigEvalsResponse200Type
>;

export type GetEvalsGuardrailConfigBoolean = {
  enabled: boolean;
  type: GetEvalsGuardrailConfigEvalsResponse200Type;
  value: boolean;
};

export type GetEvalsDataGuardrailConfig =
  | GetEvalsGuardrailConfigNumber
  | GetEvalsGuardrailConfigBoolean;

export const GetEvalsDataEvalsType = {
  HttpEval: "http_eval",
} as const;
export type GetEvalsDataEvalsType = ClosedEnum<typeof GetEvalsDataEvalsType>;

export const DataMethod = {
  Get: "GET",
  Post: "POST",
} as const;
export type DataMethod = ClosedEnum<typeof DataMethod>;

export type DataHTTP = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | GetEvalsGuardrailConfigNumber
    | GetEvalsGuardrailConfigBoolean
    | undefined;
  type: GetEvalsDataEvalsType;
  url: string;
  method: DataMethod;
  headers: { [k: string]: string };
  payload: { [k: string]: any };
  key: string;
};

export const GetEvalsGuardrailConfigEvalsResponseType = {
  Number: "number",
} as const;
export type GetEvalsGuardrailConfigEvalsResponseType = ClosedEnum<
  typeof GetEvalsGuardrailConfigEvalsResponseType
>;

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator =
  {
    Eq: "eq",
    Ne: "ne",
    Gt: "gt",
    Gte: "gte",
    Lt: "lt",
    Lte: "lte",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator
  >;

export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber =
  {
    enabled: boolean;
    type: GetEvalsGuardrailConfigEvalsResponseType;
    value: number;
    operator:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator;
  };

export const GetEvalsGuardrailConfigEvalsType = {
  Boolean: "boolean",
} as const;
export type GetEvalsGuardrailConfigEvalsType = ClosedEnum<
  typeof GetEvalsGuardrailConfigEvalsType
>;

export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean =
  {
    enabled: boolean;
    type: GetEvalsGuardrailConfigEvalsType;
    value: boolean;
  };

export type DataGuardrailConfig =
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean;

export const GetEvalsDataType = {
  JsonSchema: "json_schema",
} as const;
export type GetEvalsDataType = ClosedEnum<typeof GetEvalsDataType>;

export type DataJSON = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean
    | undefined;
  type: GetEvalsDataType;
  schema: string;
  key: string;
};

export const GetEvalsGuardrailConfigType = {
  Number: "number",
} as const;
export type GetEvalsGuardrailConfigType = ClosedEnum<
  typeof GetEvalsGuardrailConfigType
>;

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator =
  {
    Eq: "eq",
    Ne: "ne",
    Gt: "gt",
    Gte: "gte",
    Lt: "lt",
    Lte: "lte",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator
  >;

export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber =
  {
    enabled: boolean;
    type: GetEvalsGuardrailConfigType;
    value: number;
    operator:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator;
  };

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type =
  {
    Boolean: "boolean",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type
  >;

export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean =
  {
    enabled: boolean;
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type;
    value: boolean;
  };

export type GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig =
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean;

export const DataType = {
  LlmEval: "llm_eval",
} as const;
export type DataType = ClosedEnum<typeof DataType>;

export type DataLLM = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean
    | undefined;
  type: DataType;
  prompt: string;
  key: string;
  model: string;
};

export type GetEvalsData =
  | DataHTTP
  | DataLLM
  | Ragas
  | DataJSON
  | DataPython
  | DataFunction
  | Typescript;

/**
 * Returns a list of evals
 */
export type GetEvalsResponseBody = {
  object: GetEvalsObject;
  data: Array<
    | DataHTTP
    | DataLLM
    | Ragas
    | DataJSON
    | DataPython
    | DataFunction
    | Typescript
  >;
  hasMore: boolean;
};

/** @internal */
export const GetEvalsRequest$inboundSchema: z.ZodType<
  GetEvalsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  limit: z.number().default(10),
  starting_after: z.string().optional(),
  ending_before: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "starting_after": "startingAfter",
    "ending_before": "endingBefore",
  });
});

/** @internal */
export type GetEvalsRequest$Outbound = {
  limit: number;
  starting_after?: string | undefined;
  ending_before?: string | undefined;
};

/** @internal */
export const GetEvalsRequest$outboundSchema: z.ZodType<
  GetEvalsRequest$Outbound,
  z.ZodTypeDef,
  GetEvalsRequest
> = z.object({
  limit: z.number().default(10),
  startingAfter: z.string().optional(),
  endingBefore: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    startingAfter: "starting_after",
    endingBefore: "ending_before",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsRequest$ {
  /** @deprecated use `GetEvalsRequest$inboundSchema` instead. */
  export const inboundSchema = GetEvalsRequest$inboundSchema;
  /** @deprecated use `GetEvalsRequest$outboundSchema` instead. */
  export const outboundSchema = GetEvalsRequest$outboundSchema;
  /** @deprecated use `GetEvalsRequest$Outbound` instead. */
  export type Outbound = GetEvalsRequest$Outbound;
}

export function getEvalsRequestToJSON(
  getEvalsRequest: GetEvalsRequest,
): string {
  return JSON.stringify(GetEvalsRequest$outboundSchema.parse(getEvalsRequest));
}

export function getEvalsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsRequest' from JSON`,
  );
}

/** @internal */
export const GetEvalsObject$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsObject
> = z.nativeEnum(GetEvalsObject);

/** @internal */
export const GetEvalsObject$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsObject
> = GetEvalsObject$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsObject$ {
  /** @deprecated use `GetEvalsObject$inboundSchema` instead. */
  export const inboundSchema = GetEvalsObject$inboundSchema;
  /** @deprecated use `GetEvalsObject$outboundSchema` instead. */
  export const outboundSchema = GetEvalsObject$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$inboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$inboundSchema,
    value: z.number(),
    operator:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$inboundSchema,
  });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$Outbound =
  {
    enabled: boolean;
    type: string;
    value: number;
    operator: string;
  };

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$outboundSchema,
    value: z.number(),
    operator:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$Outbound` instead. */
  export type Outbound =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumberToJSON(
  getEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$outboundSchema
      .parse(getEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber),
  );
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$inboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$inboundSchema,
    value: z.boolean(),
  });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$Outbound =
  {
    enabled: boolean;
    type: string;
    value: boolean;
  };

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$outboundSchema,
    value: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$Outbound` instead. */
  export type Outbound =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONBooleanToJSON(
  getEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$outboundSchema
      .parse(getEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean),
  );
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONBooleanFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$inboundSchema:
  z.ZodType<
    GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$inboundSchema
    ),
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$inboundSchema
    ),
  ]);

/** @internal */
export type GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$Outbound =
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$Outbound
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$Outbound;

/** @internal */
export const GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$outboundSchema:
  z.ZodType<
    GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$Outbound,
    z.ZodTypeDef,
    GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig
  > = z.union([
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$outboundSchema
    ),
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$ {
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$outboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$Outbound` instead. */
  export type Outbound =
    GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$Outbound;
}

export function getEvalsDataEvalsResponse200ApplicationJSONGuardrailConfigToJSON(
  getEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig:
    GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig,
): string {
  return JSON.stringify(
    GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$outboundSchema
      .parse(getEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig),
  );
}

export function getEvalsDataEvalsResponse200ApplicationJSONGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType);

/** @internal */
export const GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType
  > = GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const Typescript$inboundSchema: z.ZodType<
  Typescript,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  description: z.string(),
  created: z.string().default("2025-07-09T19:14:36.589Z"),
  updated: z.string().default("2025-07-09T19:14:36.589Z"),
  guardrail_config: z.union([
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$inboundSchema
    ),
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$inboundSchema
    ),
  ]).optional(),
  code: z.string(),
  type:
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema,
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "guardrail_config": "guardrailConfig",
  });
});

/** @internal */
export type Typescript$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$Outbound
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$Outbound
    | undefined;
  code: string;
  type: string;
  key: string;
};

/** @internal */
export const Typescript$outboundSchema: z.ZodType<
  Typescript$Outbound,
  z.ZodTypeDef,
  Typescript
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-07-09T19:14:36.589Z"),
  updated: z.string().default("2025-07-09T19:14:36.589Z"),
  guardrailConfig: z.union([
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$outboundSchema
    ),
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$outboundSchema
    ),
  ]).optional(),
  code: z.string(),
  type:
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema,
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Typescript$ {
  /** @deprecated use `Typescript$inboundSchema` instead. */
  export const inboundSchema = Typescript$inboundSchema;
  /** @deprecated use `Typescript$outboundSchema` instead. */
  export const outboundSchema = Typescript$outboundSchema;
  /** @deprecated use `Typescript$Outbound` instead. */
  export type Outbound = Typescript$Outbound;
}

export function typescriptToJSON(typescript: Typescript): string {
  return JSON.stringify(Typescript$outboundSchema.parse(typescript));
}

export function typescriptFromJSON(
  jsonString: string,
): SafeParseResult<Typescript, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Typescript$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Typescript' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200Operator$inboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsResponse200Operator> = z
    .nativeEnum(GetEvalsGuardrailConfigEvalsResponse200Operator);

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200Operator$outboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsResponse200Operator> =
    GetEvalsGuardrailConfigEvalsResponse200Operator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200Operator$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Operator$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200Operator$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Operator$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200Operator$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200Number$inboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200Number,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$inboundSchema,
    value: z.number(),
    operator: GetEvalsGuardrailConfigEvalsResponse200Operator$inboundSchema,
  });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponse200Number$Outbound = {
  enabled: boolean;
  type: string;
  value: number;
  operator: string;
};

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200Number$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200Number$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponse200Number
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$outboundSchema,
    value: z.number(),
    operator: GetEvalsGuardrailConfigEvalsResponse200Operator$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200Number$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Number$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200Number$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Number$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200Number$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Number$Outbound` instead. */
  export type Outbound = GetEvalsGuardrailConfigEvalsResponse200Number$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponse200NumberToJSON(
  getEvalsGuardrailConfigEvalsResponse200Number:
    GetEvalsGuardrailConfigEvalsResponse200Number,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponse200Number$outboundSchema.parse(
      getEvalsGuardrailConfigEvalsResponse200Number,
    ),
  );
}

export function getEvalsGuardrailConfigEvalsResponse200NumberFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponse200Number,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponse200Number$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponse200Number' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200Boolean$inboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200Boolean,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$inboundSchema,
    value: z.boolean(),
  });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponse200Boolean$Outbound = {
  enabled: boolean;
  type: string;
  value: boolean;
};

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200Boolean$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200Boolean$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponse200Boolean
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$outboundSchema,
    value: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200Boolean$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Boolean$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200Boolean$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Boolean$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200Boolean$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Boolean$Outbound` instead. */
  export type Outbound =
    GetEvalsGuardrailConfigEvalsResponse200Boolean$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponse200BooleanToJSON(
  getEvalsGuardrailConfigEvalsResponse200Boolean:
    GetEvalsGuardrailConfigEvalsResponse200Boolean,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponse200Boolean$outboundSchema.parse(
      getEvalsGuardrailConfigEvalsResponse200Boolean,
    ),
  );
}

export function getEvalsGuardrailConfigEvalsResponse200BooleanFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponse200Boolean,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponse200Boolean$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponse200Boolean' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsResponse200GuardrailConfig$inboundSchema:
  z.ZodType<
    GetEvalsDataEvalsResponse200GuardrailConfig,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponse200Number$inboundSchema),
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponse200Boolean$inboundSchema),
  ]);

/** @internal */
export type GetEvalsDataEvalsResponse200GuardrailConfig$Outbound =
  | GetEvalsGuardrailConfigEvalsResponse200Number$Outbound
  | GetEvalsGuardrailConfigEvalsResponse200Boolean$Outbound;

/** @internal */
export const GetEvalsDataEvalsResponse200GuardrailConfig$outboundSchema:
  z.ZodType<
    GetEvalsDataEvalsResponse200GuardrailConfig$Outbound,
    z.ZodTypeDef,
    GetEvalsDataEvalsResponse200GuardrailConfig
  > = z.union([
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponse200Number$outboundSchema),
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponse200Boolean$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsResponse200GuardrailConfig$ {
  /** @deprecated use `GetEvalsDataEvalsResponse200GuardrailConfig$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsDataEvalsResponse200GuardrailConfig$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponse200GuardrailConfig$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsDataEvalsResponse200GuardrailConfig$outboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponse200GuardrailConfig$Outbound` instead. */
  export type Outbound = GetEvalsDataEvalsResponse200GuardrailConfig$Outbound;
}

export function getEvalsDataEvalsResponse200GuardrailConfigToJSON(
  getEvalsDataEvalsResponse200GuardrailConfig:
    GetEvalsDataEvalsResponse200GuardrailConfig,
): string {
  return JSON.stringify(
    GetEvalsDataEvalsResponse200GuardrailConfig$outboundSchema.parse(
      getEvalsDataEvalsResponse200GuardrailConfig,
    ),
  );
}

export function getEvalsDataEvalsResponse200GuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsDataEvalsResponse200GuardrailConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsDataEvalsResponse200GuardrailConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetEvalsDataEvalsResponse200GuardrailConfig' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<typeof GetEvalsDataEvalsResponse200ApplicationJSONType> = z
    .nativeEnum(GetEvalsDataEvalsResponse200ApplicationJSONType);

/** @internal */
export const GetEvalsDataEvalsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<typeof GetEvalsDataEvalsResponse200ApplicationJSONType> =
    GetEvalsDataEvalsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsResponse200ApplicationJSONType$ {
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsDataEvalsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsDataEvalsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const RagasMetric$inboundSchema: z.ZodNativeEnum<typeof RagasMetric> = z
  .nativeEnum(RagasMetric);

/** @internal */
export const RagasMetric$outboundSchema: z.ZodNativeEnum<typeof RagasMetric> =
  RagasMetric$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RagasMetric$ {
  /** @deprecated use `RagasMetric$inboundSchema` instead. */
  export const inboundSchema = RagasMetric$inboundSchema;
  /** @deprecated use `RagasMetric$outboundSchema` instead. */
  export const outboundSchema = RagasMetric$outboundSchema;
}

/** @internal */
export const Ragas$inboundSchema: z.ZodType<Ragas, z.ZodTypeDef, unknown> = z
  .object({
    _id: z.string(),
    description: z.string(),
    created: z.string().default("2025-07-09T19:14:36.589Z"),
    updated: z.string().default("2025-07-09T19:14:36.589Z"),
    guardrail_config: z.union([
      z.lazy(() => GetEvalsGuardrailConfigEvalsResponse200Number$inboundSchema),
      z.lazy(() =>
        GetEvalsGuardrailConfigEvalsResponse200Boolean$inboundSchema
      ),
    ]).optional(),
    type: GetEvalsDataEvalsResponse200ApplicationJSONType$inboundSchema,
    ragas_metric: RagasMetric$inboundSchema,
    key: z.string(),
    model: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "_id": "id",
      "guardrail_config": "guardrailConfig",
      "ragas_metric": "ragasMetric",
    });
  });

/** @internal */
export type Ragas$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | GetEvalsGuardrailConfigEvalsResponse200Number$Outbound
    | GetEvalsGuardrailConfigEvalsResponse200Boolean$Outbound
    | undefined;
  type: string;
  ragas_metric: string;
  key: string;
  model: string;
};

/** @internal */
export const Ragas$outboundSchema: z.ZodType<
  Ragas$Outbound,
  z.ZodTypeDef,
  Ragas
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-07-09T19:14:36.589Z"),
  updated: z.string().default("2025-07-09T19:14:36.589Z"),
  guardrailConfig: z.union([
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponse200Number$outboundSchema),
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponse200Boolean$outboundSchema),
  ]).optional(),
  type: GetEvalsDataEvalsResponse200ApplicationJSONType$outboundSchema,
  ragasMetric: RagasMetric$outboundSchema,
  key: z.string(),
  model: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
    ragasMetric: "ragas_metric",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Ragas$ {
  /** @deprecated use `Ragas$inboundSchema` instead. */
  export const inboundSchema = Ragas$inboundSchema;
  /** @deprecated use `Ragas$outboundSchema` instead. */
  export const outboundSchema = Ragas$outboundSchema;
  /** @deprecated use `Ragas$Outbound` instead. */
  export type Outbound = Ragas$Outbound;
}

export function ragasToJSON(ragas: Ragas): string {
  return JSON.stringify(Ragas$outboundSchema.parse(ragas));
}

export function ragasFromJSON(
  jsonString: string,
): SafeParseResult<Ragas, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Ragas$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Ragas' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponseOperator$inboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsResponseOperator> = z
    .nativeEnum(GetEvalsGuardrailConfigEvalsResponseOperator);

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponseOperator$outboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsResponseOperator> =
    GetEvalsGuardrailConfigEvalsResponseOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponseOperator$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseOperator$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponseOperator$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseOperator$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponseOperator$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponseNumber$inboundSchema:
  z.ZodType<GetEvalsGuardrailConfigEvalsResponseNumber, z.ZodTypeDef, unknown> =
    z.object({
      enabled: z.boolean(),
      type:
        GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$inboundSchema,
      value: z.number(),
      operator: GetEvalsGuardrailConfigEvalsResponseOperator$inboundSchema,
    });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponseNumber$Outbound = {
  enabled: boolean;
  type: string;
  value: number;
  operator: string;
};

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponseNumber$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponseNumber$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponseNumber
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$outboundSchema,
    value: z.number(),
    operator: GetEvalsGuardrailConfigEvalsResponseOperator$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponseNumber$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseNumber$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponseNumber$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseNumber$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponseNumber$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseNumber$Outbound` instead. */
  export type Outbound = GetEvalsGuardrailConfigEvalsResponseNumber$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponseNumberToJSON(
  getEvalsGuardrailConfigEvalsResponseNumber:
    GetEvalsGuardrailConfigEvalsResponseNumber,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponseNumber$outboundSchema.parse(
      getEvalsGuardrailConfigEvalsResponseNumber,
    ),
  );
}

export function getEvalsGuardrailConfigEvalsResponseNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponseNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponseNumber$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponseNumber' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponseBoolean$inboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponseBoolean,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema,
    value: z.boolean(),
  });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponseBoolean$Outbound = {
  enabled: boolean;
  type: string;
  value: boolean;
};

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponseBoolean$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponseBoolean$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponseBoolean
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$outboundSchema,
    value: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponseBoolean$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseBoolean$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponseBoolean$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseBoolean$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponseBoolean$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseBoolean$Outbound` instead. */
  export type Outbound = GetEvalsGuardrailConfigEvalsResponseBoolean$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponseBooleanToJSON(
  getEvalsGuardrailConfigEvalsResponseBoolean:
    GetEvalsGuardrailConfigEvalsResponseBoolean,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponseBoolean$outboundSchema.parse(
      getEvalsGuardrailConfigEvalsResponseBoolean,
    ),
  );
}

export function getEvalsGuardrailConfigEvalsResponseBooleanFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponseBoolean,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponseBoolean$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponseBoolean' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsResponseGuardrailConfig$inboundSchema: z.ZodType<
  GetEvalsDataEvalsResponseGuardrailConfig,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetEvalsGuardrailConfigEvalsResponseNumber$inboundSchema),
  z.lazy(() => GetEvalsGuardrailConfigEvalsResponseBoolean$inboundSchema),
]);

/** @internal */
export type GetEvalsDataEvalsResponseGuardrailConfig$Outbound =
  | GetEvalsGuardrailConfigEvalsResponseNumber$Outbound
  | GetEvalsGuardrailConfigEvalsResponseBoolean$Outbound;

/** @internal */
export const GetEvalsDataEvalsResponseGuardrailConfig$outboundSchema: z.ZodType<
  GetEvalsDataEvalsResponseGuardrailConfig$Outbound,
  z.ZodTypeDef,
  GetEvalsDataEvalsResponseGuardrailConfig
> = z.union([
  z.lazy(() => GetEvalsGuardrailConfigEvalsResponseNumber$outboundSchema),
  z.lazy(() => GetEvalsGuardrailConfigEvalsResponseBoolean$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsResponseGuardrailConfig$ {
  /** @deprecated use `GetEvalsDataEvalsResponseGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsDataEvalsResponseGuardrailConfig$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponseGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsDataEvalsResponseGuardrailConfig$outboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponseGuardrailConfig$Outbound` instead. */
  export type Outbound = GetEvalsDataEvalsResponseGuardrailConfig$Outbound;
}

export function getEvalsDataEvalsResponseGuardrailConfigToJSON(
  getEvalsDataEvalsResponseGuardrailConfig:
    GetEvalsDataEvalsResponseGuardrailConfig,
): string {
  return JSON.stringify(
    GetEvalsDataEvalsResponseGuardrailConfig$outboundSchema.parse(
      getEvalsDataEvalsResponseGuardrailConfig,
    ),
  );
}

export function getEvalsDataEvalsResponseGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsDataEvalsResponseGuardrailConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsDataEvalsResponseGuardrailConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetEvalsDataEvalsResponseGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsResponse200Type$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsDataEvalsResponse200Type
> = z.nativeEnum(GetEvalsDataEvalsResponse200Type);

/** @internal */
export const GetEvalsDataEvalsResponse200Type$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsDataEvalsResponse200Type
> = GetEvalsDataEvalsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsResponse200Type$ {
  /** @deprecated use `GetEvalsDataEvalsResponse200Type$inboundSchema` instead. */
  export const inboundSchema = GetEvalsDataEvalsResponse200Type$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponse200Type$outboundSchema` instead. */
  export const outboundSchema = GetEvalsDataEvalsResponse200Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$outboundSchema;
}

/** @internal */
export const TwentyFour$inboundSchema: z.ZodType<
  TwentyFour,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$inboundSchema,
});

/** @internal */
export type TwentyFour$Outbound = {
  type: string;
};

/** @internal */
export const TwentyFour$outboundSchema: z.ZodType<
  TwentyFour$Outbound,
  z.ZodTypeDef,
  TwentyFour
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwentyFour$ {
  /** @deprecated use `TwentyFour$inboundSchema` instead. */
  export const inboundSchema = TwentyFour$inboundSchema;
  /** @deprecated use `TwentyFour$outboundSchema` instead. */
  export const outboundSchema = TwentyFour$outboundSchema;
  /** @deprecated use `TwentyFour$Outbound` instead. */
  export type Outbound = TwentyFour$Outbound;
}

export function twentyFourToJSON(twentyFour: TwentyFour): string {
  return JSON.stringify(TwentyFour$outboundSchema.parse(twentyFour));
}

export function twentyFourFromJSON(
  jsonString: string,
): SafeParseResult<TwentyFour, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TwentyFour$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TwentyFour' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$outboundSchema;
}

/** @internal */
export const TwentyThree$inboundSchema: z.ZodType<
  TwentyThree,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$inboundSchema,
});

/** @internal */
export type TwentyThree$Outbound = {
  type: string;
};

/** @internal */
export const TwentyThree$outboundSchema: z.ZodType<
  TwentyThree$Outbound,
  z.ZodTypeDef,
  TwentyThree
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwentyThree$ {
  /** @deprecated use `TwentyThree$inboundSchema` instead. */
  export const inboundSchema = TwentyThree$inboundSchema;
  /** @deprecated use `TwentyThree$outboundSchema` instead. */
  export const outboundSchema = TwentyThree$outboundSchema;
  /** @deprecated use `TwentyThree$Outbound` instead. */
  export type Outbound = TwentyThree$Outbound;
}

export function twentyThreeToJSON(twentyThree: TwentyThree): string {
  return JSON.stringify(TwentyThree$outboundSchema.parse(twentyThree));
}

export function twentyThreeFromJSON(
  jsonString: string,
): SafeParseResult<TwentyThree, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TwentyThree$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TwentyThree' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$outboundSchema;
}

/** @internal */
export const TwentyTwo$inboundSchema: z.ZodType<
  TwentyTwo,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$inboundSchema,
});

/** @internal */
export type TwentyTwo$Outbound = {
  type: string;
};

/** @internal */
export const TwentyTwo$outboundSchema: z.ZodType<
  TwentyTwo$Outbound,
  z.ZodTypeDef,
  TwentyTwo
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwentyTwo$ {
  /** @deprecated use `TwentyTwo$inboundSchema` instead. */
  export const inboundSchema = TwentyTwo$inboundSchema;
  /** @deprecated use `TwentyTwo$outboundSchema` instead. */
  export const outboundSchema = TwentyTwo$outboundSchema;
  /** @deprecated use `TwentyTwo$Outbound` instead. */
  export type Outbound = TwentyTwo$Outbound;
}

export function twentyTwoToJSON(twentyTwo: TwentyTwo): string {
  return JSON.stringify(TwentyTwo$outboundSchema.parse(twentyTwo));
}

export function twentyTwoFromJSON(
  jsonString: string,
): SafeParseResult<TwentyTwo, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TwentyTwo$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TwentyTwo' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$outboundSchema;
}

/** @internal */
export const TwentyOne$inboundSchema: z.ZodType<
  TwentyOne,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$inboundSchema,
});

/** @internal */
export type TwentyOne$Outbound = {
  type: string;
};

/** @internal */
export const TwentyOne$outboundSchema: z.ZodType<
  TwentyOne$Outbound,
  z.ZodTypeDef,
  TwentyOne
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwentyOne$ {
  /** @deprecated use `TwentyOne$inboundSchema` instead. */
  export const inboundSchema = TwentyOne$inboundSchema;
  /** @deprecated use `TwentyOne$outboundSchema` instead. */
  export const outboundSchema = TwentyOne$outboundSchema;
  /** @deprecated use `TwentyOne$Outbound` instead. */
  export type Outbound = TwentyOne$Outbound;
}

export function twentyOneToJSON(twentyOne: TwentyOne): string {
  return JSON.stringify(TwentyOne$outboundSchema.parse(twentyOne));
}

export function twentyOneFromJSON(
  jsonString: string,
): SafeParseResult<TwentyOne, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TwentyOne$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TwentyOne' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$outboundSchema;
}

/** @internal */
export const Twenty$inboundSchema: z.ZodType<Twenty, z.ZodTypeDef, unknown> = z
  .object({
    type:
      GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$inboundSchema,
  });

/** @internal */
export type Twenty$Outbound = {
  type: string;
};

/** @internal */
export const Twenty$outboundSchema: z.ZodType<
  Twenty$Outbound,
  z.ZodTypeDef,
  Twenty
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Twenty$ {
  /** @deprecated use `Twenty$inboundSchema` instead. */
  export const inboundSchema = Twenty$inboundSchema;
  /** @deprecated use `Twenty$outboundSchema` instead. */
  export const outboundSchema = Twenty$outboundSchema;
  /** @deprecated use `Twenty$Outbound` instead. */
  export type Outbound = Twenty$Outbound;
}

export function twentyToJSON(twenty: Twenty): string {
  return JSON.stringify(Twenty$outboundSchema.parse(twenty));
}

export function twentyFromJSON(
  jsonString: string,
): SafeParseResult<Twenty, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Twenty$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Twenty' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$outboundSchema;
}

/** @internal */
export const Nineteen$inboundSchema: z.ZodType<
  Nineteen,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$inboundSchema,
});

/** @internal */
export type Nineteen$Outbound = {
  type: string;
};

/** @internal */
export const Nineteen$outboundSchema: z.ZodType<
  Nineteen$Outbound,
  z.ZodTypeDef,
  Nineteen
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Nineteen$ {
  /** @deprecated use `Nineteen$inboundSchema` instead. */
  export const inboundSchema = Nineteen$inboundSchema;
  /** @deprecated use `Nineteen$outboundSchema` instead. */
  export const outboundSchema = Nineteen$outboundSchema;
  /** @deprecated use `Nineteen$Outbound` instead. */
  export type Outbound = Nineteen$Outbound;
}

export function nineteenToJSON(nineteen: Nineteen): string {
  return JSON.stringify(Nineteen$outboundSchema.parse(nineteen));
}

export function nineteenFromJSON(
  jsonString: string,
): SafeParseResult<Nineteen, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Nineteen$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Nineteen' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$outboundSchema;
}

/** @internal */
export const Eighteen$inboundSchema: z.ZodType<
  Eighteen,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$inboundSchema,
});

/** @internal */
export type Eighteen$Outbound = {
  type: string;
};

/** @internal */
export const Eighteen$outboundSchema: z.ZodType<
  Eighteen$Outbound,
  z.ZodTypeDef,
  Eighteen
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Eighteen$ {
  /** @deprecated use `Eighteen$inboundSchema` instead. */
  export const inboundSchema = Eighteen$inboundSchema;
  /** @deprecated use `Eighteen$outboundSchema` instead. */
  export const outboundSchema = Eighteen$outboundSchema;
  /** @deprecated use `Eighteen$Outbound` instead. */
  export type Outbound = Eighteen$Outbound;
}

export function eighteenToJSON(eighteen: Eighteen): string {
  return JSON.stringify(Eighteen$outboundSchema.parse(eighteen));
}

export function eighteenFromJSON(
  jsonString: string,
): SafeParseResult<Eighteen, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Eighteen$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Eighteen' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$outboundSchema;
}

/** @internal */
export const Seventeen$inboundSchema: z.ZodType<
  Seventeen,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$inboundSchema,
});

/** @internal */
export type Seventeen$Outbound = {
  type: string;
};

/** @internal */
export const Seventeen$outboundSchema: z.ZodType<
  Seventeen$Outbound,
  z.ZodTypeDef,
  Seventeen
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Seventeen$ {
  /** @deprecated use `Seventeen$inboundSchema` instead. */
  export const inboundSchema = Seventeen$inboundSchema;
  /** @deprecated use `Seventeen$outboundSchema` instead. */
  export const outboundSchema = Seventeen$outboundSchema;
  /** @deprecated use `Seventeen$Outbound` instead. */
  export type Outbound = Seventeen$Outbound;
}

export function seventeenToJSON(seventeen: Seventeen): string {
  return JSON.stringify(Seventeen$outboundSchema.parse(seventeen));
}

export function seventeenFromJSON(
  jsonString: string,
): SafeParseResult<Seventeen, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Seventeen$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Seventeen' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$outboundSchema;
}

/** @internal */
export const Sixteen$inboundSchema: z.ZodType<Sixteen, z.ZodTypeDef, unknown> =
  z.object({
    type:
      GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$inboundSchema,
  });

/** @internal */
export type Sixteen$Outbound = {
  type: string;
};

/** @internal */
export const Sixteen$outboundSchema: z.ZodType<
  Sixteen$Outbound,
  z.ZodTypeDef,
  Sixteen
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Sixteen$ {
  /** @deprecated use `Sixteen$inboundSchema` instead. */
  export const inboundSchema = Sixteen$inboundSchema;
  /** @deprecated use `Sixteen$outboundSchema` instead. */
  export const outboundSchema = Sixteen$outboundSchema;
  /** @deprecated use `Sixteen$Outbound` instead. */
  export type Outbound = Sixteen$Outbound;
}

export function sixteenToJSON(sixteen: Sixteen): string {
  return JSON.stringify(Sixteen$outboundSchema.parse(sixteen));
}

export function sixteenFromJSON(
  jsonString: string,
): SafeParseResult<Sixteen, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Sixteen$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Sixteen' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$outboundSchema;
}

/** @internal */
export const Fifteen$inboundSchema: z.ZodType<Fifteen, z.ZodTypeDef, unknown> =
  z.object({
    type:
      GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$inboundSchema,
    pattern: z.string(),
  });

/** @internal */
export type Fifteen$Outbound = {
  type: string;
  pattern: string;
};

/** @internal */
export const Fifteen$outboundSchema: z.ZodType<
  Fifteen$Outbound,
  z.ZodTypeDef,
  Fifteen
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$outboundSchema,
  pattern: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Fifteen$ {
  /** @deprecated use `Fifteen$inboundSchema` instead. */
  export const inboundSchema = Fifteen$inboundSchema;
  /** @deprecated use `Fifteen$outboundSchema` instead. */
  export const outboundSchema = Fifteen$outboundSchema;
  /** @deprecated use `Fifteen$Outbound` instead. */
  export type Outbound = Fifteen$Outbound;
}

export function fifteenToJSON(fifteen: Fifteen): string {
  return JSON.stringify(Fifteen$outboundSchema.parse(fifteen));
}

export function fifteenFromJSON(
  jsonString: string,
): SafeParseResult<Fifteen, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Fifteen$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Fifteen' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$outboundSchema;
}

/** @internal */
export const Fourteen$inboundSchema: z.ZodType<
  Fourteen,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$inboundSchema,
});

/** @internal */
export type Fourteen$Outbound = {
  type: string;
};

/** @internal */
export const Fourteen$outboundSchema: z.ZodType<
  Fourteen$Outbound,
  z.ZodTypeDef,
  Fourteen
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Fourteen$ {
  /** @deprecated use `Fourteen$inboundSchema` instead. */
  export const inboundSchema = Fourteen$inboundSchema;
  /** @deprecated use `Fourteen$outboundSchema` instead. */
  export const outboundSchema = Fourteen$outboundSchema;
  /** @deprecated use `Fourteen$Outbound` instead. */
  export type Outbound = Fourteen$Outbound;
}

export function fourteenToJSON(fourteen: Fourteen): string {
  return JSON.stringify(Fourteen$outboundSchema.parse(fourteen));
}

export function fourteenFromJSON(
  jsonString: string,
): SafeParseResult<Fourteen, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Fourteen$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Fourteen' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$outboundSchema;
}

/** @internal */
export const Thirteen$inboundSchema: z.ZodType<
  Thirteen,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$inboundSchema,
  value: z.number(),
});

/** @internal */
export type Thirteen$Outbound = {
  type: string;
  value: number;
};

/** @internal */
export const Thirteen$outboundSchema: z.ZodType<
  Thirteen$Outbound,
  z.ZodTypeDef,
  Thirteen
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$outboundSchema,
  value: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Thirteen$ {
  /** @deprecated use `Thirteen$inboundSchema` instead. */
  export const inboundSchema = Thirteen$inboundSchema;
  /** @deprecated use `Thirteen$outboundSchema` instead. */
  export const outboundSchema = Thirteen$outboundSchema;
  /** @deprecated use `Thirteen$Outbound` instead. */
  export type Outbound = Thirteen$Outbound;
}

export function thirteenToJSON(thirteen: Thirteen): string {
  return JSON.stringify(Thirteen$outboundSchema.parse(thirteen));
}

export function thirteenFromJSON(
  jsonString: string,
): SafeParseResult<Thirteen, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Thirteen$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Thirteen' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$outboundSchema;
}

/** @internal */
export const Twelve$inboundSchema: z.ZodType<Twelve, z.ZodTypeDef, unknown> = z
  .object({
    type:
      GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$inboundSchema,
    min: z.number(),
    max: z.number(),
  });

/** @internal */
export type Twelve$Outbound = {
  type: string;
  min: number;
  max: number;
};

/** @internal */
export const Twelve$outboundSchema: z.ZodType<
  Twelve$Outbound,
  z.ZodTypeDef,
  Twelve
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$outboundSchema,
  min: z.number(),
  max: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Twelve$ {
  /** @deprecated use `Twelve$inboundSchema` instead. */
  export const inboundSchema = Twelve$inboundSchema;
  /** @deprecated use `Twelve$outboundSchema` instead. */
  export const outboundSchema = Twelve$outboundSchema;
  /** @deprecated use `Twelve$Outbound` instead. */
  export type Outbound = Twelve$Outbound;
}

export function twelveToJSON(twelve: Twelve): string {
  return JSON.stringify(Twelve$outboundSchema.parse(twelve));
}

export function twelveFromJSON(
  jsonString: string,
): SafeParseResult<Twelve, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Twelve$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Twelve' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$outboundSchema;
}

/** @internal */
export const Eleven$inboundSchema: z.ZodType<Eleven, z.ZodTypeDef, unknown> = z
  .object({
    type:
      GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$inboundSchema,
    value: z.number(),
  });

/** @internal */
export type Eleven$Outbound = {
  type: string;
  value: number;
};

/** @internal */
export const Eleven$outboundSchema: z.ZodType<
  Eleven$Outbound,
  z.ZodTypeDef,
  Eleven
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$outboundSchema,
  value: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Eleven$ {
  /** @deprecated use `Eleven$inboundSchema` instead. */
  export const inboundSchema = Eleven$inboundSchema;
  /** @deprecated use `Eleven$outboundSchema` instead. */
  export const outboundSchema = Eleven$outboundSchema;
  /** @deprecated use `Eleven$Outbound` instead. */
  export type Outbound = Eleven$Outbound;
}

export function elevenToJSON(eleven: Eleven): string {
  return JSON.stringify(Eleven$outboundSchema.parse(eleven));
}

export function elevenFromJSON(
  jsonString: string,
): SafeParseResult<Eleven, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Eleven$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Eleven' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$outboundSchema;
}

/** @internal */
export const Ten$inboundSchema: z.ZodType<Ten, z.ZodTypeDef, unknown> = z
  .object({
    type:
      GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$inboundSchema,
  });

/** @internal */
export type Ten$Outbound = {
  type: string;
};

/** @internal */
export const Ten$outboundSchema: z.ZodType<Ten$Outbound, z.ZodTypeDef, Ten> = z
  .object({
    type:
      GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Ten$ {
  /** @deprecated use `Ten$inboundSchema` instead. */
  export const inboundSchema = Ten$inboundSchema;
  /** @deprecated use `Ten$outboundSchema` instead. */
  export const outboundSchema = Ten$outboundSchema;
  /** @deprecated use `Ten$Outbound` instead. */
  export type Outbound = Ten$Outbound;
}

export function tenToJSON(ten: Ten): string {
  return JSON.stringify(Ten$outboundSchema.parse(ten));
}

export function tenFromJSON(
  jsonString: string,
): SafeParseResult<Ten, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Ten$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Ten' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$outboundSchema;
}

/** @internal */
export const Nine$inboundSchema: z.ZodType<Nine, z.ZodTypeDef, unknown> = z
  .object({
    type:
      GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema,
    value: z.string(),
  });

/** @internal */
export type Nine$Outbound = {
  type: string;
  value: string;
};

/** @internal */
export const Nine$outboundSchema: z.ZodType<Nine$Outbound, z.ZodTypeDef, Nine> =
  z.object({
    type:
      GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$outboundSchema,
    value: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Nine$ {
  /** @deprecated use `Nine$inboundSchema` instead. */
  export const inboundSchema = Nine$inboundSchema;
  /** @deprecated use `Nine$outboundSchema` instead. */
  export const outboundSchema = Nine$outboundSchema;
  /** @deprecated use `Nine$Outbound` instead. */
  export type Outbound = Nine$Outbound;
}

export function nineToJSON(nine: Nine): string {
  return JSON.stringify(Nine$outboundSchema.parse(nine));
}

export function nineFromJSON(
  jsonString: string,
): SafeParseResult<Nine, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Nine$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Nine' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$outboundSchema;
}

/** @internal */
export const Eight$inboundSchema: z.ZodType<Eight, z.ZodTypeDef, unknown> = z
  .object({
    type:
      GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema,
    value: z.string(),
  });

/** @internal */
export type Eight$Outbound = {
  type: string;
  value: string;
};

/** @internal */
export const Eight$outboundSchema: z.ZodType<
  Eight$Outbound,
  z.ZodTypeDef,
  Eight
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$outboundSchema,
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Eight$ {
  /** @deprecated use `Eight$inboundSchema` instead. */
  export const inboundSchema = Eight$inboundSchema;
  /** @deprecated use `Eight$outboundSchema` instead. */
  export const outboundSchema = Eight$outboundSchema;
  /** @deprecated use `Eight$Outbound` instead. */
  export type Outbound = Eight$Outbound;
}

export function eightToJSON(eight: Eight): string {
  return JSON.stringify(Eight$outboundSchema.parse(eight));
}

export function eightFromJSON(
  jsonString: string,
): SafeParseResult<Eight, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Eight$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Eight' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const Seven$inboundSchema: z.ZodType<Seven, z.ZodTypeDef, unknown> = z
  .object({
    type:
      GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema,
  });

/** @internal */
export type Seven$Outbound = {
  type: string;
};

/** @internal */
export const Seven$outboundSchema: z.ZodType<
  Seven$Outbound,
  z.ZodTypeDef,
  Seven
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Seven$ {
  /** @deprecated use `Seven$inboundSchema` instead. */
  export const inboundSchema = Seven$inboundSchema;
  /** @deprecated use `Seven$outboundSchema` instead. */
  export const outboundSchema = Seven$outboundSchema;
  /** @deprecated use `Seven$Outbound` instead. */
  export type Outbound = Seven$Outbound;
}

export function sevenToJSON(seven: Seven): string {
  return JSON.stringify(Seven$outboundSchema.parse(seven));
}

export function sevenFromJSON(
  jsonString: string,
): SafeParseResult<Seven, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Seven$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Seven' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType
  > = z.nativeEnum(GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType);

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType
  > = GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const Six$inboundSchema: z.ZodType<Six, z.ZodTypeDef, unknown> = z
  .object({
    type:
      GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$inboundSchema,
  });

/** @internal */
export type Six$Outbound = {
  type: string;
};

/** @internal */
export const Six$outboundSchema: z.ZodType<Six$Outbound, z.ZodTypeDef, Six> = z
  .object({
    type:
      GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Six$ {
  /** @deprecated use `Six$inboundSchema` instead. */
  export const inboundSchema = Six$inboundSchema;
  /** @deprecated use `Six$outboundSchema` instead. */
  export const outboundSchema = Six$outboundSchema;
  /** @deprecated use `Six$Outbound` instead. */
  export type Outbound = Six$Outbound;
}

export function sixToJSON(six: Six): string {
  return JSON.stringify(Six$outboundSchema.parse(six));
}

export function sixFromJSON(
  jsonString: string,
): SafeParseResult<Six, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Six$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Six' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof GetEvalsFunctionParamsEvalsResponse200Type> = z
    .nativeEnum(GetEvalsFunctionParamsEvalsResponse200Type);

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof GetEvalsFunctionParamsEvalsResponse200Type> =
    GetEvalsFunctionParamsEvalsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200Type$outboundSchema;
}

/** @internal */
export const Five$inboundSchema: z.ZodType<Five, z.ZodTypeDef, unknown> = z
  .object({
    type: GetEvalsFunctionParamsEvalsResponse200Type$inboundSchema,
  });

/** @internal */
export type Five$Outbound = {
  type: string;
};

/** @internal */
export const Five$outboundSchema: z.ZodType<Five$Outbound, z.ZodTypeDef, Five> =
  z.object({
    type: GetEvalsFunctionParamsEvalsResponse200Type$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Five$ {
  /** @deprecated use `Five$inboundSchema` instead. */
  export const inboundSchema = Five$inboundSchema;
  /** @deprecated use `Five$outboundSchema` instead. */
  export const outboundSchema = Five$outboundSchema;
  /** @deprecated use `Five$Outbound` instead. */
  export type Outbound = Five$Outbound;
}

export function fiveToJSON(five: Five): string {
  return JSON.stringify(Five$outboundSchema.parse(five));
}

export function fiveFromJSON(
  jsonString: string,
): SafeParseResult<Five, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Five$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Five' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof GetEvalsFunctionParamsEvalsResponseType> = z
    .nativeEnum(GetEvalsFunctionParamsEvalsResponseType);

/** @internal */
export const GetEvalsFunctionParamsEvalsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof GetEvalsFunctionParamsEvalsResponseType> =
    GetEvalsFunctionParamsEvalsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponseType$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponseType$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponseType$outboundSchema;
}

/** @internal */
export const FunctionParams4$inboundSchema: z.ZodType<
  FunctionParams4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetEvalsFunctionParamsEvalsResponseType$inboundSchema,
  keywords: z.array(z.string()),
});

/** @internal */
export type FunctionParams4$Outbound = {
  type: string;
  keywords: Array<string>;
};

/** @internal */
export const FunctionParams4$outboundSchema: z.ZodType<
  FunctionParams4$Outbound,
  z.ZodTypeDef,
  FunctionParams4
> = z.object({
  type: GetEvalsFunctionParamsEvalsResponseType$outboundSchema,
  keywords: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FunctionParams4$ {
  /** @deprecated use `FunctionParams4$inboundSchema` instead. */
  export const inboundSchema = FunctionParams4$inboundSchema;
  /** @deprecated use `FunctionParams4$outboundSchema` instead. */
  export const outboundSchema = FunctionParams4$outboundSchema;
  /** @deprecated use `FunctionParams4$Outbound` instead. */
  export type Outbound = FunctionParams4$Outbound;
}

export function functionParams4ToJSON(
  functionParams4: FunctionParams4,
): string {
  return JSON.stringify(FunctionParams4$outboundSchema.parse(functionParams4));
}

export function functionParams4FromJSON(
  jsonString: string,
): SafeParseResult<FunctionParams4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FunctionParams4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FunctionParams4' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsType$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsFunctionParamsEvalsType
> = z.nativeEnum(GetEvalsFunctionParamsEvalsType);

/** @internal */
export const GetEvalsFunctionParamsEvalsType$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsFunctionParamsEvalsType
> = GetEvalsFunctionParamsEvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsType$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsType$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParamsEvalsType$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsType$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParamsEvalsType$outboundSchema;
}

/** @internal */
export const FunctionParams3$inboundSchema: z.ZodType<
  FunctionParams3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetEvalsFunctionParamsEvalsType$inboundSchema,
  keywords: z.array(z.string()),
});

/** @internal */
export type FunctionParams3$Outbound = {
  type: string;
  keywords: Array<string>;
};

/** @internal */
export const FunctionParams3$outboundSchema: z.ZodType<
  FunctionParams3$Outbound,
  z.ZodTypeDef,
  FunctionParams3
> = z.object({
  type: GetEvalsFunctionParamsEvalsType$outboundSchema,
  keywords: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FunctionParams3$ {
  /** @deprecated use `FunctionParams3$inboundSchema` instead. */
  export const inboundSchema = FunctionParams3$inboundSchema;
  /** @deprecated use `FunctionParams3$outboundSchema` instead. */
  export const outboundSchema = FunctionParams3$outboundSchema;
  /** @deprecated use `FunctionParams3$Outbound` instead. */
  export type Outbound = FunctionParams3$Outbound;
}

export function functionParams3ToJSON(
  functionParams3: FunctionParams3,
): string {
  return JSON.stringify(FunctionParams3$outboundSchema.parse(functionParams3));
}

export function functionParams3FromJSON(
  jsonString: string,
): SafeParseResult<FunctionParams3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FunctionParams3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FunctionParams3' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsType$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsFunctionParamsType
> = z.nativeEnum(GetEvalsFunctionParamsType);

/** @internal */
export const GetEvalsFunctionParamsType$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsFunctionParamsType
> = GetEvalsFunctionParamsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsType$ {
  /** @deprecated use `GetEvalsFunctionParamsType$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParamsType$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsType$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParamsType$outboundSchema;
}

/** @internal */
export const FunctionParams2$inboundSchema: z.ZodType<
  FunctionParams2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetEvalsFunctionParamsType$inboundSchema,
  keywords: z.array(z.string()),
});

/** @internal */
export type FunctionParams2$Outbound = {
  type: string;
  keywords: Array<string>;
};

/** @internal */
export const FunctionParams2$outboundSchema: z.ZodType<
  FunctionParams2$Outbound,
  z.ZodTypeDef,
  FunctionParams2
> = z.object({
  type: GetEvalsFunctionParamsType$outboundSchema,
  keywords: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FunctionParams2$ {
  /** @deprecated use `FunctionParams2$inboundSchema` instead. */
  export const inboundSchema = FunctionParams2$inboundSchema;
  /** @deprecated use `FunctionParams2$outboundSchema` instead. */
  export const outboundSchema = FunctionParams2$outboundSchema;
  /** @deprecated use `FunctionParams2$Outbound` instead. */
  export type Outbound = FunctionParams2$Outbound;
}

export function functionParams2ToJSON(
  functionParams2: FunctionParams2,
): string {
  return JSON.stringify(FunctionParams2$outboundSchema.parse(functionParams2));
}

export function functionParams2FromJSON(
  jsonString: string,
): SafeParseResult<FunctionParams2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FunctionParams2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FunctionParams2' from JSON`,
  );
}

/** @internal */
export const FunctionParamsType$inboundSchema: z.ZodNativeEnum<
  typeof FunctionParamsType
> = z.nativeEnum(FunctionParamsType);

/** @internal */
export const FunctionParamsType$outboundSchema: z.ZodNativeEnum<
  typeof FunctionParamsType
> = FunctionParamsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FunctionParamsType$ {
  /** @deprecated use `FunctionParamsType$inboundSchema` instead. */
  export const inboundSchema = FunctionParamsType$inboundSchema;
  /** @deprecated use `FunctionParamsType$outboundSchema` instead. */
  export const outboundSchema = FunctionParamsType$outboundSchema;
}

/** @internal */
export const FunctionParams1$inboundSchema: z.ZodType<
  FunctionParams1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FunctionParamsType$inboundSchema,
  value: z.string(),
});

/** @internal */
export type FunctionParams1$Outbound = {
  type: string;
  value: string;
};

/** @internal */
export const FunctionParams1$outboundSchema: z.ZodType<
  FunctionParams1$Outbound,
  z.ZodTypeDef,
  FunctionParams1
> = z.object({
  type: FunctionParamsType$outboundSchema,
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FunctionParams1$ {
  /** @deprecated use `FunctionParams1$inboundSchema` instead. */
  export const inboundSchema = FunctionParams1$inboundSchema;
  /** @deprecated use `FunctionParams1$outboundSchema` instead. */
  export const outboundSchema = FunctionParams1$outboundSchema;
  /** @deprecated use `FunctionParams1$Outbound` instead. */
  export type Outbound = FunctionParams1$Outbound;
}

export function functionParams1ToJSON(
  functionParams1: FunctionParams1,
): string {
  return JSON.stringify(FunctionParams1$outboundSchema.parse(functionParams1));
}

export function functionParams1FromJSON(
  jsonString: string,
): SafeParseResult<FunctionParams1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FunctionParams1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FunctionParams1' from JSON`,
  );
}

/** @internal */
export const DataFunctionParams$inboundSchema: z.ZodType<
  DataFunctionParams,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => Twelve$inboundSchema),
  z.lazy(() => FunctionParams1$inboundSchema),
  z.lazy(() => FunctionParams2$inboundSchema),
  z.lazy(() => FunctionParams3$inboundSchema),
  z.lazy(() => FunctionParams4$inboundSchema),
  z.lazy(() => Eight$inboundSchema),
  z.lazy(() => Nine$inboundSchema),
  z.lazy(() => Eleven$inboundSchema),
  z.lazy(() => Thirteen$inboundSchema),
  z.lazy(() => Fifteen$inboundSchema),
  z.lazy(() => Five$inboundSchema),
  z.lazy(() => Six$inboundSchema),
  z.lazy(() => Seven$inboundSchema),
  z.lazy(() => Ten$inboundSchema),
  z.lazy(() => Fourteen$inboundSchema),
  z.lazy(() => Sixteen$inboundSchema),
  z.lazy(() => Seventeen$inboundSchema),
  z.lazy(() => Eighteen$inboundSchema),
  z.lazy(() => Nineteen$inboundSchema),
  z.lazy(() => Twenty$inboundSchema),
  z.lazy(() => TwentyOne$inboundSchema),
  z.lazy(() => TwentyTwo$inboundSchema),
  z.lazy(() => TwentyThree$inboundSchema),
  z.lazy(() => TwentyFour$inboundSchema),
]);

/** @internal */
export type DataFunctionParams$Outbound =
  | Twelve$Outbound
  | FunctionParams1$Outbound
  | FunctionParams2$Outbound
  | FunctionParams3$Outbound
  | FunctionParams4$Outbound
  | Eight$Outbound
  | Nine$Outbound
  | Eleven$Outbound
  | Thirteen$Outbound
  | Fifteen$Outbound
  | Five$Outbound
  | Six$Outbound
  | Seven$Outbound
  | Ten$Outbound
  | Fourteen$Outbound
  | Sixteen$Outbound
  | Seventeen$Outbound
  | Eighteen$Outbound
  | Nineteen$Outbound
  | Twenty$Outbound
  | TwentyOne$Outbound
  | TwentyTwo$Outbound
  | TwentyThree$Outbound
  | TwentyFour$Outbound;

/** @internal */
export const DataFunctionParams$outboundSchema: z.ZodType<
  DataFunctionParams$Outbound,
  z.ZodTypeDef,
  DataFunctionParams
> = z.union([
  z.lazy(() => Twelve$outboundSchema),
  z.lazy(() => FunctionParams1$outboundSchema),
  z.lazy(() => FunctionParams2$outboundSchema),
  z.lazy(() => FunctionParams3$outboundSchema),
  z.lazy(() => FunctionParams4$outboundSchema),
  z.lazy(() => Eight$outboundSchema),
  z.lazy(() => Nine$outboundSchema),
  z.lazy(() => Eleven$outboundSchema),
  z.lazy(() => Thirteen$outboundSchema),
  z.lazy(() => Fifteen$outboundSchema),
  z.lazy(() => Five$outboundSchema),
  z.lazy(() => Six$outboundSchema),
  z.lazy(() => Seven$outboundSchema),
  z.lazy(() => Ten$outboundSchema),
  z.lazy(() => Fourteen$outboundSchema),
  z.lazy(() => Sixteen$outboundSchema),
  z.lazy(() => Seventeen$outboundSchema),
  z.lazy(() => Eighteen$outboundSchema),
  z.lazy(() => Nineteen$outboundSchema),
  z.lazy(() => Twenty$outboundSchema),
  z.lazy(() => TwentyOne$outboundSchema),
  z.lazy(() => TwentyTwo$outboundSchema),
  z.lazy(() => TwentyThree$outboundSchema),
  z.lazy(() => TwentyFour$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataFunctionParams$ {
  /** @deprecated use `DataFunctionParams$inboundSchema` instead. */
  export const inboundSchema = DataFunctionParams$inboundSchema;
  /** @deprecated use `DataFunctionParams$outboundSchema` instead. */
  export const outboundSchema = DataFunctionParams$outboundSchema;
  /** @deprecated use `DataFunctionParams$Outbound` instead. */
  export type Outbound = DataFunctionParams$Outbound;
}

export function dataFunctionParamsToJSON(
  dataFunctionParams: DataFunctionParams,
): string {
  return JSON.stringify(
    DataFunctionParams$outboundSchema.parse(dataFunctionParams),
  );
}

export function dataFunctionParamsFromJSON(
  jsonString: string,
): SafeParseResult<DataFunctionParams, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DataFunctionParams$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DataFunctionParams' from JSON`,
  );
}

/** @internal */
export const DataFunction$inboundSchema: z.ZodType<
  DataFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  description: z.string(),
  created: z.string().default("2025-07-09T19:14:36.589Z"),
  updated: z.string().default("2025-07-09T19:14:36.589Z"),
  guardrail_config: z.union([
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponseNumber$inboundSchema),
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponseBoolean$inboundSchema),
  ]).optional(),
  type: GetEvalsDataEvalsResponse200Type$inboundSchema,
  function_params: z.union([
    z.lazy(() => Twelve$inboundSchema),
    z.lazy(() => FunctionParams1$inboundSchema),
    z.lazy(() => FunctionParams2$inboundSchema),
    z.lazy(() => FunctionParams3$inboundSchema),
    z.lazy(() => FunctionParams4$inboundSchema),
    z.lazy(() => Eight$inboundSchema),
    z.lazy(() => Nine$inboundSchema),
    z.lazy(() => Eleven$inboundSchema),
    z.lazy(() => Thirteen$inboundSchema),
    z.lazy(() => Fifteen$inboundSchema),
    z.lazy(() => Five$inboundSchema),
    z.lazy(() => Six$inboundSchema),
    z.lazy(() => Seven$inboundSchema),
    z.lazy(() => Ten$inboundSchema),
    z.lazy(() => Fourteen$inboundSchema),
    z.lazy(() => Sixteen$inboundSchema),
    z.lazy(() => Seventeen$inboundSchema),
    z.lazy(() => Eighteen$inboundSchema),
    z.lazy(() => Nineteen$inboundSchema),
    z.lazy(() => Twenty$inboundSchema),
    z.lazy(() => TwentyOne$inboundSchema),
    z.lazy(() => TwentyTwo$inboundSchema),
    z.lazy(() => TwentyThree$inboundSchema),
    z.lazy(() => TwentyFour$inboundSchema),
  ]),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "guardrail_config": "guardrailConfig",
    "function_params": "functionParams",
  });
});

/** @internal */
export type DataFunction$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | GetEvalsGuardrailConfigEvalsResponseNumber$Outbound
    | GetEvalsGuardrailConfigEvalsResponseBoolean$Outbound
    | undefined;
  type: string;
  function_params:
    | Twelve$Outbound
    | FunctionParams1$Outbound
    | FunctionParams2$Outbound
    | FunctionParams3$Outbound
    | FunctionParams4$Outbound
    | Eight$Outbound
    | Nine$Outbound
    | Eleven$Outbound
    | Thirteen$Outbound
    | Fifteen$Outbound
    | Five$Outbound
    | Six$Outbound
    | Seven$Outbound
    | Ten$Outbound
    | Fourteen$Outbound
    | Sixteen$Outbound
    | Seventeen$Outbound
    | Eighteen$Outbound
    | Nineteen$Outbound
    | Twenty$Outbound
    | TwentyOne$Outbound
    | TwentyTwo$Outbound
    | TwentyThree$Outbound
    | TwentyFour$Outbound;
  key: string;
};

/** @internal */
export const DataFunction$outboundSchema: z.ZodType<
  DataFunction$Outbound,
  z.ZodTypeDef,
  DataFunction
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-07-09T19:14:36.589Z"),
  updated: z.string().default("2025-07-09T19:14:36.589Z"),
  guardrailConfig: z.union([
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponseNumber$outboundSchema),
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponseBoolean$outboundSchema),
  ]).optional(),
  type: GetEvalsDataEvalsResponse200Type$outboundSchema,
  functionParams: z.union([
    z.lazy(() => Twelve$outboundSchema),
    z.lazy(() => FunctionParams1$outboundSchema),
    z.lazy(() => FunctionParams2$outboundSchema),
    z.lazy(() => FunctionParams3$outboundSchema),
    z.lazy(() => FunctionParams4$outboundSchema),
    z.lazy(() => Eight$outboundSchema),
    z.lazy(() => Nine$outboundSchema),
    z.lazy(() => Eleven$outboundSchema),
    z.lazy(() => Thirteen$outboundSchema),
    z.lazy(() => Fifteen$outboundSchema),
    z.lazy(() => Five$outboundSchema),
    z.lazy(() => Six$outboundSchema),
    z.lazy(() => Seven$outboundSchema),
    z.lazy(() => Ten$outboundSchema),
    z.lazy(() => Fourteen$outboundSchema),
    z.lazy(() => Sixteen$outboundSchema),
    z.lazy(() => Seventeen$outboundSchema),
    z.lazy(() => Eighteen$outboundSchema),
    z.lazy(() => Nineteen$outboundSchema),
    z.lazy(() => Twenty$outboundSchema),
    z.lazy(() => TwentyOne$outboundSchema),
    z.lazy(() => TwentyTwo$outboundSchema),
    z.lazy(() => TwentyThree$outboundSchema),
    z.lazy(() => TwentyFour$outboundSchema),
  ]),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
    functionParams: "function_params",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataFunction$ {
  /** @deprecated use `DataFunction$inboundSchema` instead. */
  export const inboundSchema = DataFunction$inboundSchema;
  /** @deprecated use `DataFunction$outboundSchema` instead. */
  export const outboundSchema = DataFunction$outboundSchema;
  /** @deprecated use `DataFunction$Outbound` instead. */
  export type Outbound = DataFunction$Outbound;
}

export function dataFunctionToJSON(dataFunction: DataFunction): string {
  return JSON.stringify(DataFunction$outboundSchema.parse(dataFunction));
}

export function dataFunctionFromJSON(
  jsonString: string,
): SafeParseResult<DataFunction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DataFunction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DataFunction' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsOperator$inboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsOperator> = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsOperator,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsOperator$outboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsOperator> =
    GetEvalsGuardrailConfigEvalsOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsOperator$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsOperator$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsOperator$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsOperator$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsOperator$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsNumber$inboundSchema: z.ZodType<
  GetEvalsGuardrailConfigEvalsNumber,
  z.ZodTypeDef,
  unknown
> = z.object({
  enabled: z.boolean(),
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema,
  value: z.number(),
  operator: GetEvalsGuardrailConfigEvalsOperator$inboundSchema,
});

/** @internal */
export type GetEvalsGuardrailConfigEvalsNumber$Outbound = {
  enabled: boolean;
  type: string;
  value: number;
  operator: string;
};

/** @internal */
export const GetEvalsGuardrailConfigEvalsNumber$outboundSchema: z.ZodType<
  GetEvalsGuardrailConfigEvalsNumber$Outbound,
  z.ZodTypeDef,
  GetEvalsGuardrailConfigEvalsNumber
> = z.object({
  enabled: z.boolean(),
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$outboundSchema,
  value: z.number(),
  operator: GetEvalsGuardrailConfigEvalsOperator$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsNumber$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsNumber$inboundSchema` instead. */
  export const inboundSchema = GetEvalsGuardrailConfigEvalsNumber$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsNumber$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsNumber$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsNumber$Outbound` instead. */
  export type Outbound = GetEvalsGuardrailConfigEvalsNumber$Outbound;
}

export function getEvalsGuardrailConfigEvalsNumberToJSON(
  getEvalsGuardrailConfigEvalsNumber: GetEvalsGuardrailConfigEvalsNumber,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsNumber$outboundSchema.parse(
      getEvalsGuardrailConfigEvalsNumber,
    ),
  );
}

export function getEvalsGuardrailConfigEvalsNumberFromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsGuardrailConfigEvalsNumber, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsNumber$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsNumber' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsBoolean$inboundSchema: z.ZodType<
  GetEvalsGuardrailConfigEvalsBoolean,
  z.ZodTypeDef,
  unknown
> = z.object({
  enabled: z.boolean(),
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema,
  value: z.boolean(),
});

/** @internal */
export type GetEvalsGuardrailConfigEvalsBoolean$Outbound = {
  enabled: boolean;
  type: string;
  value: boolean;
};

/** @internal */
export const GetEvalsGuardrailConfigEvalsBoolean$outboundSchema: z.ZodType<
  GetEvalsGuardrailConfigEvalsBoolean$Outbound,
  z.ZodTypeDef,
  GetEvalsGuardrailConfigEvalsBoolean
> = z.object({
  enabled: z.boolean(),
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema,
  value: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsBoolean$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsBoolean$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsBoolean$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsBoolean$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsBoolean$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsBoolean$Outbound` instead. */
  export type Outbound = GetEvalsGuardrailConfigEvalsBoolean$Outbound;
}

export function getEvalsGuardrailConfigEvalsBooleanToJSON(
  getEvalsGuardrailConfigEvalsBoolean: GetEvalsGuardrailConfigEvalsBoolean,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsBoolean$outboundSchema.parse(
      getEvalsGuardrailConfigEvalsBoolean,
    ),
  );
}

export function getEvalsGuardrailConfigEvalsBooleanFromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsGuardrailConfigEvalsBoolean, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsBoolean$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsBoolean' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsGuardrailConfig$inboundSchema: z.ZodType<
  GetEvalsDataEvalsGuardrailConfig,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetEvalsGuardrailConfigEvalsNumber$inboundSchema),
  z.lazy(() => GetEvalsGuardrailConfigEvalsBoolean$inboundSchema),
]);

/** @internal */
export type GetEvalsDataEvalsGuardrailConfig$Outbound =
  | GetEvalsGuardrailConfigEvalsNumber$Outbound
  | GetEvalsGuardrailConfigEvalsBoolean$Outbound;

/** @internal */
export const GetEvalsDataEvalsGuardrailConfig$outboundSchema: z.ZodType<
  GetEvalsDataEvalsGuardrailConfig$Outbound,
  z.ZodTypeDef,
  GetEvalsDataEvalsGuardrailConfig
> = z.union([
  z.lazy(() => GetEvalsGuardrailConfigEvalsNumber$outboundSchema),
  z.lazy(() => GetEvalsGuardrailConfigEvalsBoolean$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsGuardrailConfig$ {
  /** @deprecated use `GetEvalsDataEvalsGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema = GetEvalsDataEvalsGuardrailConfig$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema = GetEvalsDataEvalsGuardrailConfig$outboundSchema;
  /** @deprecated use `GetEvalsDataEvalsGuardrailConfig$Outbound` instead. */
  export type Outbound = GetEvalsDataEvalsGuardrailConfig$Outbound;
}

export function getEvalsDataEvalsGuardrailConfigToJSON(
  getEvalsDataEvalsGuardrailConfig: GetEvalsDataEvalsGuardrailConfig,
): string {
  return JSON.stringify(
    GetEvalsDataEvalsGuardrailConfig$outboundSchema.parse(
      getEvalsDataEvalsGuardrailConfig,
    ),
  );
}

export function getEvalsDataEvalsGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsDataEvalsGuardrailConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsDataEvalsGuardrailConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsDataEvalsGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsResponseType$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsDataEvalsResponseType
> = z.nativeEnum(GetEvalsDataEvalsResponseType);

/** @internal */
export const GetEvalsDataEvalsResponseType$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsDataEvalsResponseType
> = GetEvalsDataEvalsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsResponseType$ {
  /** @deprecated use `GetEvalsDataEvalsResponseType$inboundSchema` instead. */
  export const inboundSchema = GetEvalsDataEvalsResponseType$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponseType$outboundSchema` instead. */
  export const outboundSchema = GetEvalsDataEvalsResponseType$outboundSchema;
}

/** @internal */
export const DataPython$inboundSchema: z.ZodType<
  DataPython,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  description: z.string(),
  created: z.string().default("2025-07-09T19:14:36.589Z"),
  updated: z.string().default("2025-07-09T19:14:36.589Z"),
  guardrail_config: z.union([
    z.lazy(() => GetEvalsGuardrailConfigEvalsNumber$inboundSchema),
    z.lazy(() => GetEvalsGuardrailConfigEvalsBoolean$inboundSchema),
  ]).optional(),
  code: z.string(),
  type: GetEvalsDataEvalsResponseType$inboundSchema,
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "guardrail_config": "guardrailConfig",
  });
});

/** @internal */
export type DataPython$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | GetEvalsGuardrailConfigEvalsNumber$Outbound
    | GetEvalsGuardrailConfigEvalsBoolean$Outbound
    | undefined;
  code: string;
  type: string;
  key: string;
};

/** @internal */
export const DataPython$outboundSchema: z.ZodType<
  DataPython$Outbound,
  z.ZodTypeDef,
  DataPython
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-07-09T19:14:36.589Z"),
  updated: z.string().default("2025-07-09T19:14:36.589Z"),
  guardrailConfig: z.union([
    z.lazy(() => GetEvalsGuardrailConfigEvalsNumber$outboundSchema),
    z.lazy(() => GetEvalsGuardrailConfigEvalsBoolean$outboundSchema),
  ]).optional(),
  code: z.string(),
  type: GetEvalsDataEvalsResponseType$outboundSchema,
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataPython$ {
  /** @deprecated use `DataPython$inboundSchema` instead. */
  export const inboundSchema = DataPython$inboundSchema;
  /** @deprecated use `DataPython$outboundSchema` instead. */
  export const outboundSchema = DataPython$outboundSchema;
  /** @deprecated use `DataPython$Outbound` instead. */
  export type Outbound = DataPython$Outbound;
}

export function dataPythonToJSON(dataPython: DataPython): string {
  return JSON.stringify(DataPython$outboundSchema.parse(dataPython));
}

export function dataPythonFromJSON(
  jsonString: string,
): SafeParseResult<DataPython, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DataPython$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DataPython' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType
  > = z.nativeEnum(GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType);

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType
  > = GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigOperator$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsGuardrailConfigOperator
> = z.nativeEnum(GetEvalsGuardrailConfigOperator);

/** @internal */
export const GetEvalsGuardrailConfigOperator$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsGuardrailConfigOperator
> = GetEvalsGuardrailConfigOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigOperator$ {
  /** @deprecated use `GetEvalsGuardrailConfigOperator$inboundSchema` instead. */
  export const inboundSchema = GetEvalsGuardrailConfigOperator$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigOperator$outboundSchema` instead. */
  export const outboundSchema = GetEvalsGuardrailConfigOperator$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigNumber$inboundSchema: z.ZodType<
  GetEvalsGuardrailConfigNumber,
  z.ZodTypeDef,
  unknown
> = z.object({
  enabled: z.boolean(),
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$inboundSchema,
  value: z.number(),
  operator: GetEvalsGuardrailConfigOperator$inboundSchema,
});

/** @internal */
export type GetEvalsGuardrailConfigNumber$Outbound = {
  enabled: boolean;
  type: string;
  value: number;
  operator: string;
};

/** @internal */
export const GetEvalsGuardrailConfigNumber$outboundSchema: z.ZodType<
  GetEvalsGuardrailConfigNumber$Outbound,
  z.ZodTypeDef,
  GetEvalsGuardrailConfigNumber
> = z.object({
  enabled: z.boolean(),
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$outboundSchema,
  value: z.number(),
  operator: GetEvalsGuardrailConfigOperator$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigNumber$ {
  /** @deprecated use `GetEvalsGuardrailConfigNumber$inboundSchema` instead. */
  export const inboundSchema = GetEvalsGuardrailConfigNumber$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigNumber$outboundSchema` instead. */
  export const outboundSchema = GetEvalsGuardrailConfigNumber$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigNumber$Outbound` instead. */
  export type Outbound = GetEvalsGuardrailConfigNumber$Outbound;
}

export function getEvalsGuardrailConfigNumberToJSON(
  getEvalsGuardrailConfigNumber: GetEvalsGuardrailConfigNumber,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigNumber$outboundSchema.parse(
      getEvalsGuardrailConfigNumber,
    ),
  );
}

export function getEvalsGuardrailConfigNumberFromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsGuardrailConfigNumber, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsGuardrailConfigNumber$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigNumber' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsResponse200Type> = z
    .nativeEnum(GetEvalsGuardrailConfigEvalsResponse200Type);

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsResponse200Type> =
    GetEvalsGuardrailConfigEvalsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200Type$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200Type$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200Type$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigBoolean$inboundSchema: z.ZodType<
  GetEvalsGuardrailConfigBoolean,
  z.ZodTypeDef,
  unknown
> = z.object({
  enabled: z.boolean(),
  type: GetEvalsGuardrailConfigEvalsResponse200Type$inboundSchema,
  value: z.boolean(),
});

/** @internal */
export type GetEvalsGuardrailConfigBoolean$Outbound = {
  enabled: boolean;
  type: string;
  value: boolean;
};

/** @internal */
export const GetEvalsGuardrailConfigBoolean$outboundSchema: z.ZodType<
  GetEvalsGuardrailConfigBoolean$Outbound,
  z.ZodTypeDef,
  GetEvalsGuardrailConfigBoolean
> = z.object({
  enabled: z.boolean(),
  type: GetEvalsGuardrailConfigEvalsResponse200Type$outboundSchema,
  value: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigBoolean$ {
  /** @deprecated use `GetEvalsGuardrailConfigBoolean$inboundSchema` instead. */
  export const inboundSchema = GetEvalsGuardrailConfigBoolean$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigBoolean$outboundSchema` instead. */
  export const outboundSchema = GetEvalsGuardrailConfigBoolean$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigBoolean$Outbound` instead. */
  export type Outbound = GetEvalsGuardrailConfigBoolean$Outbound;
}

export function getEvalsGuardrailConfigBooleanToJSON(
  getEvalsGuardrailConfigBoolean: GetEvalsGuardrailConfigBoolean,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigBoolean$outboundSchema.parse(
      getEvalsGuardrailConfigBoolean,
    ),
  );
}

export function getEvalsGuardrailConfigBooleanFromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsGuardrailConfigBoolean, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsGuardrailConfigBoolean$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigBoolean' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataGuardrailConfig$inboundSchema: z.ZodType<
  GetEvalsDataGuardrailConfig,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetEvalsGuardrailConfigNumber$inboundSchema),
  z.lazy(() => GetEvalsGuardrailConfigBoolean$inboundSchema),
]);

/** @internal */
export type GetEvalsDataGuardrailConfig$Outbound =
  | GetEvalsGuardrailConfigNumber$Outbound
  | GetEvalsGuardrailConfigBoolean$Outbound;

/** @internal */
export const GetEvalsDataGuardrailConfig$outboundSchema: z.ZodType<
  GetEvalsDataGuardrailConfig$Outbound,
  z.ZodTypeDef,
  GetEvalsDataGuardrailConfig
> = z.union([
  z.lazy(() => GetEvalsGuardrailConfigNumber$outboundSchema),
  z.lazy(() => GetEvalsGuardrailConfigBoolean$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataGuardrailConfig$ {
  /** @deprecated use `GetEvalsDataGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema = GetEvalsDataGuardrailConfig$inboundSchema;
  /** @deprecated use `GetEvalsDataGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema = GetEvalsDataGuardrailConfig$outboundSchema;
  /** @deprecated use `GetEvalsDataGuardrailConfig$Outbound` instead. */
  export type Outbound = GetEvalsDataGuardrailConfig$Outbound;
}

export function getEvalsDataGuardrailConfigToJSON(
  getEvalsDataGuardrailConfig: GetEvalsDataGuardrailConfig,
): string {
  return JSON.stringify(
    GetEvalsDataGuardrailConfig$outboundSchema.parse(
      getEvalsDataGuardrailConfig,
    ),
  );
}

export function getEvalsDataGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsDataGuardrailConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsDataGuardrailConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsDataGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsType$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsDataEvalsType
> = z.nativeEnum(GetEvalsDataEvalsType);

/** @internal */
export const GetEvalsDataEvalsType$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsDataEvalsType
> = GetEvalsDataEvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsType$ {
  /** @deprecated use `GetEvalsDataEvalsType$inboundSchema` instead. */
  export const inboundSchema = GetEvalsDataEvalsType$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsType$outboundSchema` instead. */
  export const outboundSchema = GetEvalsDataEvalsType$outboundSchema;
}

/** @internal */
export const DataMethod$inboundSchema: z.ZodNativeEnum<typeof DataMethod> = z
  .nativeEnum(DataMethod);

/** @internal */
export const DataMethod$outboundSchema: z.ZodNativeEnum<typeof DataMethod> =
  DataMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataMethod$ {
  /** @deprecated use `DataMethod$inboundSchema` instead. */
  export const inboundSchema = DataMethod$inboundSchema;
  /** @deprecated use `DataMethod$outboundSchema` instead. */
  export const outboundSchema = DataMethod$outboundSchema;
}

/** @internal */
export const DataHTTP$inboundSchema: z.ZodType<
  DataHTTP,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  description: z.string(),
  created: z.string().default("2025-07-09T19:14:36.589Z"),
  updated: z.string().default("2025-07-09T19:14:36.589Z"),
  guardrail_config: z.union([
    z.lazy(() => GetEvalsGuardrailConfigNumber$inboundSchema),
    z.lazy(() => GetEvalsGuardrailConfigBoolean$inboundSchema),
  ]).optional(),
  type: GetEvalsDataEvalsType$inboundSchema,
  url: z.string(),
  method: DataMethod$inboundSchema,
  headers: z.record(z.string()),
  payload: z.record(z.any()),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "guardrail_config": "guardrailConfig",
  });
});

/** @internal */
export type DataHTTP$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | GetEvalsGuardrailConfigNumber$Outbound
    | GetEvalsGuardrailConfigBoolean$Outbound
    | undefined;
  type: string;
  url: string;
  method: string;
  headers: { [k: string]: string };
  payload: { [k: string]: any };
  key: string;
};

/** @internal */
export const DataHTTP$outboundSchema: z.ZodType<
  DataHTTP$Outbound,
  z.ZodTypeDef,
  DataHTTP
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-07-09T19:14:36.589Z"),
  updated: z.string().default("2025-07-09T19:14:36.589Z"),
  guardrailConfig: z.union([
    z.lazy(() => GetEvalsGuardrailConfigNumber$outboundSchema),
    z.lazy(() => GetEvalsGuardrailConfigBoolean$outboundSchema),
  ]).optional(),
  type: GetEvalsDataEvalsType$outboundSchema,
  url: z.string(),
  method: DataMethod$outboundSchema,
  headers: z.record(z.string()),
  payload: z.record(z.any()),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataHTTP$ {
  /** @deprecated use `DataHTTP$inboundSchema` instead. */
  export const inboundSchema = DataHTTP$inboundSchema;
  /** @deprecated use `DataHTTP$outboundSchema` instead. */
  export const outboundSchema = DataHTTP$outboundSchema;
  /** @deprecated use `DataHTTP$Outbound` instead. */
  export type Outbound = DataHTTP$Outbound;
}

export function dataHTTPToJSON(dataHTTP: DataHTTP): string {
  return JSON.stringify(DataHTTP$outboundSchema.parse(dataHTTP));
}

export function dataHTTPFromJSON(
  jsonString: string,
): SafeParseResult<DataHTTP, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DataHTTP$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DataHTTP' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsResponseType> = z
    .nativeEnum(GetEvalsGuardrailConfigEvalsResponseType);

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsResponseType> =
    GetEvalsGuardrailConfigEvalsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponseType$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponseType$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponseType$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$inboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type: GetEvalsGuardrailConfigEvalsResponseType$inboundSchema,
    value: z.number(),
    operator:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$inboundSchema,
  });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$Outbound =
  {
    enabled: boolean;
    type: string;
    value: number;
    operator: string;
  };

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber
  > = z.object({
    enabled: z.boolean(),
    type: GetEvalsGuardrailConfigEvalsResponseType$outboundSchema,
    value: z.number(),
    operator:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$Outbound` instead. */
  export type Outbound =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumberToJSON(
  getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$outboundSchema
      .parse(
        getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber,
      ),
  );
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsType$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsGuardrailConfigEvalsType
> = z.nativeEnum(GetEvalsGuardrailConfigEvalsType);

/** @internal */
export const GetEvalsGuardrailConfigEvalsType$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsGuardrailConfigEvalsType
> = GetEvalsGuardrailConfigEvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsType$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsType$inboundSchema` instead. */
  export const inboundSchema = GetEvalsGuardrailConfigEvalsType$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsType$outboundSchema` instead. */
  export const outboundSchema = GetEvalsGuardrailConfigEvalsType$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$inboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type: GetEvalsGuardrailConfigEvalsType$inboundSchema,
    value: z.boolean(),
  });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$Outbound =
  {
    enabled: boolean;
    type: string;
    value: boolean;
  };

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean
  > = z.object({
    enabled: z.boolean(),
    type: GetEvalsGuardrailConfigEvalsType$outboundSchema,
    value: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$Outbound` instead. */
  export type Outbound =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBooleanToJSON(
  getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$outboundSchema
      .parse(
        getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean,
      ),
  );
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBooleanFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean' from JSON`,
  );
}

/** @internal */
export const DataGuardrailConfig$inboundSchema: z.ZodType<
  DataGuardrailConfig,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() =>
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$inboundSchema
  ),
  z.lazy(() =>
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$inboundSchema
  ),
]);

/** @internal */
export type DataGuardrailConfig$Outbound =
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$Outbound
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$Outbound;

/** @internal */
export const DataGuardrailConfig$outboundSchema: z.ZodType<
  DataGuardrailConfig$Outbound,
  z.ZodTypeDef,
  DataGuardrailConfig
> = z.union([
  z.lazy(() =>
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$outboundSchema
  ),
  z.lazy(() =>
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$outboundSchema
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataGuardrailConfig$ {
  /** @deprecated use `DataGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema = DataGuardrailConfig$inboundSchema;
  /** @deprecated use `DataGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema = DataGuardrailConfig$outboundSchema;
  /** @deprecated use `DataGuardrailConfig$Outbound` instead. */
  export type Outbound = DataGuardrailConfig$Outbound;
}

export function dataGuardrailConfigToJSON(
  dataGuardrailConfig: DataGuardrailConfig,
): string {
  return JSON.stringify(
    DataGuardrailConfig$outboundSchema.parse(dataGuardrailConfig),
  );
}

export function dataGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<DataGuardrailConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DataGuardrailConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DataGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataType$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsDataType
> = z.nativeEnum(GetEvalsDataType);

/** @internal */
export const GetEvalsDataType$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsDataType
> = GetEvalsDataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataType$ {
  /** @deprecated use `GetEvalsDataType$inboundSchema` instead. */
  export const inboundSchema = GetEvalsDataType$inboundSchema;
  /** @deprecated use `GetEvalsDataType$outboundSchema` instead. */
  export const outboundSchema = GetEvalsDataType$outboundSchema;
}

/** @internal */
export const DataJSON$inboundSchema: z.ZodType<
  DataJSON,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  description: z.string(),
  created: z.string().default("2025-07-09T19:14:36.589Z"),
  updated: z.string().default("2025-07-09T19:14:36.589Z"),
  guardrail_config: z.union([
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$inboundSchema
    ),
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$inboundSchema
    ),
  ]).optional(),
  type: GetEvalsDataType$inboundSchema,
  schema: z.string(),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "guardrail_config": "guardrailConfig",
  });
});

/** @internal */
export type DataJSON$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$Outbound
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$Outbound
    | undefined;
  type: string;
  schema: string;
  key: string;
};

/** @internal */
export const DataJSON$outboundSchema: z.ZodType<
  DataJSON$Outbound,
  z.ZodTypeDef,
  DataJSON
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-07-09T19:14:36.589Z"),
  updated: z.string().default("2025-07-09T19:14:36.589Z"),
  guardrailConfig: z.union([
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$outboundSchema
    ),
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$outboundSchema
    ),
  ]).optional(),
  type: GetEvalsDataType$outboundSchema,
  schema: z.string(),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataJSON$ {
  /** @deprecated use `DataJSON$inboundSchema` instead. */
  export const inboundSchema = DataJSON$inboundSchema;
  /** @deprecated use `DataJSON$outboundSchema` instead. */
  export const outboundSchema = DataJSON$outboundSchema;
  /** @deprecated use `DataJSON$Outbound` instead. */
  export type Outbound = DataJSON$Outbound;
}

export function dataJSONToJSON(dataJSON: DataJSON): string {
  return JSON.stringify(DataJSON$outboundSchema.parse(dataJSON));
}

export function dataJSONFromJSON(
  jsonString: string,
): SafeParseResult<DataJSON, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DataJSON$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DataJSON' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigType$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsGuardrailConfigType
> = z.nativeEnum(GetEvalsGuardrailConfigType);

/** @internal */
export const GetEvalsGuardrailConfigType$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsGuardrailConfigType
> = GetEvalsGuardrailConfigType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigType$ {
  /** @deprecated use `GetEvalsGuardrailConfigType$inboundSchema` instead. */
  export const inboundSchema = GetEvalsGuardrailConfigType$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigType$outboundSchema` instead. */
  export const outboundSchema = GetEvalsGuardrailConfigType$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$inboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type: GetEvalsGuardrailConfigType$inboundSchema,
    value: z.number(),
    operator:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$inboundSchema,
  });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$Outbound =
  {
    enabled: boolean;
    type: string;
    value: number;
    operator: string;
  };

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber
  > = z.object({
    enabled: z.boolean(),
    type: GetEvalsGuardrailConfigType$outboundSchema,
    value: z.number(),
    operator:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$Outbound` instead. */
  export type Outbound =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumberToJSON(
  getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$outboundSchema
      .parse(
        getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber,
      ),
  );
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$inboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$inboundSchema,
    value: z.boolean(),
  });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$Outbound =
  {
    enabled: boolean;
    type: string;
    value: boolean;
  };

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$outboundSchema,
    value: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$Outbound` instead. */
  export type Outbound =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBooleanToJSON(
  getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$outboundSchema
      .parse(
        getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean,
      ),
  );
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBooleanFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$inboundSchema:
  z.ZodType<
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$inboundSchema
    ),
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$inboundSchema
    ),
  ]);

/** @internal */
export type GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$Outbound =
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$Outbound
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$Outbound;

/** @internal */
export const GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$outboundSchema:
  z.ZodType<
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$Outbound,
    z.ZodTypeDef,
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig
  > = z.union([
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$outboundSchema
    ),
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$ {
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$outboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$Outbound` instead. */
  export type Outbound =
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$Outbound;
}

export function getEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfigToJSON(
  getEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig:
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig,
): string {
  return JSON.stringify(
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$outboundSchema
      .parse(
        getEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig,
      ),
  );
}

export function getEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const DataType$inboundSchema: z.ZodNativeEnum<typeof DataType> = z
  .nativeEnum(DataType);

/** @internal */
export const DataType$outboundSchema: z.ZodNativeEnum<typeof DataType> =
  DataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataType$ {
  /** @deprecated use `DataType$inboundSchema` instead. */
  export const inboundSchema = DataType$inboundSchema;
  /** @deprecated use `DataType$outboundSchema` instead. */
  export const outboundSchema = DataType$outboundSchema;
}

/** @internal */
export const DataLLM$inboundSchema: z.ZodType<DataLLM, z.ZodTypeDef, unknown> =
  z.object({
    _id: z.string(),
    description: z.string(),
    created: z.string().default("2025-07-09T19:14:36.589Z"),
    updated: z.string().default("2025-07-09T19:14:36.589Z"),
    guardrail_config: z.union([
      z.lazy(() =>
        GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$inboundSchema
      ),
      z.lazy(() =>
        GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$inboundSchema
      ),
    ]).optional(),
    type: DataType$inboundSchema,
    prompt: z.string(),
    key: z.string(),
    model: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "_id": "id",
      "guardrail_config": "guardrailConfig",
    });
  });

/** @internal */
export type DataLLM$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$Outbound
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$Outbound
    | undefined;
  type: string;
  prompt: string;
  key: string;
  model: string;
};

/** @internal */
export const DataLLM$outboundSchema: z.ZodType<
  DataLLM$Outbound,
  z.ZodTypeDef,
  DataLLM
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-07-09T19:14:36.589Z"),
  updated: z.string().default("2025-07-09T19:14:36.589Z"),
  guardrailConfig: z.union([
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$outboundSchema
    ),
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$outboundSchema
    ),
  ]).optional(),
  type: DataType$outboundSchema,
  prompt: z.string(),
  key: z.string(),
  model: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataLLM$ {
  /** @deprecated use `DataLLM$inboundSchema` instead. */
  export const inboundSchema = DataLLM$inboundSchema;
  /** @deprecated use `DataLLM$outboundSchema` instead. */
  export const outboundSchema = DataLLM$outboundSchema;
  /** @deprecated use `DataLLM$Outbound` instead. */
  export type Outbound = DataLLM$Outbound;
}

export function dataLLMToJSON(dataLLM: DataLLM): string {
  return JSON.stringify(DataLLM$outboundSchema.parse(dataLLM));
}

export function dataLLMFromJSON(
  jsonString: string,
): SafeParseResult<DataLLM, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DataLLM$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DataLLM' from JSON`,
  );
}

/** @internal */
export const GetEvalsData$inboundSchema: z.ZodType<
  GetEvalsData,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => DataHTTP$inboundSchema),
  z.lazy(() => DataLLM$inboundSchema),
  z.lazy(() => Ragas$inboundSchema),
  z.lazy(() => DataJSON$inboundSchema),
  z.lazy(() => DataPython$inboundSchema),
  z.lazy(() => DataFunction$inboundSchema),
  z.lazy(() => Typescript$inboundSchema),
]);

/** @internal */
export type GetEvalsData$Outbound =
  | DataHTTP$Outbound
  | DataLLM$Outbound
  | Ragas$Outbound
  | DataJSON$Outbound
  | DataPython$Outbound
  | DataFunction$Outbound
  | Typescript$Outbound;

/** @internal */
export const GetEvalsData$outboundSchema: z.ZodType<
  GetEvalsData$Outbound,
  z.ZodTypeDef,
  GetEvalsData
> = z.union([
  z.lazy(() => DataHTTP$outboundSchema),
  z.lazy(() => DataLLM$outboundSchema),
  z.lazy(() => Ragas$outboundSchema),
  z.lazy(() => DataJSON$outboundSchema),
  z.lazy(() => DataPython$outboundSchema),
  z.lazy(() => DataFunction$outboundSchema),
  z.lazy(() => Typescript$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsData$ {
  /** @deprecated use `GetEvalsData$inboundSchema` instead. */
  export const inboundSchema = GetEvalsData$inboundSchema;
  /** @deprecated use `GetEvalsData$outboundSchema` instead. */
  export const outboundSchema = GetEvalsData$outboundSchema;
  /** @deprecated use `GetEvalsData$Outbound` instead. */
  export type Outbound = GetEvalsData$Outbound;
}

export function getEvalsDataToJSON(getEvalsData: GetEvalsData): string {
  return JSON.stringify(GetEvalsData$outboundSchema.parse(getEvalsData));
}

export function getEvalsDataFromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsData' from JSON`,
  );
}

/** @internal */
export const GetEvalsResponseBody$inboundSchema: z.ZodType<
  GetEvalsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  object: GetEvalsObject$inboundSchema,
  data: z.array(
    z.union([
      z.lazy(() => DataHTTP$inboundSchema),
      z.lazy(() => DataLLM$inboundSchema),
      z.lazy(() => Ragas$inboundSchema),
      z.lazy(() => DataJSON$inboundSchema),
      z.lazy(() => DataPython$inboundSchema),
      z.lazy(() => DataFunction$inboundSchema),
      z.lazy(() => Typescript$inboundSchema),
    ]),
  ),
  has_more: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    "has_more": "hasMore",
  });
});

/** @internal */
export type GetEvalsResponseBody$Outbound = {
  object: string;
  data: Array<
    | DataHTTP$Outbound
    | DataLLM$Outbound
    | Ragas$Outbound
    | DataJSON$Outbound
    | DataPython$Outbound
    | DataFunction$Outbound
    | Typescript$Outbound
  >;
  has_more: boolean;
};

/** @internal */
export const GetEvalsResponseBody$outboundSchema: z.ZodType<
  GetEvalsResponseBody$Outbound,
  z.ZodTypeDef,
  GetEvalsResponseBody
> = z.object({
  object: GetEvalsObject$outboundSchema,
  data: z.array(
    z.union([
      z.lazy(() => DataHTTP$outboundSchema),
      z.lazy(() => DataLLM$outboundSchema),
      z.lazy(() => Ragas$outboundSchema),
      z.lazy(() => DataJSON$outboundSchema),
      z.lazy(() => DataPython$outboundSchema),
      z.lazy(() => DataFunction$outboundSchema),
      z.lazy(() => Typescript$outboundSchema),
    ]),
  ),
  hasMore: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    hasMore: "has_more",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsResponseBody$ {
  /** @deprecated use `GetEvalsResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetEvalsResponseBody$inboundSchema;
  /** @deprecated use `GetEvalsResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetEvalsResponseBody$outboundSchema;
  /** @deprecated use `GetEvalsResponseBody$Outbound` instead. */
  export type Outbound = GetEvalsResponseBody$Outbound;
}

export function getEvalsResponseBodyToJSON(
  getEvalsResponseBody: GetEvalsResponseBody,
): string {
  return JSON.stringify(
    GetEvalsResponseBody$outboundSchema.parse(getEvalsResponseBody),
  );
}

export function getEvalsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsResponseBody' from JSON`,
  );
}
