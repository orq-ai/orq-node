/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type EvalsBleuScoreRequestBody = {
  output: string;
  reference: string;
};

/**
 * Returns the result of the evaluator run
 */
export type EvalsBleuScoreResponseBody = {
  value: number | null;
};

/** @internal */
export const EvalsBleuScoreRequestBody$inboundSchema: z.ZodType<
  EvalsBleuScoreRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  output: z.string(),
  reference: z.string(),
});

/** @internal */
export type EvalsBleuScoreRequestBody$Outbound = {
  output: string;
  reference: string;
};

/** @internal */
export const EvalsBleuScoreRequestBody$outboundSchema: z.ZodType<
  EvalsBleuScoreRequestBody$Outbound,
  z.ZodTypeDef,
  EvalsBleuScoreRequestBody
> = z.object({
  output: z.string(),
  reference: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsBleuScoreRequestBody$ {
  /** @deprecated use `EvalsBleuScoreRequestBody$inboundSchema` instead. */
  export const inboundSchema = EvalsBleuScoreRequestBody$inboundSchema;
  /** @deprecated use `EvalsBleuScoreRequestBody$outboundSchema` instead. */
  export const outboundSchema = EvalsBleuScoreRequestBody$outboundSchema;
  /** @deprecated use `EvalsBleuScoreRequestBody$Outbound` instead. */
  export type Outbound = EvalsBleuScoreRequestBody$Outbound;
}

export function evalsBleuScoreRequestBodyToJSON(
  evalsBleuScoreRequestBody: EvalsBleuScoreRequestBody,
): string {
  return JSON.stringify(
    EvalsBleuScoreRequestBody$outboundSchema.parse(evalsBleuScoreRequestBody),
  );
}

export function evalsBleuScoreRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<EvalsBleuScoreRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EvalsBleuScoreRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EvalsBleuScoreRequestBody' from JSON`,
  );
}

/** @internal */
export const EvalsBleuScoreResponseBody$inboundSchema: z.ZodType<
  EvalsBleuScoreResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.nullable(z.number()),
});

/** @internal */
export type EvalsBleuScoreResponseBody$Outbound = {
  value: number | null;
};

/** @internal */
export const EvalsBleuScoreResponseBody$outboundSchema: z.ZodType<
  EvalsBleuScoreResponseBody$Outbound,
  z.ZodTypeDef,
  EvalsBleuScoreResponseBody
> = z.object({
  value: z.nullable(z.number()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsBleuScoreResponseBody$ {
  /** @deprecated use `EvalsBleuScoreResponseBody$inboundSchema` instead. */
  export const inboundSchema = EvalsBleuScoreResponseBody$inboundSchema;
  /** @deprecated use `EvalsBleuScoreResponseBody$outboundSchema` instead. */
  export const outboundSchema = EvalsBleuScoreResponseBody$outboundSchema;
  /** @deprecated use `EvalsBleuScoreResponseBody$Outbound` instead. */
  export type Outbound = EvalsBleuScoreResponseBody$Outbound;
}

export function evalsBleuScoreResponseBodyToJSON(
  evalsBleuScoreResponseBody: EvalsBleuScoreResponseBody,
): string {
  return JSON.stringify(
    EvalsBleuScoreResponseBody$outboundSchema.parse(evalsBleuScoreResponseBody),
  );
}

export function evalsBleuScoreResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<EvalsBleuScoreResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EvalsBleuScoreResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EvalsBleuScoreResponseBody' from JSON`,
  );
}
