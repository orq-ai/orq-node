/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type EvalsRagasContextEntitiesRecallRequestBody = {
  /**
   * The ground truth answer to evaluate entity recall against
   */
  reference: string;
  /**
   * Knowledge base retrievals containing entities to evaluate
   */
  retrievals?: Array<string> | undefined;
  model: string;
};

/**
 * Returns the context entities recall evaluation result
 */
export type EvalsRagasContextEntitiesRecallResponseBody = {
  value: number | null;
};

/** @internal */
export const EvalsRagasContextEntitiesRecallRequestBody$inboundSchema:
  z.ZodType<EvalsRagasContextEntitiesRecallRequestBody, z.ZodTypeDef, unknown> =
    z.object({
      reference: z.string(),
      retrievals: z.array(z.string()).optional(),
      model: z.string(),
    });

/** @internal */
export type EvalsRagasContextEntitiesRecallRequestBody$Outbound = {
  reference: string;
  retrievals?: Array<string> | undefined;
  model: string;
};

/** @internal */
export const EvalsRagasContextEntitiesRecallRequestBody$outboundSchema:
  z.ZodType<
    EvalsRagasContextEntitiesRecallRequestBody$Outbound,
    z.ZodTypeDef,
    EvalsRagasContextEntitiesRecallRequestBody
  > = z.object({
    reference: z.string(),
    retrievals: z.array(z.string()).optional(),
    model: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsRagasContextEntitiesRecallRequestBody$ {
  /** @deprecated use `EvalsRagasContextEntitiesRecallRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    EvalsRagasContextEntitiesRecallRequestBody$inboundSchema;
  /** @deprecated use `EvalsRagasContextEntitiesRecallRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsRagasContextEntitiesRecallRequestBody$outboundSchema;
  /** @deprecated use `EvalsRagasContextEntitiesRecallRequestBody$Outbound` instead. */
  export type Outbound = EvalsRagasContextEntitiesRecallRequestBody$Outbound;
}

export function evalsRagasContextEntitiesRecallRequestBodyToJSON(
  evalsRagasContextEntitiesRecallRequestBody:
    EvalsRagasContextEntitiesRecallRequestBody,
): string {
  return JSON.stringify(
    EvalsRagasContextEntitiesRecallRequestBody$outboundSchema.parse(
      evalsRagasContextEntitiesRecallRequestBody,
    ),
  );
}

export function evalsRagasContextEntitiesRecallRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  EvalsRagasContextEntitiesRecallRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      EvalsRagasContextEntitiesRecallRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'EvalsRagasContextEntitiesRecallRequestBody' from JSON`,
  );
}

/** @internal */
export const EvalsRagasContextEntitiesRecallResponseBody$inboundSchema:
  z.ZodType<
    EvalsRagasContextEntitiesRecallResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    value: z.nullable(z.number()),
  });

/** @internal */
export type EvalsRagasContextEntitiesRecallResponseBody$Outbound = {
  value: number | null;
};

/** @internal */
export const EvalsRagasContextEntitiesRecallResponseBody$outboundSchema:
  z.ZodType<
    EvalsRagasContextEntitiesRecallResponseBody$Outbound,
    z.ZodTypeDef,
    EvalsRagasContextEntitiesRecallResponseBody
  > = z.object({
    value: z.nullable(z.number()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsRagasContextEntitiesRecallResponseBody$ {
  /** @deprecated use `EvalsRagasContextEntitiesRecallResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    EvalsRagasContextEntitiesRecallResponseBody$inboundSchema;
  /** @deprecated use `EvalsRagasContextEntitiesRecallResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsRagasContextEntitiesRecallResponseBody$outboundSchema;
  /** @deprecated use `EvalsRagasContextEntitiesRecallResponseBody$Outbound` instead. */
  export type Outbound = EvalsRagasContextEntitiesRecallResponseBody$Outbound;
}

export function evalsRagasContextEntitiesRecallResponseBodyToJSON(
  evalsRagasContextEntitiesRecallResponseBody:
    EvalsRagasContextEntitiesRecallResponseBody,
): string {
  return JSON.stringify(
    EvalsRagasContextEntitiesRecallResponseBody$outboundSchema.parse(
      evalsRagasContextEntitiesRecallResponseBody,
    ),
  );
}

export function evalsRagasContextEntitiesRecallResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  EvalsRagasContextEntitiesRecallResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      EvalsRagasContextEntitiesRecallResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'EvalsRagasContextEntitiesRecallResponseBody' from JSON`,
  );
}
