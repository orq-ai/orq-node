/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type EvalsAgeAppropriateRequestBody = {
  query: string;
  output: string;
  model: string;
};

export type EvalsAgeAppropriateEvalsValue = number | boolean | string;

export type EvalsAgeAppropriateValue = {
  value: number | boolean | string;
  explanation?: string | null | undefined;
};

/**
 * Returns the age appropriateness evaluation result
 */
export type EvalsAgeAppropriateResponseBody = {
  value: EvalsAgeAppropriateValue | null;
};

/** @internal */
export const EvalsAgeAppropriateRequestBody$inboundSchema: z.ZodType<
  EvalsAgeAppropriateRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  query: z.string(),
  output: z.string(),
  model: z.string(),
});

/** @internal */
export type EvalsAgeAppropriateRequestBody$Outbound = {
  query: string;
  output: string;
  model: string;
};

/** @internal */
export const EvalsAgeAppropriateRequestBody$outboundSchema: z.ZodType<
  EvalsAgeAppropriateRequestBody$Outbound,
  z.ZodTypeDef,
  EvalsAgeAppropriateRequestBody
> = z.object({
  query: z.string(),
  output: z.string(),
  model: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsAgeAppropriateRequestBody$ {
  /** @deprecated use `EvalsAgeAppropriateRequestBody$inboundSchema` instead. */
  export const inboundSchema = EvalsAgeAppropriateRequestBody$inboundSchema;
  /** @deprecated use `EvalsAgeAppropriateRequestBody$outboundSchema` instead. */
  export const outboundSchema = EvalsAgeAppropriateRequestBody$outboundSchema;
  /** @deprecated use `EvalsAgeAppropriateRequestBody$Outbound` instead. */
  export type Outbound = EvalsAgeAppropriateRequestBody$Outbound;
}

export function evalsAgeAppropriateRequestBodyToJSON(
  evalsAgeAppropriateRequestBody: EvalsAgeAppropriateRequestBody,
): string {
  return JSON.stringify(
    EvalsAgeAppropriateRequestBody$outboundSchema.parse(
      evalsAgeAppropriateRequestBody,
    ),
  );
}

export function evalsAgeAppropriateRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<EvalsAgeAppropriateRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EvalsAgeAppropriateRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EvalsAgeAppropriateRequestBody' from JSON`,
  );
}

/** @internal */
export const EvalsAgeAppropriateEvalsValue$inboundSchema: z.ZodType<
  EvalsAgeAppropriateEvalsValue,
  z.ZodTypeDef,
  unknown
> = z.union([z.number(), z.boolean(), z.string()]);

/** @internal */
export type EvalsAgeAppropriateEvalsValue$Outbound = number | boolean | string;

/** @internal */
export const EvalsAgeAppropriateEvalsValue$outboundSchema: z.ZodType<
  EvalsAgeAppropriateEvalsValue$Outbound,
  z.ZodTypeDef,
  EvalsAgeAppropriateEvalsValue
> = z.union([z.number(), z.boolean(), z.string()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsAgeAppropriateEvalsValue$ {
  /** @deprecated use `EvalsAgeAppropriateEvalsValue$inboundSchema` instead. */
  export const inboundSchema = EvalsAgeAppropriateEvalsValue$inboundSchema;
  /** @deprecated use `EvalsAgeAppropriateEvalsValue$outboundSchema` instead. */
  export const outboundSchema = EvalsAgeAppropriateEvalsValue$outboundSchema;
  /** @deprecated use `EvalsAgeAppropriateEvalsValue$Outbound` instead. */
  export type Outbound = EvalsAgeAppropriateEvalsValue$Outbound;
}

export function evalsAgeAppropriateEvalsValueToJSON(
  evalsAgeAppropriateEvalsValue: EvalsAgeAppropriateEvalsValue,
): string {
  return JSON.stringify(
    EvalsAgeAppropriateEvalsValue$outboundSchema.parse(
      evalsAgeAppropriateEvalsValue,
    ),
  );
}

export function evalsAgeAppropriateEvalsValueFromJSON(
  jsonString: string,
): SafeParseResult<EvalsAgeAppropriateEvalsValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EvalsAgeAppropriateEvalsValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EvalsAgeAppropriateEvalsValue' from JSON`,
  );
}

/** @internal */
export const EvalsAgeAppropriateValue$inboundSchema: z.ZodType<
  EvalsAgeAppropriateValue,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.union([z.number(), z.boolean(), z.string()]),
  explanation: z.nullable(z.string()).optional(),
});

/** @internal */
export type EvalsAgeAppropriateValue$Outbound = {
  value: number | boolean | string;
  explanation?: string | null | undefined;
};

/** @internal */
export const EvalsAgeAppropriateValue$outboundSchema: z.ZodType<
  EvalsAgeAppropriateValue$Outbound,
  z.ZodTypeDef,
  EvalsAgeAppropriateValue
> = z.object({
  value: z.union([z.number(), z.boolean(), z.string()]),
  explanation: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsAgeAppropriateValue$ {
  /** @deprecated use `EvalsAgeAppropriateValue$inboundSchema` instead. */
  export const inboundSchema = EvalsAgeAppropriateValue$inboundSchema;
  /** @deprecated use `EvalsAgeAppropriateValue$outboundSchema` instead. */
  export const outboundSchema = EvalsAgeAppropriateValue$outboundSchema;
  /** @deprecated use `EvalsAgeAppropriateValue$Outbound` instead. */
  export type Outbound = EvalsAgeAppropriateValue$Outbound;
}

export function evalsAgeAppropriateValueToJSON(
  evalsAgeAppropriateValue: EvalsAgeAppropriateValue,
): string {
  return JSON.stringify(
    EvalsAgeAppropriateValue$outboundSchema.parse(evalsAgeAppropriateValue),
  );
}

export function evalsAgeAppropriateValueFromJSON(
  jsonString: string,
): SafeParseResult<EvalsAgeAppropriateValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EvalsAgeAppropriateValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EvalsAgeAppropriateValue' from JSON`,
  );
}

/** @internal */
export const EvalsAgeAppropriateResponseBody$inboundSchema: z.ZodType<
  EvalsAgeAppropriateResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.nullable(z.lazy(() => EvalsAgeAppropriateValue$inboundSchema)),
});

/** @internal */
export type EvalsAgeAppropriateResponseBody$Outbound = {
  value: EvalsAgeAppropriateValue$Outbound | null;
};

/** @internal */
export const EvalsAgeAppropriateResponseBody$outboundSchema: z.ZodType<
  EvalsAgeAppropriateResponseBody$Outbound,
  z.ZodTypeDef,
  EvalsAgeAppropriateResponseBody
> = z.object({
  value: z.nullable(z.lazy(() => EvalsAgeAppropriateValue$outboundSchema)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsAgeAppropriateResponseBody$ {
  /** @deprecated use `EvalsAgeAppropriateResponseBody$inboundSchema` instead. */
  export const inboundSchema = EvalsAgeAppropriateResponseBody$inboundSchema;
  /** @deprecated use `EvalsAgeAppropriateResponseBody$outboundSchema` instead. */
  export const outboundSchema = EvalsAgeAppropriateResponseBody$outboundSchema;
  /** @deprecated use `EvalsAgeAppropriateResponseBody$Outbound` instead. */
  export type Outbound = EvalsAgeAppropriateResponseBody$Outbound;
}

export function evalsAgeAppropriateResponseBodyToJSON(
  evalsAgeAppropriateResponseBody: EvalsAgeAppropriateResponseBody,
): string {
  return JSON.stringify(
    EvalsAgeAppropriateResponseBody$outboundSchema.parse(
      evalsAgeAppropriateResponseBody,
    ),
  );
}

export function evalsAgeAppropriateResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<EvalsAgeAppropriateResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EvalsAgeAppropriateResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EvalsAgeAppropriateResponseBody' from JSON`,
  );
}
