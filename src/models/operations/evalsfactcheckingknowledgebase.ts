/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type EvalsFactCheckingKnowledgeBaseRequestBody = {
  query: string;
  output: string;
  model: string;
  reference: string;
};

export type EvalsFactCheckingKnowledgeBaseEvalsValue =
  | number
  | boolean
  | string;

export type EvalsFactCheckingKnowledgeBaseValue = {
  value: number | boolean | string;
  explanation?: string | null | undefined;
};

/**
 * Returns the result of the evaluator run
 */
export type EvalsFactCheckingKnowledgeBaseResponseBody = {
  value: EvalsFactCheckingKnowledgeBaseValue | null;
};

/** @internal */
export const EvalsFactCheckingKnowledgeBaseRequestBody$inboundSchema: z.ZodType<
  EvalsFactCheckingKnowledgeBaseRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  query: z.string(),
  output: z.string(),
  model: z.string(),
  reference: z.string(),
});

/** @internal */
export type EvalsFactCheckingKnowledgeBaseRequestBody$Outbound = {
  query: string;
  output: string;
  model: string;
  reference: string;
};

/** @internal */
export const EvalsFactCheckingKnowledgeBaseRequestBody$outboundSchema:
  z.ZodType<
    EvalsFactCheckingKnowledgeBaseRequestBody$Outbound,
    z.ZodTypeDef,
    EvalsFactCheckingKnowledgeBaseRequestBody
  > = z.object({
    query: z.string(),
    output: z.string(),
    model: z.string(),
    reference: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsFactCheckingKnowledgeBaseRequestBody$ {
  /** @deprecated use `EvalsFactCheckingKnowledgeBaseRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    EvalsFactCheckingKnowledgeBaseRequestBody$inboundSchema;
  /** @deprecated use `EvalsFactCheckingKnowledgeBaseRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsFactCheckingKnowledgeBaseRequestBody$outboundSchema;
  /** @deprecated use `EvalsFactCheckingKnowledgeBaseRequestBody$Outbound` instead. */
  export type Outbound = EvalsFactCheckingKnowledgeBaseRequestBody$Outbound;
}

export function evalsFactCheckingKnowledgeBaseRequestBodyToJSON(
  evalsFactCheckingKnowledgeBaseRequestBody:
    EvalsFactCheckingKnowledgeBaseRequestBody,
): string {
  return JSON.stringify(
    EvalsFactCheckingKnowledgeBaseRequestBody$outboundSchema.parse(
      evalsFactCheckingKnowledgeBaseRequestBody,
    ),
  );
}

export function evalsFactCheckingKnowledgeBaseRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  EvalsFactCheckingKnowledgeBaseRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      EvalsFactCheckingKnowledgeBaseRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'EvalsFactCheckingKnowledgeBaseRequestBody' from JSON`,
  );
}

/** @internal */
export const EvalsFactCheckingKnowledgeBaseEvalsValue$inboundSchema: z.ZodType<
  EvalsFactCheckingKnowledgeBaseEvalsValue,
  z.ZodTypeDef,
  unknown
> = z.union([z.number(), z.boolean(), z.string()]);

/** @internal */
export type EvalsFactCheckingKnowledgeBaseEvalsValue$Outbound =
  | number
  | boolean
  | string;

/** @internal */
export const EvalsFactCheckingKnowledgeBaseEvalsValue$outboundSchema: z.ZodType<
  EvalsFactCheckingKnowledgeBaseEvalsValue$Outbound,
  z.ZodTypeDef,
  EvalsFactCheckingKnowledgeBaseEvalsValue
> = z.union([z.number(), z.boolean(), z.string()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsFactCheckingKnowledgeBaseEvalsValue$ {
  /** @deprecated use `EvalsFactCheckingKnowledgeBaseEvalsValue$inboundSchema` instead. */
  export const inboundSchema =
    EvalsFactCheckingKnowledgeBaseEvalsValue$inboundSchema;
  /** @deprecated use `EvalsFactCheckingKnowledgeBaseEvalsValue$outboundSchema` instead. */
  export const outboundSchema =
    EvalsFactCheckingKnowledgeBaseEvalsValue$outboundSchema;
  /** @deprecated use `EvalsFactCheckingKnowledgeBaseEvalsValue$Outbound` instead. */
  export type Outbound = EvalsFactCheckingKnowledgeBaseEvalsValue$Outbound;
}

export function evalsFactCheckingKnowledgeBaseEvalsValueToJSON(
  evalsFactCheckingKnowledgeBaseEvalsValue:
    EvalsFactCheckingKnowledgeBaseEvalsValue,
): string {
  return JSON.stringify(
    EvalsFactCheckingKnowledgeBaseEvalsValue$outboundSchema.parse(
      evalsFactCheckingKnowledgeBaseEvalsValue,
    ),
  );
}

export function evalsFactCheckingKnowledgeBaseEvalsValueFromJSON(
  jsonString: string,
): SafeParseResult<
  EvalsFactCheckingKnowledgeBaseEvalsValue,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      EvalsFactCheckingKnowledgeBaseEvalsValue$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'EvalsFactCheckingKnowledgeBaseEvalsValue' from JSON`,
  );
}

/** @internal */
export const EvalsFactCheckingKnowledgeBaseValue$inboundSchema: z.ZodType<
  EvalsFactCheckingKnowledgeBaseValue,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.union([z.number(), z.boolean(), z.string()]),
  explanation: z.nullable(z.string()).optional(),
});

/** @internal */
export type EvalsFactCheckingKnowledgeBaseValue$Outbound = {
  value: number | boolean | string;
  explanation?: string | null | undefined;
};

/** @internal */
export const EvalsFactCheckingKnowledgeBaseValue$outboundSchema: z.ZodType<
  EvalsFactCheckingKnowledgeBaseValue$Outbound,
  z.ZodTypeDef,
  EvalsFactCheckingKnowledgeBaseValue
> = z.object({
  value: z.union([z.number(), z.boolean(), z.string()]),
  explanation: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsFactCheckingKnowledgeBaseValue$ {
  /** @deprecated use `EvalsFactCheckingKnowledgeBaseValue$inboundSchema` instead. */
  export const inboundSchema =
    EvalsFactCheckingKnowledgeBaseValue$inboundSchema;
  /** @deprecated use `EvalsFactCheckingKnowledgeBaseValue$outboundSchema` instead. */
  export const outboundSchema =
    EvalsFactCheckingKnowledgeBaseValue$outboundSchema;
  /** @deprecated use `EvalsFactCheckingKnowledgeBaseValue$Outbound` instead. */
  export type Outbound = EvalsFactCheckingKnowledgeBaseValue$Outbound;
}

export function evalsFactCheckingKnowledgeBaseValueToJSON(
  evalsFactCheckingKnowledgeBaseValue: EvalsFactCheckingKnowledgeBaseValue,
): string {
  return JSON.stringify(
    EvalsFactCheckingKnowledgeBaseValue$outboundSchema.parse(
      evalsFactCheckingKnowledgeBaseValue,
    ),
  );
}

export function evalsFactCheckingKnowledgeBaseValueFromJSON(
  jsonString: string,
): SafeParseResult<EvalsFactCheckingKnowledgeBaseValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      EvalsFactCheckingKnowledgeBaseValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EvalsFactCheckingKnowledgeBaseValue' from JSON`,
  );
}

/** @internal */
export const EvalsFactCheckingKnowledgeBaseResponseBody$inboundSchema:
  z.ZodType<EvalsFactCheckingKnowledgeBaseResponseBody, z.ZodTypeDef, unknown> =
    z.object({
      value: z.nullable(
        z.lazy(() => EvalsFactCheckingKnowledgeBaseValue$inboundSchema),
      ),
    });

/** @internal */
export type EvalsFactCheckingKnowledgeBaseResponseBody$Outbound = {
  value: EvalsFactCheckingKnowledgeBaseValue$Outbound | null;
};

/** @internal */
export const EvalsFactCheckingKnowledgeBaseResponseBody$outboundSchema:
  z.ZodType<
    EvalsFactCheckingKnowledgeBaseResponseBody$Outbound,
    z.ZodTypeDef,
    EvalsFactCheckingKnowledgeBaseResponseBody
  > = z.object({
    value: z.nullable(
      z.lazy(() => EvalsFactCheckingKnowledgeBaseValue$outboundSchema),
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsFactCheckingKnowledgeBaseResponseBody$ {
  /** @deprecated use `EvalsFactCheckingKnowledgeBaseResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    EvalsFactCheckingKnowledgeBaseResponseBody$inboundSchema;
  /** @deprecated use `EvalsFactCheckingKnowledgeBaseResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsFactCheckingKnowledgeBaseResponseBody$outboundSchema;
  /** @deprecated use `EvalsFactCheckingKnowledgeBaseResponseBody$Outbound` instead. */
  export type Outbound = EvalsFactCheckingKnowledgeBaseResponseBody$Outbound;
}

export function evalsFactCheckingKnowledgeBaseResponseBodyToJSON(
  evalsFactCheckingKnowledgeBaseResponseBody:
    EvalsFactCheckingKnowledgeBaseResponseBody,
): string {
  return JSON.stringify(
    EvalsFactCheckingKnowledgeBaseResponseBody$outboundSchema.parse(
      evalsFactCheckingKnowledgeBaseResponseBody,
    ),
  );
}

export function evalsFactCheckingKnowledgeBaseResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  EvalsFactCheckingKnowledgeBaseResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      EvalsFactCheckingKnowledgeBaseResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'EvalsFactCheckingKnowledgeBaseResponseBody' from JSON`,
  );
}
