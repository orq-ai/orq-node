/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { promptSnippetsCreate } from "../funcs/promptSnippetsCreate.js";
import { promptSnippetsDelete } from "../funcs/promptSnippetsDelete.js";
import { promptSnippetsGet } from "../funcs/promptSnippetsGet.js";
import { promptSnippetsGetByKey } from "../funcs/promptSnippetsGetByKey.js";
import { promptSnippetsList } from "../funcs/promptSnippetsList.js";
import { promptSnippetsUpdate } from "../funcs/promptSnippetsUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class PromptSnippets extends ClientSDK {
  /**
   * List all prompts snippets
   */
  async list(
    request?: operations.GetAllPromptSnippetsRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.GetAllPromptSnippetsResponseBody> {
    return unwrapAsync(promptSnippetsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create a prompt snippet
   */
  async create(
    request?: operations.CreatePromptSnippetRequestBody | undefined,
    options?: RequestOptions,
  ): Promise<operations.CreatePromptSnippetResponseBody> {
    return unwrapAsync(promptSnippetsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a prompt snippet
   */
  async update(
    request: operations.UpdatePromptSnippetRequest,
    options?: RequestOptions,
  ): Promise<operations.UpdatePromptSnippetResponseBody> {
    return unwrapAsync(promptSnippetsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a prompt snippet
   */
  async delete(
    request: operations.DeletePromptSnippetRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(promptSnippetsDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a prompt snippet
   */
  async get(
    request: operations.FindOnePromptSnippetRequest,
    options?: RequestOptions,
  ): Promise<operations.FindOnePromptSnippetResponseBody> {
    return unwrapAsync(promptSnippetsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a prompt snippet by key
   */
  async getByKey(
    request: operations.FindOneByKeyPromptSnippetRequest,
    options?: RequestOptions,
  ): Promise<operations.FindOneByKeyPromptSnippetResponseBody> {
    return unwrapAsync(promptSnippetsGetByKey(
      this,
      request,
      options,
    ));
  }
}
