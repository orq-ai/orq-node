/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type EvalsRagasResponseRelevancyRequestBody = {
  /**
   * Latest user message
   */
  input: string;
  /**
   * The generated response from the model
   */
  output: string;
  model: string;
  /**
   * Knowledge base retrievals
   */
  retrievals?: Array<string> | undefined;
};

/**
 * Returns the response relevancy evaluation result
 */
export type EvalsRagasResponseRelevancyResponseBody = {
  value: number | null;
};

/** @internal */
export const EvalsRagasResponseRelevancyRequestBody$inboundSchema: z.ZodType<
  EvalsRagasResponseRelevancyRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  input: z.string(),
  output: z.string(),
  model: z.string(),
  retrievals: z.array(z.string()).optional(),
});

/** @internal */
export type EvalsRagasResponseRelevancyRequestBody$Outbound = {
  input: string;
  output: string;
  model: string;
  retrievals?: Array<string> | undefined;
};

/** @internal */
export const EvalsRagasResponseRelevancyRequestBody$outboundSchema: z.ZodType<
  EvalsRagasResponseRelevancyRequestBody$Outbound,
  z.ZodTypeDef,
  EvalsRagasResponseRelevancyRequestBody
> = z.object({
  input: z.string(),
  output: z.string(),
  model: z.string(),
  retrievals: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsRagasResponseRelevancyRequestBody$ {
  /** @deprecated use `EvalsRagasResponseRelevancyRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    EvalsRagasResponseRelevancyRequestBody$inboundSchema;
  /** @deprecated use `EvalsRagasResponseRelevancyRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsRagasResponseRelevancyRequestBody$outboundSchema;
  /** @deprecated use `EvalsRagasResponseRelevancyRequestBody$Outbound` instead. */
  export type Outbound = EvalsRagasResponseRelevancyRequestBody$Outbound;
}

export function evalsRagasResponseRelevancyRequestBodyToJSON(
  evalsRagasResponseRelevancyRequestBody:
    EvalsRagasResponseRelevancyRequestBody,
): string {
  return JSON.stringify(
    EvalsRagasResponseRelevancyRequestBody$outboundSchema.parse(
      evalsRagasResponseRelevancyRequestBody,
    ),
  );
}

export function evalsRagasResponseRelevancyRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<EvalsRagasResponseRelevancyRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      EvalsRagasResponseRelevancyRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EvalsRagasResponseRelevancyRequestBody' from JSON`,
  );
}

/** @internal */
export const EvalsRagasResponseRelevancyResponseBody$inboundSchema: z.ZodType<
  EvalsRagasResponseRelevancyResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.nullable(z.number()),
});

/** @internal */
export type EvalsRagasResponseRelevancyResponseBody$Outbound = {
  value: number | null;
};

/** @internal */
export const EvalsRagasResponseRelevancyResponseBody$outboundSchema: z.ZodType<
  EvalsRagasResponseRelevancyResponseBody$Outbound,
  z.ZodTypeDef,
  EvalsRagasResponseRelevancyResponseBody
> = z.object({
  value: z.nullable(z.number()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsRagasResponseRelevancyResponseBody$ {
  /** @deprecated use `EvalsRagasResponseRelevancyResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    EvalsRagasResponseRelevancyResponseBody$inboundSchema;
  /** @deprecated use `EvalsRagasResponseRelevancyResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsRagasResponseRelevancyResponseBody$outboundSchema;
  /** @deprecated use `EvalsRagasResponseRelevancyResponseBody$Outbound` instead. */
  export type Outbound = EvalsRagasResponseRelevancyResponseBody$Outbound;
}

export function evalsRagasResponseRelevancyResponseBodyToJSON(
  evalsRagasResponseRelevancyResponseBody:
    EvalsRagasResponseRelevancyResponseBody,
): string {
  return JSON.stringify(
    EvalsRagasResponseRelevancyResponseBody$outboundSchema.parse(
      evalsRagasResponseRelevancyResponseBody,
    ),
  );
}

export function evalsRagasResponseRelevancyResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  EvalsRagasResponseRelevancyResponseBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      EvalsRagasResponseRelevancyResponseBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'EvalsRagasResponseRelevancyResponseBody' from JSON`,
  );
}
