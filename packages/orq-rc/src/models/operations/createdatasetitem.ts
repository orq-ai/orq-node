/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * The role of the messages author, in this case tool.
 */
export const CreateDatasetItemMessagesDatasetsRequestRequestBody5Role = {
  Tool: "tool",
} as const;
/**
 * The role of the messages author, in this case tool.
 */
export type CreateDatasetItemMessagesDatasetsRequestRequestBody5Role =
  ClosedEnum<typeof CreateDatasetItemMessagesDatasetsRequestRequestBody5Role>;

/**
 * The contents of the tool message.
 */
export type CreateDatasetItemMessagesDatasetsRequestContent =
  | string
  | Array<string>;

export type CreateDatasetItemMessagesToolMessage = {
  /**
   * The role of the messages author, in this case tool.
   */
  role: CreateDatasetItemMessagesDatasetsRequestRequestBody5Role;
  /**
   * The contents of the tool message.
   */
  content: string | Array<string>;
  /**
   * Tool call that this message is responding to.
   */
  toolCallId: string;
};

/**
 * The type of the content part.
 */
export const CreateDatasetItem2DatasetsRequestRequestBodyMessages4Type = {
  Refusal: "refusal",
} as const;
/**
 * The type of the content part.
 */
export type CreateDatasetItem2DatasetsRequestRequestBodyMessages4Type =
  ClosedEnum<typeof CreateDatasetItem2DatasetsRequestRequestBodyMessages4Type>;

export type CreateDatasetItem2RefusalContentPart = {
  /**
   * The type of the content part.
   */
  type: CreateDatasetItem2DatasetsRequestRequestBodyMessages4Type;
  /**
   * The refusal message generated by the model.
   */
  refusal: string;
};

/**
 * The type of the content part.
 */
export const CreateDatasetItem2DatasetsRequestRequestBodyMessagesType = {
  Text: "text",
} as const;
/**
 * The type of the content part.
 */
export type CreateDatasetItem2DatasetsRequestRequestBodyMessagesType =
  ClosedEnum<typeof CreateDatasetItem2DatasetsRequestRequestBodyMessagesType>;

export type CreateDatasetItem2TextContentPart = {
  /**
   * The type of the content part.
   */
  type: CreateDatasetItem2DatasetsRequestRequestBodyMessagesType;
  /**
   * The text content.
   */
  text: string;
};

export type CreateDatasetItemContentDatasets2 =
  | CreateDatasetItem2TextContentPart
  | CreateDatasetItem2RefusalContentPart;

/**
 * The contents of the assistant message. Required unless `tool_calls` or `function_call` is specified.
 */
export type CreateDatasetItemMessagesDatasetsContent =
  | string
  | Array<
    CreateDatasetItem2TextContentPart | CreateDatasetItem2RefusalContentPart
  >;

/**
 * The role of the messages author, in this case `assistant`.
 */
export const CreateDatasetItemMessagesDatasetsRequestRequestBodyRole = {
  Assistant: "assistant",
} as const;
/**
 * The role of the messages author, in this case `assistant`.
 */
export type CreateDatasetItemMessagesDatasetsRequestRequestBodyRole =
  ClosedEnum<typeof CreateDatasetItemMessagesDatasetsRequestRequestBodyRole>;

/**
 * Data about a previous audio response from the model.
 */
export type CreateDatasetItemMessagesAudio = {
  /**
   * Unique identifier for a previous audio response from the model.
   */
  id: string;
};

/**
 * The type of the tool. Currently, only `function` is supported.
 */
export const CreateDatasetItemMessagesType = {
  Function: "function",
} as const;
/**
 * The type of the tool. Currently, only `function` is supported.
 */
export type CreateDatasetItemMessagesType = ClosedEnum<
  typeof CreateDatasetItemMessagesType
>;

export type CreateDatasetItemMessagesFunction = {
  /**
   * The name of the function to call.
   */
  name?: string | undefined;
  /**
   * The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
   */
  arguments?: string | undefined;
};

export type CreateDatasetItemMessagesToolCalls = {
  /**
   * The ID of the tool call.
   */
  id: string;
  /**
   * The type of the tool. Currently, only `function` is supported.
   */
  type: CreateDatasetItemMessagesType;
  function: CreateDatasetItemMessagesFunction;
};

export type CreateDatasetItemMessagesAssistantMessage = {
  /**
   * The contents of the assistant message. Required unless `tool_calls` or `function_call` is specified.
   */
  content?:
    | string
    | Array<
      CreateDatasetItem2TextContentPart | CreateDatasetItem2RefusalContentPart
    >
    | null
    | undefined;
  /**
   * The refusal message by the assistant.
   */
  refusal?: string | null | undefined;
  /**
   * The role of the messages author, in this case `assistant`.
   */
  role: CreateDatasetItemMessagesDatasetsRequestRequestBodyRole;
  /**
   * An optional name for the participant. Provides the model information to differentiate between participants of the same role.
   */
  name?: string | undefined;
  /**
   * Data about a previous audio response from the model.
   */
  audio?: CreateDatasetItemMessagesAudio | null | undefined;
  /**
   * The tool calls generated by the model, such as function calls.
   */
  toolCalls?: Array<CreateDatasetItemMessagesToolCalls> | undefined;
  /**
   * Internal thought process of the model
   */
  reasoning?: string | undefined;
  /**
   * The signature holds a cryptographic token which verifies that the thinking block was generated by the model, and is verified when thinking is part of a multiturn conversation. This value should not be modified and should always be sent to the API when the reasoning is redacted. Currently only supported by `Anthropic`.
   */
  reasoningSignature?: string | undefined;
  /**
   * Occasionally the model's internal reasoning will be flagged by the safety systems of the provider. When this occurs, the provider will encrypt the reasoning. These redacted reasoning is decrypted when passed back to the API, allowing the model to continue its response without losing context.
   */
  redactedReasoning?: string | undefined;
};

/**
 * The role of the messages author, in this case `user`.
 */
export const CreateDatasetItemMessagesDatasetsRequestRole = {
  User: "user",
} as const;
/**
 * The role of the messages author, in this case `user`.
 */
export type CreateDatasetItemMessagesDatasetsRequestRole = ClosedEnum<
  typeof CreateDatasetItemMessagesDatasetsRequestRole
>;

/**
 * The type of the content part. Always `file`.
 */
export const CreateDatasetItem2DatasetsRequestRequestBodyType = {
  File: "file",
} as const;
/**
 * The type of the content part. Always `file`.
 */
export type CreateDatasetItem2DatasetsRequestRequestBodyType = ClosedEnum<
  typeof CreateDatasetItem2DatasetsRequestRequestBodyType
>;

export type CreateDatasetItem2File = {
  /**
   * The base64 encoded file data, used when passing the file to the model as a string.
   */
  fileData: string;
  /**
   * The name of the file, used when passing the file to the model as a string.
   */
  filename?: string | undefined;
};

export type CreateDatasetItem24 = {
  /**
   * The type of the content part. Always `file`.
   */
  type: CreateDatasetItem2DatasetsRequestRequestBodyType;
  file: CreateDatasetItem2File;
};

export const CreateDatasetItem2DatasetsRequestType = {
  InputAudio: "input_audio",
} as const;
export type CreateDatasetItem2DatasetsRequestType = ClosedEnum<
  typeof CreateDatasetItem2DatasetsRequestType
>;

/**
 * The format of the encoded audio data. Currently supports `wav` and `mp3`.
 */
export const CreateDatasetItem2Format = {
  Mp3: "mp3",
  Wav: "wav",
} as const;
/**
 * The format of the encoded audio data. Currently supports `wav` and `mp3`.
 */
export type CreateDatasetItem2Format = ClosedEnum<
  typeof CreateDatasetItem2Format
>;

export type CreateDatasetItem2InputAudio = {
  /**
   * Base64 encoded audio data.
   */
  data: string;
  /**
   * The format of the encoded audio data. Currently supports `wav` and `mp3`.
   */
  format: CreateDatasetItem2Format;
};

export type CreateDatasetItem23 = {
  type: CreateDatasetItem2DatasetsRequestType;
  inputAudio: CreateDatasetItem2InputAudio;
};

export const CreateDatasetItem2DatasetsType = {
  ImageUrl: "image_url",
} as const;
export type CreateDatasetItem2DatasetsType = ClosedEnum<
  typeof CreateDatasetItem2DatasetsType
>;

/**
 * Specifies the detail level of the image.
 */
export const CreateDatasetItem2Detail = {
  Low: "low",
  High: "high",
  Auto: "auto",
} as const;
/**
 * Specifies the detail level of the image.
 */
export type CreateDatasetItem2Detail = ClosedEnum<
  typeof CreateDatasetItem2Detail
>;

export type CreateDatasetItem2ImageUrl = {
  /**
   * Either a URL of the image or the base64 encoded image data.
   */
  url: string;
  /**
   * Specifies the detail level of the image.
   */
  detail?: CreateDatasetItem2Detail | undefined;
};

export type CreateDatasetItem22 = {
  type: CreateDatasetItem2DatasetsType;
  imageUrl: CreateDatasetItem2ImageUrl;
};

export const CreateDatasetItem2Type = {
  Text: "text",
} as const;
export type CreateDatasetItem2Type = ClosedEnum<typeof CreateDatasetItem2Type>;

export type CreateDatasetItem21 = {
  type: CreateDatasetItem2Type;
  text: string;
};

export type CreateDatasetItemContent2 =
  | CreateDatasetItem21
  | CreateDatasetItem22
  | CreateDatasetItem23
  | CreateDatasetItem24;

/**
 * The contents of the user message.
 */
export type CreateDatasetItemMessagesContent =
  | string
  | Array<
    | CreateDatasetItem21
    | CreateDatasetItem22
    | CreateDatasetItem23
    | CreateDatasetItem24
  >;

export type CreateDatasetItemMessagesUserMessage = {
  /**
   * The role of the messages author, in this case `user`.
   */
  role: CreateDatasetItemMessagesDatasetsRequestRole;
  /**
   * An optional name for the participant. Provides the model information to differentiate between participants of the same role.
   */
  name?: string | undefined;
  /**
   * The contents of the user message.
   */
  content:
    | string
    | Array<
      | CreateDatasetItem21
      | CreateDatasetItem22
      | CreateDatasetItem23
      | CreateDatasetItem24
    >;
};

/**
 * The role of the messages author, in this case `system`.
 */
export const CreateDatasetItemMessagesDatasetsRole = {
  System: "system",
} as const;
/**
 * The role of the messages author, in this case `system`.
 */
export type CreateDatasetItemMessagesDatasetsRole = ClosedEnum<
  typeof CreateDatasetItemMessagesDatasetsRole
>;

export type CreateDatasetItemMessagesSystemMessage = {
  /**
   * The role of the messages author, in this case `system`.
   */
  role: CreateDatasetItemMessagesDatasetsRole;
  /**
   * The contents of the system message.
   */
  content: string;
  /**
   * An optional name for the participant. Provides the model information to differentiate between participants of the same role.
   */
  name?: string | undefined;
};

/**
 * The role of the messages author, in this case  `developer`.
 */
export const CreateDatasetItemMessagesRole = {
  Developer: "developer",
} as const;
/**
 * The role of the messages author, in this case  `developer`.
 */
export type CreateDatasetItemMessagesRole = ClosedEnum<
  typeof CreateDatasetItemMessagesRole
>;

export type CreateDatasetItemMessagesDeveloperMessage = {
  /**
   * The role of the messages author, in this case  `developer`.
   */
  role: CreateDatasetItemMessagesRole;
  /**
   * The contents of the developer message.
   */
  content: string;
  /**
   * An optional name for the participant. Provides the model information to differentiate between participants of the same role.
   */
  name?: string | undefined;
};

export type CreateDatasetItemMessages =
  | CreateDatasetItemMessagesDeveloperMessage
  | CreateDatasetItemMessagesSystemMessage
  | CreateDatasetItemMessagesUserMessage
  | CreateDatasetItemMessagesToolMessage
  | CreateDatasetItemMessagesAssistantMessage;

export type CreateDatasetItemRequestBody = {
  /**
   * The inputs of the dataset. Key value pairs where the key is the input name and the value is the input value. Nested objects are not supported.
   */
  inputs?: { [k: string]: any } | undefined;
  /**
   * A list of messages comprising the conversation so far
   */
  messages?:
    | Array<
      | CreateDatasetItemMessagesDeveloperMessage
      | CreateDatasetItemMessagesSystemMessage
      | CreateDatasetItemMessagesUserMessage
      | CreateDatasetItemMessagesToolMessage
      | CreateDatasetItemMessagesAssistantMessage
    >
    | undefined;
  expectedOutput?: string | undefined;
};

export type CreateDatasetItemRequest = {
  datasetId: string;
  requestBody?: CreateDatasetItemRequestBody | undefined;
};

/**
 * The role of the messages author, in this case tool.
 */
export const CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBody5Role =
  {
    Tool: "tool",
  } as const;
/**
 * The role of the messages author, in this case tool.
 */
export type CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBody5Role =
  ClosedEnum<
    typeof CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBody5Role
  >;

/**
 * The contents of the tool message.
 */
export type CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONContent =
  | string
  | Array<string>;

export type CreateDatasetItemMessagesDatasetsToolMessage = {
  /**
   * The role of the messages author, in this case tool.
   */
  role:
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBody5Role;
  /**
   * The contents of the tool message.
   */
  content: string | Array<string>;
  /**
   * Tool call that this message is responding to.
   */
  toolCallId: string;
};

/**
 * The type of the content part.
 */
export const CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessages4Type =
  {
    Refusal: "refusal",
  } as const;
/**
 * The type of the content part.
 */
export type CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessages4Type =
  ClosedEnum<
    typeof CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessages4Type
  >;

export type CreateDatasetItem2DatasetsRefusalContentPart = {
  /**
   * The type of the content part.
   */
  type:
    CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessages4Type;
  /**
   * The refusal message generated by the model.
   */
  refusal: string;
};

/**
 * The type of the content part.
 */
export const CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessagesType =
  {
    Text: "text",
  } as const;
/**
 * The type of the content part.
 */
export type CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessagesType =
  ClosedEnum<
    typeof CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessagesType
  >;

export type CreateDatasetItem2DatasetsTextContentPart = {
  /**
   * The type of the content part.
   */
  type:
    CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessagesType;
  /**
   * The text content.
   */
  text: string;
};

export type CreateDatasetItemContentDatasetsResponse2002 =
  | CreateDatasetItem2DatasetsTextContentPart
  | CreateDatasetItem2DatasetsRefusalContentPart;

/**
 * The contents of the assistant message. Required unless `tool_calls` or `function_call` is specified.
 */
export type CreateDatasetItemMessagesDatasetsResponse200Content =
  | string
  | Array<
    | CreateDatasetItem2DatasetsTextContentPart
    | CreateDatasetItem2DatasetsRefusalContentPart
  >;

/**
 * The role of the messages author, in this case `assistant`.
 */
export const CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBodyRole =
  {
    Assistant: "assistant",
  } as const;
/**
 * The role of the messages author, in this case `assistant`.
 */
export type CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBodyRole =
  ClosedEnum<
    typeof CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBodyRole
  >;

/**
 * Data about a previous audio response from the model.
 */
export type CreateDatasetItemMessagesDatasetsAudio = {
  /**
   * Unique identifier for a previous audio response from the model.
   */
  id: string;
};

/**
 * The type of the tool. Currently, only `function` is supported.
 */
export const CreateDatasetItemMessagesDatasetsType = {
  Function: "function",
} as const;
/**
 * The type of the tool. Currently, only `function` is supported.
 */
export type CreateDatasetItemMessagesDatasetsType = ClosedEnum<
  typeof CreateDatasetItemMessagesDatasetsType
>;

export type CreateDatasetItemMessagesDatasetsFunction = {
  /**
   * The name of the function to call.
   */
  name?: string | undefined;
  /**
   * The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
   */
  arguments?: string | undefined;
};

export type CreateDatasetItemMessagesDatasetsToolCalls = {
  /**
   * The ID of the tool call.
   */
  id: string;
  /**
   * The type of the tool. Currently, only `function` is supported.
   */
  type: CreateDatasetItemMessagesDatasetsType;
  function: CreateDatasetItemMessagesDatasetsFunction;
};

export type CreateDatasetItemMessagesDatasetsAssistantMessage = {
  /**
   * The contents of the assistant message. Required unless `tool_calls` or `function_call` is specified.
   */
  content?:
    | string
    | Array<
      | CreateDatasetItem2DatasetsTextContentPart
      | CreateDatasetItem2DatasetsRefusalContentPart
    >
    | null
    | undefined;
  /**
   * The refusal message by the assistant.
   */
  refusal?: string | null | undefined;
  /**
   * The role of the messages author, in this case `assistant`.
   */
  role:
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBodyRole;
  /**
   * An optional name for the participant. Provides the model information to differentiate between participants of the same role.
   */
  name?: string | undefined;
  /**
   * Data about a previous audio response from the model.
   */
  audio?: CreateDatasetItemMessagesDatasetsAudio | null | undefined;
  /**
   * The tool calls generated by the model, such as function calls.
   */
  toolCalls?: Array<CreateDatasetItemMessagesDatasetsToolCalls> | undefined;
  /**
   * Internal thought process of the model
   */
  reasoning?: string | undefined;
  /**
   * The signature holds a cryptographic token which verifies that the thinking block was generated by the model, and is verified when thinking is part of a multiturn conversation. This value should not be modified and should always be sent to the API when the reasoning is redacted. Currently only supported by `Anthropic`.
   */
  reasoningSignature?: string | undefined;
  /**
   * Occasionally the model's internal reasoning will be flagged by the safety systems of the provider. When this occurs, the provider will encrypt the reasoning. These redacted reasoning is decrypted when passed back to the API, allowing the model to continue its response without losing context.
   */
  redactedReasoning?: string | undefined;
};

/**
 * The role of the messages author, in this case `user`.
 */
export const CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONRole = {
  User: "user",
} as const;
/**
 * The role of the messages author, in this case `user`.
 */
export type CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONRole =
  ClosedEnum<
    typeof CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONRole
  >;

/**
 * The type of the content part. Always `file`.
 */
export const CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyType =
  {
    File: "file",
  } as const;
/**
 * The type of the content part. Always `file`.
 */
export type CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyType
  >;

export type CreateDatasetItem2DatasetsFile = {
  /**
   * The base64 encoded file data, used when passing the file to the model as a string.
   */
  fileData: string;
  /**
   * The name of the file, used when passing the file to the model as a string.
   */
  filename?: string | undefined;
};

export type CreateDatasetItem2Datasets4 = {
  /**
   * The type of the content part. Always `file`.
   */
  type: CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyType;
  file: CreateDatasetItem2DatasetsFile;
};

export const CreateDatasetItem2DatasetsResponse200ApplicationJSONType = {
  InputAudio: "input_audio",
} as const;
export type CreateDatasetItem2DatasetsResponse200ApplicationJSONType =
  ClosedEnum<typeof CreateDatasetItem2DatasetsResponse200ApplicationJSONType>;

/**
 * The format of the encoded audio data. Currently supports `wav` and `mp3`.
 */
export const CreateDatasetItem2DatasetsFormat = {
  Mp3: "mp3",
  Wav: "wav",
} as const;
/**
 * The format of the encoded audio data. Currently supports `wav` and `mp3`.
 */
export type CreateDatasetItem2DatasetsFormat = ClosedEnum<
  typeof CreateDatasetItem2DatasetsFormat
>;

export type CreateDatasetItem2DatasetsInputAudio = {
  /**
   * Base64 encoded audio data.
   */
  data: string;
  /**
   * The format of the encoded audio data. Currently supports `wav` and `mp3`.
   */
  format: CreateDatasetItem2DatasetsFormat;
};

export type CreateDatasetItem2Datasets3 = {
  type: CreateDatasetItem2DatasetsResponse200ApplicationJSONType;
  inputAudio: CreateDatasetItem2DatasetsInputAudio;
};

export const CreateDatasetItem2DatasetsResponse200Type = {
  ImageUrl: "image_url",
} as const;
export type CreateDatasetItem2DatasetsResponse200Type = ClosedEnum<
  typeof CreateDatasetItem2DatasetsResponse200Type
>;

/**
 * Specifies the detail level of the image.
 */
export const CreateDatasetItem2DatasetsDetail = {
  Low: "low",
  High: "high",
  Auto: "auto",
} as const;
/**
 * Specifies the detail level of the image.
 */
export type CreateDatasetItem2DatasetsDetail = ClosedEnum<
  typeof CreateDatasetItem2DatasetsDetail
>;

export type CreateDatasetItem2DatasetsImageUrl = {
  /**
   * Either a URL of the image or the base64 encoded image data.
   */
  url: string;
  /**
   * Specifies the detail level of the image.
   */
  detail?: CreateDatasetItem2DatasetsDetail | undefined;
};

export type CreateDatasetItem2Datasets2 = {
  type: CreateDatasetItem2DatasetsResponse200Type;
  imageUrl: CreateDatasetItem2DatasetsImageUrl;
};

export const CreateDatasetItem2DatasetsResponseType = {
  Text: "text",
} as const;
export type CreateDatasetItem2DatasetsResponseType = ClosedEnum<
  typeof CreateDatasetItem2DatasetsResponseType
>;

export type CreateDatasetItem2Datasets1 = {
  type: CreateDatasetItem2DatasetsResponseType;
  text: string;
};

export type CreateDatasetItemContentDatasetsResponse2 =
  | CreateDatasetItem2Datasets1
  | CreateDatasetItem2Datasets2
  | CreateDatasetItem2Datasets3
  | CreateDatasetItem2Datasets4;

/**
 * The contents of the user message.
 */
export type CreateDatasetItemMessagesDatasetsResponseContent =
  | string
  | Array<
    | CreateDatasetItem2Datasets1
    | CreateDatasetItem2Datasets2
    | CreateDatasetItem2Datasets3
    | CreateDatasetItem2Datasets4
  >;

export type CreateDatasetItemMessagesDatasetsUserMessage = {
  /**
   * The role of the messages author, in this case `user`.
   */
  role: CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONRole;
  /**
   * An optional name for the participant. Provides the model information to differentiate between participants of the same role.
   */
  name?: string | undefined;
  /**
   * The contents of the user message.
   */
  content:
    | string
    | Array<
      | CreateDatasetItem2Datasets1
      | CreateDatasetItem2Datasets2
      | CreateDatasetItem2Datasets3
      | CreateDatasetItem2Datasets4
    >;
};

/**
 * The role of the messages author, in this case `system`.
 */
export const CreateDatasetItemMessagesDatasetsResponse200Role = {
  System: "system",
} as const;
/**
 * The role of the messages author, in this case `system`.
 */
export type CreateDatasetItemMessagesDatasetsResponse200Role = ClosedEnum<
  typeof CreateDatasetItemMessagesDatasetsResponse200Role
>;

export type CreateDatasetItemMessagesDatasetsSystemMessage = {
  /**
   * The role of the messages author, in this case `system`.
   */
  role: CreateDatasetItemMessagesDatasetsResponse200Role;
  /**
   * The contents of the system message.
   */
  content: string;
  /**
   * An optional name for the participant. Provides the model information to differentiate between participants of the same role.
   */
  name?: string | undefined;
};

/**
 * The role of the messages author, in this case  `developer`.
 */
export const CreateDatasetItemMessagesDatasetsResponseRole = {
  Developer: "developer",
} as const;
/**
 * The role of the messages author, in this case  `developer`.
 */
export type CreateDatasetItemMessagesDatasetsResponseRole = ClosedEnum<
  typeof CreateDatasetItemMessagesDatasetsResponseRole
>;

export type CreateDatasetItemMessagesDatasetsDeveloperMessage = {
  /**
   * The role of the messages author, in this case  `developer`.
   */
  role: CreateDatasetItemMessagesDatasetsResponseRole;
  /**
   * The contents of the developer message.
   */
  content: string;
  /**
   * An optional name for the participant. Provides the model information to differentiate between participants of the same role.
   */
  name?: string | undefined;
};

export type CreateDatasetItemDatasetsMessages =
  | CreateDatasetItemMessagesDatasetsDeveloperMessage
  | CreateDatasetItemMessagesDatasetsSystemMessage
  | CreateDatasetItemMessagesDatasetsUserMessage
  | CreateDatasetItemMessagesDatasetsToolMessage
  | CreateDatasetItemMessagesDatasetsAssistantMessage;

/**
 * Datapoint created successfully. Returns the newly created datapoint object.
 */
export type CreateDatasetItemResponseBody = {
  /**
   * The unique identifier of the dataset item
   */
  id: string;
  /**
   * The unique identifier of the workspace it belongs to
   */
  workspaceId: string;
  /**
   * The inputs of the dataset. Key value pairs where the key is the input name and the value is the input value. Nested objects are not supported.
   */
  inputs?: { [k: string]: any } | undefined;
  /**
   * A list of messages comprising the conversation so far
   */
  messages?:
    | Array<
      | CreateDatasetItemMessagesDatasetsDeveloperMessage
      | CreateDatasetItemMessagesDatasetsSystemMessage
      | CreateDatasetItemMessagesDatasetsUserMessage
      | CreateDatasetItemMessagesDatasetsToolMessage
      | CreateDatasetItemMessagesDatasetsAssistantMessage
    >
    | undefined;
  expectedOutput?: string | undefined;
  /**
   * The unique identifier of the dataset
   */
  datasetId: string;
  /**
   * The unique identifier of the user who created the dataset
   */
  createdById?: string | undefined;
  /**
   * The unique identifier of the user who last updated the dataset
   */
  updatedById?: string | undefined;
  /**
   * The date and time the resource was created
   */
  created?: Date | undefined;
  /**
   * The date and time the resource was last updated
   */
  updated?: Date | undefined;
};

/** @internal */
export const CreateDatasetItemMessagesDatasetsRequestRequestBody5Role$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItemMessagesDatasetsRequestRequestBody5Role
  > = z.nativeEnum(CreateDatasetItemMessagesDatasetsRequestRequestBody5Role);

/** @internal */
export const CreateDatasetItemMessagesDatasetsRequestRequestBody5Role$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItemMessagesDatasetsRequestRequestBody5Role
  > = CreateDatasetItemMessagesDatasetsRequestRequestBody5Role$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsRequestRequestBody5Role$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsRequestRequestBody5Role$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsRequestRequestBody5Role$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsRequestRequestBody5Role$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsRequestRequestBody5Role$outboundSchema;
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsRequestContent$inboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsRequestContent,
    z.ZodTypeDef,
    unknown
  > = z.union([z.string(), z.array(z.string())]);

/** @internal */
export type CreateDatasetItemMessagesDatasetsRequestContent$Outbound =
  | string
  | Array<string>;

/** @internal */
export const CreateDatasetItemMessagesDatasetsRequestContent$outboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsRequestContent$Outbound,
    z.ZodTypeDef,
    CreateDatasetItemMessagesDatasetsRequestContent
  > = z.union([z.string(), z.array(z.string())]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsRequestContent$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsRequestContent$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsRequestContent$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsRequestContent$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsRequestContent$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsRequestContent$Outbound` instead. */
  export type Outbound =
    CreateDatasetItemMessagesDatasetsRequestContent$Outbound;
}

export function createDatasetItemMessagesDatasetsRequestContentToJSON(
  createDatasetItemMessagesDatasetsRequestContent:
    CreateDatasetItemMessagesDatasetsRequestContent,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesDatasetsRequestContent$outboundSchema.parse(
      createDatasetItemMessagesDatasetsRequestContent,
    ),
  );
}

export function createDatasetItemMessagesDatasetsRequestContentFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateDatasetItemMessagesDatasetsRequestContent,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemMessagesDatasetsRequestContent$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateDatasetItemMessagesDatasetsRequestContent' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesToolMessage$inboundSchema: z.ZodType<
  CreateDatasetItemMessagesToolMessage,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: CreateDatasetItemMessagesDatasetsRequestRequestBody5Role$inboundSchema,
  content: z.union([z.string(), z.array(z.string())]),
  tool_call_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "tool_call_id": "toolCallId",
  });
});

/** @internal */
export type CreateDatasetItemMessagesToolMessage$Outbound = {
  role: string;
  content: string | Array<string>;
  tool_call_id: string;
};

/** @internal */
export const CreateDatasetItemMessagesToolMessage$outboundSchema: z.ZodType<
  CreateDatasetItemMessagesToolMessage$Outbound,
  z.ZodTypeDef,
  CreateDatasetItemMessagesToolMessage
> = z.object({
  role: CreateDatasetItemMessagesDatasetsRequestRequestBody5Role$outboundSchema,
  content: z.union([z.string(), z.array(z.string())]),
  toolCallId: z.string(),
}).transform((v) => {
  return remap$(v, {
    toolCallId: "tool_call_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesToolMessage$ {
  /** @deprecated use `CreateDatasetItemMessagesToolMessage$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesToolMessage$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesToolMessage$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesToolMessage$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesToolMessage$Outbound` instead. */
  export type Outbound = CreateDatasetItemMessagesToolMessage$Outbound;
}

export function createDatasetItemMessagesToolMessageToJSON(
  createDatasetItemMessagesToolMessage: CreateDatasetItemMessagesToolMessage,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesToolMessage$outboundSchema.parse(
      createDatasetItemMessagesToolMessage,
    ),
  );
}

export function createDatasetItemMessagesToolMessageFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItemMessagesToolMessage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemMessagesToolMessage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItemMessagesToolMessage' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItem2DatasetsRequestRequestBodyMessages4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItem2DatasetsRequestRequestBodyMessages4Type
  > = z.nativeEnum(CreateDatasetItem2DatasetsRequestRequestBodyMessages4Type);

/** @internal */
export const CreateDatasetItem2DatasetsRequestRequestBodyMessages4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItem2DatasetsRequestRequestBodyMessages4Type
  > = CreateDatasetItem2DatasetsRequestRequestBodyMessages4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2DatasetsRequestRequestBodyMessages4Type$ {
  /** @deprecated use `CreateDatasetItem2DatasetsRequestRequestBodyMessages4Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItem2DatasetsRequestRequestBodyMessages4Type$inboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsRequestRequestBodyMessages4Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItem2DatasetsRequestRequestBodyMessages4Type$outboundSchema;
}

/** @internal */
export const CreateDatasetItem2RefusalContentPart$inboundSchema: z.ZodType<
  CreateDatasetItem2RefusalContentPart,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CreateDatasetItem2DatasetsRequestRequestBodyMessages4Type$inboundSchema,
  refusal: z.string(),
});

/** @internal */
export type CreateDatasetItem2RefusalContentPart$Outbound = {
  type: string;
  refusal: string;
};

/** @internal */
export const CreateDatasetItem2RefusalContentPart$outboundSchema: z.ZodType<
  CreateDatasetItem2RefusalContentPart$Outbound,
  z.ZodTypeDef,
  CreateDatasetItem2RefusalContentPart
> = z.object({
  type:
    CreateDatasetItem2DatasetsRequestRequestBodyMessages4Type$outboundSchema,
  refusal: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2RefusalContentPart$ {
  /** @deprecated use `CreateDatasetItem2RefusalContentPart$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItem2RefusalContentPart$inboundSchema;
  /** @deprecated use `CreateDatasetItem2RefusalContentPart$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItem2RefusalContentPart$outboundSchema;
  /** @deprecated use `CreateDatasetItem2RefusalContentPart$Outbound` instead. */
  export type Outbound = CreateDatasetItem2RefusalContentPart$Outbound;
}

export function createDatasetItem2RefusalContentPartToJSON(
  createDatasetItem2RefusalContentPart: CreateDatasetItem2RefusalContentPart,
): string {
  return JSON.stringify(
    CreateDatasetItem2RefusalContentPart$outboundSchema.parse(
      createDatasetItem2RefusalContentPart,
    ),
  );
}

export function createDatasetItem2RefusalContentPartFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItem2RefusalContentPart, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItem2RefusalContentPart$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItem2RefusalContentPart' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItem2DatasetsRequestRequestBodyMessagesType$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItem2DatasetsRequestRequestBodyMessagesType
  > = z.nativeEnum(CreateDatasetItem2DatasetsRequestRequestBodyMessagesType);

/** @internal */
export const CreateDatasetItem2DatasetsRequestRequestBodyMessagesType$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItem2DatasetsRequestRequestBodyMessagesType
  > = CreateDatasetItem2DatasetsRequestRequestBodyMessagesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2DatasetsRequestRequestBodyMessagesType$ {
  /** @deprecated use `CreateDatasetItem2DatasetsRequestRequestBodyMessagesType$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItem2DatasetsRequestRequestBodyMessagesType$inboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsRequestRequestBodyMessagesType$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItem2DatasetsRequestRequestBodyMessagesType$outboundSchema;
}

/** @internal */
export const CreateDatasetItem2TextContentPart$inboundSchema: z.ZodType<
  CreateDatasetItem2TextContentPart,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CreateDatasetItem2DatasetsRequestRequestBodyMessagesType$inboundSchema,
  text: z.string(),
});

/** @internal */
export type CreateDatasetItem2TextContentPart$Outbound = {
  type: string;
  text: string;
};

/** @internal */
export const CreateDatasetItem2TextContentPart$outboundSchema: z.ZodType<
  CreateDatasetItem2TextContentPart$Outbound,
  z.ZodTypeDef,
  CreateDatasetItem2TextContentPart
> = z.object({
  type: CreateDatasetItem2DatasetsRequestRequestBodyMessagesType$outboundSchema,
  text: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2TextContentPart$ {
  /** @deprecated use `CreateDatasetItem2TextContentPart$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem2TextContentPart$inboundSchema;
  /** @deprecated use `CreateDatasetItem2TextContentPart$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItem2TextContentPart$outboundSchema;
  /** @deprecated use `CreateDatasetItem2TextContentPart$Outbound` instead. */
  export type Outbound = CreateDatasetItem2TextContentPart$Outbound;
}

export function createDatasetItem2TextContentPartToJSON(
  createDatasetItem2TextContentPart: CreateDatasetItem2TextContentPart,
): string {
  return JSON.stringify(
    CreateDatasetItem2TextContentPart$outboundSchema.parse(
      createDatasetItem2TextContentPart,
    ),
  );
}

export function createDatasetItem2TextContentPartFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItem2TextContentPart, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItem2TextContentPart$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItem2TextContentPart' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemContentDatasets2$inboundSchema: z.ZodType<
  CreateDatasetItemContentDatasets2,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => CreateDatasetItem2TextContentPart$inboundSchema),
  z.lazy(() => CreateDatasetItem2RefusalContentPart$inboundSchema),
]);

/** @internal */
export type CreateDatasetItemContentDatasets2$Outbound =
  | CreateDatasetItem2TextContentPart$Outbound
  | CreateDatasetItem2RefusalContentPart$Outbound;

/** @internal */
export const CreateDatasetItemContentDatasets2$outboundSchema: z.ZodType<
  CreateDatasetItemContentDatasets2$Outbound,
  z.ZodTypeDef,
  CreateDatasetItemContentDatasets2
> = z.union([
  z.lazy(() => CreateDatasetItem2TextContentPart$outboundSchema),
  z.lazy(() => CreateDatasetItem2RefusalContentPart$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemContentDatasets2$ {
  /** @deprecated use `CreateDatasetItemContentDatasets2$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItemContentDatasets2$inboundSchema;
  /** @deprecated use `CreateDatasetItemContentDatasets2$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemContentDatasets2$outboundSchema;
  /** @deprecated use `CreateDatasetItemContentDatasets2$Outbound` instead. */
  export type Outbound = CreateDatasetItemContentDatasets2$Outbound;
}

export function createDatasetItemContentDatasets2ToJSON(
  createDatasetItemContentDatasets2: CreateDatasetItemContentDatasets2,
): string {
  return JSON.stringify(
    CreateDatasetItemContentDatasets2$outboundSchema.parse(
      createDatasetItemContentDatasets2,
    ),
  );
}

export function createDatasetItemContentDatasets2FromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItemContentDatasets2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItemContentDatasets2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItemContentDatasets2' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsContent$inboundSchema: z.ZodType<
  CreateDatasetItemMessagesDatasetsContent,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => CreateDatasetItem2TextContentPart$inboundSchema),
    z.lazy(() => CreateDatasetItem2RefusalContentPart$inboundSchema),
  ])),
]);

/** @internal */
export type CreateDatasetItemMessagesDatasetsContent$Outbound =
  | string
  | Array<
    | CreateDatasetItem2TextContentPart$Outbound
    | CreateDatasetItem2RefusalContentPart$Outbound
  >;

/** @internal */
export const CreateDatasetItemMessagesDatasetsContent$outboundSchema: z.ZodType<
  CreateDatasetItemMessagesDatasetsContent$Outbound,
  z.ZodTypeDef,
  CreateDatasetItemMessagesDatasetsContent
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => CreateDatasetItem2TextContentPart$outboundSchema),
    z.lazy(() => CreateDatasetItem2RefusalContentPart$outboundSchema),
  ])),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsContent$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsContent$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsContent$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsContent$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsContent$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsContent$Outbound` instead. */
  export type Outbound = CreateDatasetItemMessagesDatasetsContent$Outbound;
}

export function createDatasetItemMessagesDatasetsContentToJSON(
  createDatasetItemMessagesDatasetsContent:
    CreateDatasetItemMessagesDatasetsContent,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesDatasetsContent$outboundSchema.parse(
      createDatasetItemMessagesDatasetsContent,
    ),
  );
}

export function createDatasetItemMessagesDatasetsContentFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateDatasetItemMessagesDatasetsContent,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemMessagesDatasetsContent$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateDatasetItemMessagesDatasetsContent' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsRequestRequestBodyRole$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItemMessagesDatasetsRequestRequestBodyRole
  > = z.nativeEnum(CreateDatasetItemMessagesDatasetsRequestRequestBodyRole);

/** @internal */
export const CreateDatasetItemMessagesDatasetsRequestRequestBodyRole$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItemMessagesDatasetsRequestRequestBodyRole
  > = CreateDatasetItemMessagesDatasetsRequestRequestBodyRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsRequestRequestBodyRole$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsRequestRequestBodyRole$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsRequestRequestBodyRole$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsRequestRequestBodyRole$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsRequestRequestBodyRole$outboundSchema;
}

/** @internal */
export const CreateDatasetItemMessagesAudio$inboundSchema: z.ZodType<
  CreateDatasetItemMessagesAudio,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type CreateDatasetItemMessagesAudio$Outbound = {
  id: string;
};

/** @internal */
export const CreateDatasetItemMessagesAudio$outboundSchema: z.ZodType<
  CreateDatasetItemMessagesAudio$Outbound,
  z.ZodTypeDef,
  CreateDatasetItemMessagesAudio
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesAudio$ {
  /** @deprecated use `CreateDatasetItemMessagesAudio$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItemMessagesAudio$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesAudio$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItemMessagesAudio$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesAudio$Outbound` instead. */
  export type Outbound = CreateDatasetItemMessagesAudio$Outbound;
}

export function createDatasetItemMessagesAudioToJSON(
  createDatasetItemMessagesAudio: CreateDatasetItemMessagesAudio,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesAudio$outboundSchema.parse(
      createDatasetItemMessagesAudio,
    ),
  );
}

export function createDatasetItemMessagesAudioFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItemMessagesAudio, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItemMessagesAudio$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItemMessagesAudio' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesType$inboundSchema: z.ZodNativeEnum<
  typeof CreateDatasetItemMessagesType
> = z.nativeEnum(CreateDatasetItemMessagesType);

/** @internal */
export const CreateDatasetItemMessagesType$outboundSchema: z.ZodNativeEnum<
  typeof CreateDatasetItemMessagesType
> = CreateDatasetItemMessagesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesType$ {
  /** @deprecated use `CreateDatasetItemMessagesType$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItemMessagesType$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesType$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItemMessagesType$outboundSchema;
}

/** @internal */
export const CreateDatasetItemMessagesFunction$inboundSchema: z.ZodType<
  CreateDatasetItemMessagesFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  arguments: z.string().optional(),
});

/** @internal */
export type CreateDatasetItemMessagesFunction$Outbound = {
  name?: string | undefined;
  arguments?: string | undefined;
};

/** @internal */
export const CreateDatasetItemMessagesFunction$outboundSchema: z.ZodType<
  CreateDatasetItemMessagesFunction$Outbound,
  z.ZodTypeDef,
  CreateDatasetItemMessagesFunction
> = z.object({
  name: z.string().optional(),
  arguments: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesFunction$ {
  /** @deprecated use `CreateDatasetItemMessagesFunction$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItemMessagesFunction$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesFunction$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesFunction$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesFunction$Outbound` instead. */
  export type Outbound = CreateDatasetItemMessagesFunction$Outbound;
}

export function createDatasetItemMessagesFunctionToJSON(
  createDatasetItemMessagesFunction: CreateDatasetItemMessagesFunction,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesFunction$outboundSchema.parse(
      createDatasetItemMessagesFunction,
    ),
  );
}

export function createDatasetItemMessagesFunctionFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItemMessagesFunction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItemMessagesFunction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItemMessagesFunction' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesToolCalls$inboundSchema: z.ZodType<
  CreateDatasetItemMessagesToolCalls,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  type: CreateDatasetItemMessagesType$inboundSchema,
  function: z.lazy(() => CreateDatasetItemMessagesFunction$inboundSchema),
});

/** @internal */
export type CreateDatasetItemMessagesToolCalls$Outbound = {
  id: string;
  type: string;
  function: CreateDatasetItemMessagesFunction$Outbound;
};

/** @internal */
export const CreateDatasetItemMessagesToolCalls$outboundSchema: z.ZodType<
  CreateDatasetItemMessagesToolCalls$Outbound,
  z.ZodTypeDef,
  CreateDatasetItemMessagesToolCalls
> = z.object({
  id: z.string(),
  type: CreateDatasetItemMessagesType$outboundSchema,
  function: z.lazy(() => CreateDatasetItemMessagesFunction$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesToolCalls$ {
  /** @deprecated use `CreateDatasetItemMessagesToolCalls$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItemMessagesToolCalls$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesToolCalls$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesToolCalls$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesToolCalls$Outbound` instead. */
  export type Outbound = CreateDatasetItemMessagesToolCalls$Outbound;
}

export function createDatasetItemMessagesToolCallsToJSON(
  createDatasetItemMessagesToolCalls: CreateDatasetItemMessagesToolCalls,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesToolCalls$outboundSchema.parse(
      createDatasetItemMessagesToolCalls,
    ),
  );
}

export function createDatasetItemMessagesToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItemMessagesToolCalls, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemMessagesToolCalls$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItemMessagesToolCalls' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesAssistantMessage$inboundSchema: z.ZodType<
  CreateDatasetItemMessagesAssistantMessage,
  z.ZodTypeDef,
  unknown
> = z.object({
  content: z.nullable(
    z.union([
      z.string(),
      z.array(
        z.union([
          z.lazy(() => CreateDatasetItem2TextContentPart$inboundSchema),
          z.lazy(() => CreateDatasetItem2RefusalContentPart$inboundSchema),
        ]),
      ),
    ]),
  ).optional(),
  refusal: z.nullable(z.string()).optional(),
  role: CreateDatasetItemMessagesDatasetsRequestRequestBodyRole$inboundSchema,
  name: z.string().optional(),
  audio: z.nullable(z.lazy(() => CreateDatasetItemMessagesAudio$inboundSchema))
    .optional(),
  tool_calls: z.array(
    z.lazy(() => CreateDatasetItemMessagesToolCalls$inboundSchema),
  ).optional(),
  reasoning: z.string().optional(),
  reasoning_signature: z.string().optional(),
  redacted_reasoning: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "tool_calls": "toolCalls",
    "reasoning_signature": "reasoningSignature",
    "redacted_reasoning": "redactedReasoning",
  });
});

/** @internal */
export type CreateDatasetItemMessagesAssistantMessage$Outbound = {
  content?:
    | string
    | Array<
      | CreateDatasetItem2TextContentPart$Outbound
      | CreateDatasetItem2RefusalContentPart$Outbound
    >
    | null
    | undefined;
  refusal?: string | null | undefined;
  role: string;
  name?: string | undefined;
  audio?: CreateDatasetItemMessagesAudio$Outbound | null | undefined;
  tool_calls?: Array<CreateDatasetItemMessagesToolCalls$Outbound> | undefined;
  reasoning?: string | undefined;
  reasoning_signature?: string | undefined;
  redacted_reasoning?: string | undefined;
};

/** @internal */
export const CreateDatasetItemMessagesAssistantMessage$outboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesAssistantMessage$Outbound,
    z.ZodTypeDef,
    CreateDatasetItemMessagesAssistantMessage
  > = z.object({
    content: z.nullable(
      z.union([
        z.string(),
        z.array(
          z.union([
            z.lazy(() => CreateDatasetItem2TextContentPart$outboundSchema),
            z.lazy(() => CreateDatasetItem2RefusalContentPart$outboundSchema),
          ]),
        ),
      ]),
    ).optional(),
    refusal: z.nullable(z.string()).optional(),
    role:
      CreateDatasetItemMessagesDatasetsRequestRequestBodyRole$outboundSchema,
    name: z.string().optional(),
    audio: z.nullable(
      z.lazy(() => CreateDatasetItemMessagesAudio$outboundSchema),
    ).optional(),
    toolCalls: z.array(
      z.lazy(() => CreateDatasetItemMessagesToolCalls$outboundSchema),
    ).optional(),
    reasoning: z.string().optional(),
    reasoningSignature: z.string().optional(),
    redactedReasoning: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      toolCalls: "tool_calls",
      reasoningSignature: "reasoning_signature",
      redactedReasoning: "redacted_reasoning",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesAssistantMessage$ {
  /** @deprecated use `CreateDatasetItemMessagesAssistantMessage$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesAssistantMessage$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesAssistantMessage$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesAssistantMessage$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesAssistantMessage$Outbound` instead. */
  export type Outbound = CreateDatasetItemMessagesAssistantMessage$Outbound;
}

export function createDatasetItemMessagesAssistantMessageToJSON(
  createDatasetItemMessagesAssistantMessage:
    CreateDatasetItemMessagesAssistantMessage,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesAssistantMessage$outboundSchema.parse(
      createDatasetItemMessagesAssistantMessage,
    ),
  );
}

export function createDatasetItemMessagesAssistantMessageFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateDatasetItemMessagesAssistantMessage,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemMessagesAssistantMessage$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateDatasetItemMessagesAssistantMessage' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsRequestRole$inboundSchema:
  z.ZodNativeEnum<typeof CreateDatasetItemMessagesDatasetsRequestRole> = z
    .nativeEnum(CreateDatasetItemMessagesDatasetsRequestRole);

/** @internal */
export const CreateDatasetItemMessagesDatasetsRequestRole$outboundSchema:
  z.ZodNativeEnum<typeof CreateDatasetItemMessagesDatasetsRequestRole> =
    CreateDatasetItemMessagesDatasetsRequestRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsRequestRole$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsRequestRole$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsRequestRole$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsRequestRole$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsRequestRole$outboundSchema;
}

/** @internal */
export const CreateDatasetItem2DatasetsRequestRequestBodyType$inboundSchema:
  z.ZodNativeEnum<typeof CreateDatasetItem2DatasetsRequestRequestBodyType> = z
    .nativeEnum(CreateDatasetItem2DatasetsRequestRequestBodyType);

/** @internal */
export const CreateDatasetItem2DatasetsRequestRequestBodyType$outboundSchema:
  z.ZodNativeEnum<typeof CreateDatasetItem2DatasetsRequestRequestBodyType> =
    CreateDatasetItem2DatasetsRequestRequestBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2DatasetsRequestRequestBodyType$ {
  /** @deprecated use `CreateDatasetItem2DatasetsRequestRequestBodyType$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItem2DatasetsRequestRequestBodyType$inboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsRequestRequestBodyType$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItem2DatasetsRequestRequestBodyType$outboundSchema;
}

/** @internal */
export const CreateDatasetItem2File$inboundSchema: z.ZodType<
  CreateDatasetItem2File,
  z.ZodTypeDef,
  unknown
> = z.object({
  file_data: z.string(),
  filename: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "file_data": "fileData",
  });
});

/** @internal */
export type CreateDatasetItem2File$Outbound = {
  file_data: string;
  filename?: string | undefined;
};

/** @internal */
export const CreateDatasetItem2File$outboundSchema: z.ZodType<
  CreateDatasetItem2File$Outbound,
  z.ZodTypeDef,
  CreateDatasetItem2File
> = z.object({
  fileData: z.string(),
  filename: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    fileData: "file_data",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2File$ {
  /** @deprecated use `CreateDatasetItem2File$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem2File$inboundSchema;
  /** @deprecated use `CreateDatasetItem2File$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItem2File$outboundSchema;
  /** @deprecated use `CreateDatasetItem2File$Outbound` instead. */
  export type Outbound = CreateDatasetItem2File$Outbound;
}

export function createDatasetItem2FileToJSON(
  createDatasetItem2File: CreateDatasetItem2File,
): string {
  return JSON.stringify(
    CreateDatasetItem2File$outboundSchema.parse(createDatasetItem2File),
  );
}

export function createDatasetItem2FileFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItem2File, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItem2File$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItem2File' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItem24$inboundSchema: z.ZodType<
  CreateDatasetItem24,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CreateDatasetItem2DatasetsRequestRequestBodyType$inboundSchema,
  file: z.lazy(() => CreateDatasetItem2File$inboundSchema),
});

/** @internal */
export type CreateDatasetItem24$Outbound = {
  type: string;
  file: CreateDatasetItem2File$Outbound;
};

/** @internal */
export const CreateDatasetItem24$outboundSchema: z.ZodType<
  CreateDatasetItem24$Outbound,
  z.ZodTypeDef,
  CreateDatasetItem24
> = z.object({
  type: CreateDatasetItem2DatasetsRequestRequestBodyType$outboundSchema,
  file: z.lazy(() => CreateDatasetItem2File$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem24$ {
  /** @deprecated use `CreateDatasetItem24$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem24$inboundSchema;
  /** @deprecated use `CreateDatasetItem24$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItem24$outboundSchema;
  /** @deprecated use `CreateDatasetItem24$Outbound` instead. */
  export type Outbound = CreateDatasetItem24$Outbound;
}

export function createDatasetItem24ToJSON(
  createDatasetItem24: CreateDatasetItem24,
): string {
  return JSON.stringify(
    CreateDatasetItem24$outboundSchema.parse(createDatasetItem24),
  );
}

export function createDatasetItem24FromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItem24, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItem24$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItem24' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItem2DatasetsRequestType$inboundSchema:
  z.ZodNativeEnum<typeof CreateDatasetItem2DatasetsRequestType> = z.nativeEnum(
    CreateDatasetItem2DatasetsRequestType,
  );

/** @internal */
export const CreateDatasetItem2DatasetsRequestType$outboundSchema:
  z.ZodNativeEnum<typeof CreateDatasetItem2DatasetsRequestType> =
    CreateDatasetItem2DatasetsRequestType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2DatasetsRequestType$ {
  /** @deprecated use `CreateDatasetItem2DatasetsRequestType$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItem2DatasetsRequestType$inboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsRequestType$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItem2DatasetsRequestType$outboundSchema;
}

/** @internal */
export const CreateDatasetItem2Format$inboundSchema: z.ZodNativeEnum<
  typeof CreateDatasetItem2Format
> = z.nativeEnum(CreateDatasetItem2Format);

/** @internal */
export const CreateDatasetItem2Format$outboundSchema: z.ZodNativeEnum<
  typeof CreateDatasetItem2Format
> = CreateDatasetItem2Format$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2Format$ {
  /** @deprecated use `CreateDatasetItem2Format$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem2Format$inboundSchema;
  /** @deprecated use `CreateDatasetItem2Format$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItem2Format$outboundSchema;
}

/** @internal */
export const CreateDatasetItem2InputAudio$inboundSchema: z.ZodType<
  CreateDatasetItem2InputAudio,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.string(),
  format: CreateDatasetItem2Format$inboundSchema,
});

/** @internal */
export type CreateDatasetItem2InputAudio$Outbound = {
  data: string;
  format: string;
};

/** @internal */
export const CreateDatasetItem2InputAudio$outboundSchema: z.ZodType<
  CreateDatasetItem2InputAudio$Outbound,
  z.ZodTypeDef,
  CreateDatasetItem2InputAudio
> = z.object({
  data: z.string(),
  format: CreateDatasetItem2Format$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2InputAudio$ {
  /** @deprecated use `CreateDatasetItem2InputAudio$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem2InputAudio$inboundSchema;
  /** @deprecated use `CreateDatasetItem2InputAudio$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItem2InputAudio$outboundSchema;
  /** @deprecated use `CreateDatasetItem2InputAudio$Outbound` instead. */
  export type Outbound = CreateDatasetItem2InputAudio$Outbound;
}

export function createDatasetItem2InputAudioToJSON(
  createDatasetItem2InputAudio: CreateDatasetItem2InputAudio,
): string {
  return JSON.stringify(
    CreateDatasetItem2InputAudio$outboundSchema.parse(
      createDatasetItem2InputAudio,
    ),
  );
}

export function createDatasetItem2InputAudioFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItem2InputAudio, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItem2InputAudio$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItem2InputAudio' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItem23$inboundSchema: z.ZodType<
  CreateDatasetItem23,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CreateDatasetItem2DatasetsRequestType$inboundSchema,
  input_audio: z.lazy(() => CreateDatasetItem2InputAudio$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "input_audio": "inputAudio",
  });
});

/** @internal */
export type CreateDatasetItem23$Outbound = {
  type: string;
  input_audio: CreateDatasetItem2InputAudio$Outbound;
};

/** @internal */
export const CreateDatasetItem23$outboundSchema: z.ZodType<
  CreateDatasetItem23$Outbound,
  z.ZodTypeDef,
  CreateDatasetItem23
> = z.object({
  type: CreateDatasetItem2DatasetsRequestType$outboundSchema,
  inputAudio: z.lazy(() => CreateDatasetItem2InputAudio$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    inputAudio: "input_audio",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem23$ {
  /** @deprecated use `CreateDatasetItem23$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem23$inboundSchema;
  /** @deprecated use `CreateDatasetItem23$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItem23$outboundSchema;
  /** @deprecated use `CreateDatasetItem23$Outbound` instead. */
  export type Outbound = CreateDatasetItem23$Outbound;
}

export function createDatasetItem23ToJSON(
  createDatasetItem23: CreateDatasetItem23,
): string {
  return JSON.stringify(
    CreateDatasetItem23$outboundSchema.parse(createDatasetItem23),
  );
}

export function createDatasetItem23FromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItem23, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItem23$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItem23' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItem2DatasetsType$inboundSchema: z.ZodNativeEnum<
  typeof CreateDatasetItem2DatasetsType
> = z.nativeEnum(CreateDatasetItem2DatasetsType);

/** @internal */
export const CreateDatasetItem2DatasetsType$outboundSchema: z.ZodNativeEnum<
  typeof CreateDatasetItem2DatasetsType
> = CreateDatasetItem2DatasetsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2DatasetsType$ {
  /** @deprecated use `CreateDatasetItem2DatasetsType$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem2DatasetsType$inboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsType$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItem2DatasetsType$outboundSchema;
}

/** @internal */
export const CreateDatasetItem2Detail$inboundSchema: z.ZodNativeEnum<
  typeof CreateDatasetItem2Detail
> = z.nativeEnum(CreateDatasetItem2Detail);

/** @internal */
export const CreateDatasetItem2Detail$outboundSchema: z.ZodNativeEnum<
  typeof CreateDatasetItem2Detail
> = CreateDatasetItem2Detail$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2Detail$ {
  /** @deprecated use `CreateDatasetItem2Detail$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem2Detail$inboundSchema;
  /** @deprecated use `CreateDatasetItem2Detail$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItem2Detail$outboundSchema;
}

/** @internal */
export const CreateDatasetItem2ImageUrl$inboundSchema: z.ZodType<
  CreateDatasetItem2ImageUrl,
  z.ZodTypeDef,
  unknown
> = z.object({
  url: z.string(),
  detail: CreateDatasetItem2Detail$inboundSchema.optional(),
});

/** @internal */
export type CreateDatasetItem2ImageUrl$Outbound = {
  url: string;
  detail?: string | undefined;
};

/** @internal */
export const CreateDatasetItem2ImageUrl$outboundSchema: z.ZodType<
  CreateDatasetItem2ImageUrl$Outbound,
  z.ZodTypeDef,
  CreateDatasetItem2ImageUrl
> = z.object({
  url: z.string(),
  detail: CreateDatasetItem2Detail$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2ImageUrl$ {
  /** @deprecated use `CreateDatasetItem2ImageUrl$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem2ImageUrl$inboundSchema;
  /** @deprecated use `CreateDatasetItem2ImageUrl$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItem2ImageUrl$outboundSchema;
  /** @deprecated use `CreateDatasetItem2ImageUrl$Outbound` instead. */
  export type Outbound = CreateDatasetItem2ImageUrl$Outbound;
}

export function createDatasetItem2ImageUrlToJSON(
  createDatasetItem2ImageUrl: CreateDatasetItem2ImageUrl,
): string {
  return JSON.stringify(
    CreateDatasetItem2ImageUrl$outboundSchema.parse(createDatasetItem2ImageUrl),
  );
}

export function createDatasetItem2ImageUrlFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItem2ImageUrl, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItem2ImageUrl$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItem2ImageUrl' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItem22$inboundSchema: z.ZodType<
  CreateDatasetItem22,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CreateDatasetItem2DatasetsType$inboundSchema,
  image_url: z.lazy(() => CreateDatasetItem2ImageUrl$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "image_url": "imageUrl",
  });
});

/** @internal */
export type CreateDatasetItem22$Outbound = {
  type: string;
  image_url: CreateDatasetItem2ImageUrl$Outbound;
};

/** @internal */
export const CreateDatasetItem22$outboundSchema: z.ZodType<
  CreateDatasetItem22$Outbound,
  z.ZodTypeDef,
  CreateDatasetItem22
> = z.object({
  type: CreateDatasetItem2DatasetsType$outboundSchema,
  imageUrl: z.lazy(() => CreateDatasetItem2ImageUrl$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    imageUrl: "image_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem22$ {
  /** @deprecated use `CreateDatasetItem22$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem22$inboundSchema;
  /** @deprecated use `CreateDatasetItem22$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItem22$outboundSchema;
  /** @deprecated use `CreateDatasetItem22$Outbound` instead. */
  export type Outbound = CreateDatasetItem22$Outbound;
}

export function createDatasetItem22ToJSON(
  createDatasetItem22: CreateDatasetItem22,
): string {
  return JSON.stringify(
    CreateDatasetItem22$outboundSchema.parse(createDatasetItem22),
  );
}

export function createDatasetItem22FromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItem22, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItem22$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItem22' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItem2Type$inboundSchema: z.ZodNativeEnum<
  typeof CreateDatasetItem2Type
> = z.nativeEnum(CreateDatasetItem2Type);

/** @internal */
export const CreateDatasetItem2Type$outboundSchema: z.ZodNativeEnum<
  typeof CreateDatasetItem2Type
> = CreateDatasetItem2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2Type$ {
  /** @deprecated use `CreateDatasetItem2Type$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem2Type$inboundSchema;
  /** @deprecated use `CreateDatasetItem2Type$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItem2Type$outboundSchema;
}

/** @internal */
export const CreateDatasetItem21$inboundSchema: z.ZodType<
  CreateDatasetItem21,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CreateDatasetItem2Type$inboundSchema,
  text: z.string(),
});

/** @internal */
export type CreateDatasetItem21$Outbound = {
  type: string;
  text: string;
};

/** @internal */
export const CreateDatasetItem21$outboundSchema: z.ZodType<
  CreateDatasetItem21$Outbound,
  z.ZodTypeDef,
  CreateDatasetItem21
> = z.object({
  type: CreateDatasetItem2Type$outboundSchema,
  text: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem21$ {
  /** @deprecated use `CreateDatasetItem21$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem21$inboundSchema;
  /** @deprecated use `CreateDatasetItem21$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItem21$outboundSchema;
  /** @deprecated use `CreateDatasetItem21$Outbound` instead. */
  export type Outbound = CreateDatasetItem21$Outbound;
}

export function createDatasetItem21ToJSON(
  createDatasetItem21: CreateDatasetItem21,
): string {
  return JSON.stringify(
    CreateDatasetItem21$outboundSchema.parse(createDatasetItem21),
  );
}

export function createDatasetItem21FromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItem21, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItem21$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItem21' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemContent2$inboundSchema: z.ZodType<
  CreateDatasetItemContent2,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => CreateDatasetItem21$inboundSchema),
  z.lazy(() => CreateDatasetItem22$inboundSchema),
  z.lazy(() => CreateDatasetItem23$inboundSchema),
  z.lazy(() => CreateDatasetItem24$inboundSchema),
]);

/** @internal */
export type CreateDatasetItemContent2$Outbound =
  | CreateDatasetItem21$Outbound
  | CreateDatasetItem22$Outbound
  | CreateDatasetItem23$Outbound
  | CreateDatasetItem24$Outbound;

/** @internal */
export const CreateDatasetItemContent2$outboundSchema: z.ZodType<
  CreateDatasetItemContent2$Outbound,
  z.ZodTypeDef,
  CreateDatasetItemContent2
> = z.union([
  z.lazy(() => CreateDatasetItem21$outboundSchema),
  z.lazy(() => CreateDatasetItem22$outboundSchema),
  z.lazy(() => CreateDatasetItem23$outboundSchema),
  z.lazy(() => CreateDatasetItem24$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemContent2$ {
  /** @deprecated use `CreateDatasetItemContent2$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItemContent2$inboundSchema;
  /** @deprecated use `CreateDatasetItemContent2$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItemContent2$outboundSchema;
  /** @deprecated use `CreateDatasetItemContent2$Outbound` instead. */
  export type Outbound = CreateDatasetItemContent2$Outbound;
}

export function createDatasetItemContent2ToJSON(
  createDatasetItemContent2: CreateDatasetItemContent2,
): string {
  return JSON.stringify(
    CreateDatasetItemContent2$outboundSchema.parse(createDatasetItemContent2),
  );
}

export function createDatasetItemContent2FromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItemContent2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItemContent2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItemContent2' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesContent$inboundSchema: z.ZodType<
  CreateDatasetItemMessagesContent,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => CreateDatasetItem21$inboundSchema),
    z.lazy(() => CreateDatasetItem22$inboundSchema),
    z.lazy(() => CreateDatasetItem23$inboundSchema),
    z.lazy(() => CreateDatasetItem24$inboundSchema),
  ])),
]);

/** @internal */
export type CreateDatasetItemMessagesContent$Outbound =
  | string
  | Array<
    | CreateDatasetItem21$Outbound
    | CreateDatasetItem22$Outbound
    | CreateDatasetItem23$Outbound
    | CreateDatasetItem24$Outbound
  >;

/** @internal */
export const CreateDatasetItemMessagesContent$outboundSchema: z.ZodType<
  CreateDatasetItemMessagesContent$Outbound,
  z.ZodTypeDef,
  CreateDatasetItemMessagesContent
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => CreateDatasetItem21$outboundSchema),
    z.lazy(() => CreateDatasetItem22$outboundSchema),
    z.lazy(() => CreateDatasetItem23$outboundSchema),
    z.lazy(() => CreateDatasetItem24$outboundSchema),
  ])),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesContent$ {
  /** @deprecated use `CreateDatasetItemMessagesContent$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItemMessagesContent$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesContent$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItemMessagesContent$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesContent$Outbound` instead. */
  export type Outbound = CreateDatasetItemMessagesContent$Outbound;
}

export function createDatasetItemMessagesContentToJSON(
  createDatasetItemMessagesContent: CreateDatasetItemMessagesContent,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesContent$outboundSchema.parse(
      createDatasetItemMessagesContent,
    ),
  );
}

export function createDatasetItemMessagesContentFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItemMessagesContent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItemMessagesContent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItemMessagesContent' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesUserMessage$inboundSchema: z.ZodType<
  CreateDatasetItemMessagesUserMessage,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: CreateDatasetItemMessagesDatasetsRequestRole$inboundSchema,
  name: z.string().optional(),
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => CreateDatasetItem21$inboundSchema),
      z.lazy(() => CreateDatasetItem22$inboundSchema),
      z.lazy(() => CreateDatasetItem23$inboundSchema),
      z.lazy(() => CreateDatasetItem24$inboundSchema),
    ])),
  ]),
});

/** @internal */
export type CreateDatasetItemMessagesUserMessage$Outbound = {
  role: string;
  name?: string | undefined;
  content:
    | string
    | Array<
      | CreateDatasetItem21$Outbound
      | CreateDatasetItem22$Outbound
      | CreateDatasetItem23$Outbound
      | CreateDatasetItem24$Outbound
    >;
};

/** @internal */
export const CreateDatasetItemMessagesUserMessage$outboundSchema: z.ZodType<
  CreateDatasetItemMessagesUserMessage$Outbound,
  z.ZodTypeDef,
  CreateDatasetItemMessagesUserMessage
> = z.object({
  role: CreateDatasetItemMessagesDatasetsRequestRole$outboundSchema,
  name: z.string().optional(),
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => CreateDatasetItem21$outboundSchema),
      z.lazy(() => CreateDatasetItem22$outboundSchema),
      z.lazy(() => CreateDatasetItem23$outboundSchema),
      z.lazy(() => CreateDatasetItem24$outboundSchema),
    ])),
  ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesUserMessage$ {
  /** @deprecated use `CreateDatasetItemMessagesUserMessage$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesUserMessage$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesUserMessage$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesUserMessage$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesUserMessage$Outbound` instead. */
  export type Outbound = CreateDatasetItemMessagesUserMessage$Outbound;
}

export function createDatasetItemMessagesUserMessageToJSON(
  createDatasetItemMessagesUserMessage: CreateDatasetItemMessagesUserMessage,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesUserMessage$outboundSchema.parse(
      createDatasetItemMessagesUserMessage,
    ),
  );
}

export function createDatasetItemMessagesUserMessageFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItemMessagesUserMessage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemMessagesUserMessage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItemMessagesUserMessage' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsRole$inboundSchema:
  z.ZodNativeEnum<typeof CreateDatasetItemMessagesDatasetsRole> = z.nativeEnum(
    CreateDatasetItemMessagesDatasetsRole,
  );

/** @internal */
export const CreateDatasetItemMessagesDatasetsRole$outboundSchema:
  z.ZodNativeEnum<typeof CreateDatasetItemMessagesDatasetsRole> =
    CreateDatasetItemMessagesDatasetsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsRole$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsRole$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsRole$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsRole$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsRole$outboundSchema;
}

/** @internal */
export const CreateDatasetItemMessagesSystemMessage$inboundSchema: z.ZodType<
  CreateDatasetItemMessagesSystemMessage,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: CreateDatasetItemMessagesDatasetsRole$inboundSchema,
  content: z.string(),
  name: z.string().optional(),
});

/** @internal */
export type CreateDatasetItemMessagesSystemMessage$Outbound = {
  role: string;
  content: string;
  name?: string | undefined;
};

/** @internal */
export const CreateDatasetItemMessagesSystemMessage$outboundSchema: z.ZodType<
  CreateDatasetItemMessagesSystemMessage$Outbound,
  z.ZodTypeDef,
  CreateDatasetItemMessagesSystemMessage
> = z.object({
  role: CreateDatasetItemMessagesDatasetsRole$outboundSchema,
  content: z.string(),
  name: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesSystemMessage$ {
  /** @deprecated use `CreateDatasetItemMessagesSystemMessage$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesSystemMessage$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesSystemMessage$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesSystemMessage$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesSystemMessage$Outbound` instead. */
  export type Outbound = CreateDatasetItemMessagesSystemMessage$Outbound;
}

export function createDatasetItemMessagesSystemMessageToJSON(
  createDatasetItemMessagesSystemMessage:
    CreateDatasetItemMessagesSystemMessage,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesSystemMessage$outboundSchema.parse(
      createDatasetItemMessagesSystemMessage,
    ),
  );
}

export function createDatasetItemMessagesSystemMessageFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItemMessagesSystemMessage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemMessagesSystemMessage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItemMessagesSystemMessage' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesRole$inboundSchema: z.ZodNativeEnum<
  typeof CreateDatasetItemMessagesRole
> = z.nativeEnum(CreateDatasetItemMessagesRole);

/** @internal */
export const CreateDatasetItemMessagesRole$outboundSchema: z.ZodNativeEnum<
  typeof CreateDatasetItemMessagesRole
> = CreateDatasetItemMessagesRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesRole$ {
  /** @deprecated use `CreateDatasetItemMessagesRole$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItemMessagesRole$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesRole$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItemMessagesRole$outboundSchema;
}

/** @internal */
export const CreateDatasetItemMessagesDeveloperMessage$inboundSchema: z.ZodType<
  CreateDatasetItemMessagesDeveloperMessage,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: CreateDatasetItemMessagesRole$inboundSchema,
  content: z.string(),
  name: z.string().optional(),
});

/** @internal */
export type CreateDatasetItemMessagesDeveloperMessage$Outbound = {
  role: string;
  content: string;
  name?: string | undefined;
};

/** @internal */
export const CreateDatasetItemMessagesDeveloperMessage$outboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDeveloperMessage$Outbound,
    z.ZodTypeDef,
    CreateDatasetItemMessagesDeveloperMessage
  > = z.object({
    role: CreateDatasetItemMessagesRole$outboundSchema,
    content: z.string(),
    name: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDeveloperMessage$ {
  /** @deprecated use `CreateDatasetItemMessagesDeveloperMessage$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDeveloperMessage$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDeveloperMessage$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDeveloperMessage$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDeveloperMessage$Outbound` instead. */
  export type Outbound = CreateDatasetItemMessagesDeveloperMessage$Outbound;
}

export function createDatasetItemMessagesDeveloperMessageToJSON(
  createDatasetItemMessagesDeveloperMessage:
    CreateDatasetItemMessagesDeveloperMessage,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesDeveloperMessage$outboundSchema.parse(
      createDatasetItemMessagesDeveloperMessage,
    ),
  );
}

export function createDatasetItemMessagesDeveloperMessageFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateDatasetItemMessagesDeveloperMessage,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemMessagesDeveloperMessage$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateDatasetItemMessagesDeveloperMessage' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessages$inboundSchema: z.ZodType<
  CreateDatasetItemMessages,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => CreateDatasetItemMessagesDeveloperMessage$inboundSchema),
  z.lazy(() => CreateDatasetItemMessagesSystemMessage$inboundSchema),
  z.lazy(() => CreateDatasetItemMessagesUserMessage$inboundSchema),
  z.lazy(() => CreateDatasetItemMessagesToolMessage$inboundSchema),
  z.lazy(() => CreateDatasetItemMessagesAssistantMessage$inboundSchema),
]);

/** @internal */
export type CreateDatasetItemMessages$Outbound =
  | CreateDatasetItemMessagesDeveloperMessage$Outbound
  | CreateDatasetItemMessagesSystemMessage$Outbound
  | CreateDatasetItemMessagesUserMessage$Outbound
  | CreateDatasetItemMessagesToolMessage$Outbound
  | CreateDatasetItemMessagesAssistantMessage$Outbound;

/** @internal */
export const CreateDatasetItemMessages$outboundSchema: z.ZodType<
  CreateDatasetItemMessages$Outbound,
  z.ZodTypeDef,
  CreateDatasetItemMessages
> = z.union([
  z.lazy(() => CreateDatasetItemMessagesDeveloperMessage$outboundSchema),
  z.lazy(() => CreateDatasetItemMessagesSystemMessage$outboundSchema),
  z.lazy(() => CreateDatasetItemMessagesUserMessage$outboundSchema),
  z.lazy(() => CreateDatasetItemMessagesToolMessage$outboundSchema),
  z.lazy(() => CreateDatasetItemMessagesAssistantMessage$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessages$ {
  /** @deprecated use `CreateDatasetItemMessages$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItemMessages$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessages$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItemMessages$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessages$Outbound` instead. */
  export type Outbound = CreateDatasetItemMessages$Outbound;
}

export function createDatasetItemMessagesToJSON(
  createDatasetItemMessages: CreateDatasetItemMessages,
): string {
  return JSON.stringify(
    CreateDatasetItemMessages$outboundSchema.parse(createDatasetItemMessages),
  );
}

export function createDatasetItemMessagesFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItemMessages, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItemMessages$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItemMessages' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemRequestBody$inboundSchema: z.ZodType<
  CreateDatasetItemRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  inputs: z.record(z.any()).optional(),
  messages: z.array(
    z.union([
      z.lazy(() => CreateDatasetItemMessagesDeveloperMessage$inboundSchema),
      z.lazy(() => CreateDatasetItemMessagesSystemMessage$inboundSchema),
      z.lazy(() => CreateDatasetItemMessagesUserMessage$inboundSchema),
      z.lazy(() => CreateDatasetItemMessagesToolMessage$inboundSchema),
      z.lazy(() => CreateDatasetItemMessagesAssistantMessage$inboundSchema),
    ]),
  ).optional(),
  expected_output: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "expected_output": "expectedOutput",
  });
});

/** @internal */
export type CreateDatasetItemRequestBody$Outbound = {
  inputs?: { [k: string]: any } | undefined;
  messages?:
    | Array<
      | CreateDatasetItemMessagesDeveloperMessage$Outbound
      | CreateDatasetItemMessagesSystemMessage$Outbound
      | CreateDatasetItemMessagesUserMessage$Outbound
      | CreateDatasetItemMessagesToolMessage$Outbound
      | CreateDatasetItemMessagesAssistantMessage$Outbound
    >
    | undefined;
  expected_output?: string | undefined;
};

/** @internal */
export const CreateDatasetItemRequestBody$outboundSchema: z.ZodType<
  CreateDatasetItemRequestBody$Outbound,
  z.ZodTypeDef,
  CreateDatasetItemRequestBody
> = z.object({
  inputs: z.record(z.any()).optional(),
  messages: z.array(
    z.union([
      z.lazy(() => CreateDatasetItemMessagesDeveloperMessage$outboundSchema),
      z.lazy(() => CreateDatasetItemMessagesSystemMessage$outboundSchema),
      z.lazy(() => CreateDatasetItemMessagesUserMessage$outboundSchema),
      z.lazy(() => CreateDatasetItemMessagesToolMessage$outboundSchema),
      z.lazy(() => CreateDatasetItemMessagesAssistantMessage$outboundSchema),
    ]),
  ).optional(),
  expectedOutput: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    expectedOutput: "expected_output",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemRequestBody$ {
  /** @deprecated use `CreateDatasetItemRequestBody$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItemRequestBody$inboundSchema;
  /** @deprecated use `CreateDatasetItemRequestBody$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItemRequestBody$outboundSchema;
  /** @deprecated use `CreateDatasetItemRequestBody$Outbound` instead. */
  export type Outbound = CreateDatasetItemRequestBody$Outbound;
}

export function createDatasetItemRequestBodyToJSON(
  createDatasetItemRequestBody: CreateDatasetItemRequestBody,
): string {
  return JSON.stringify(
    CreateDatasetItemRequestBody$outboundSchema.parse(
      createDatasetItemRequestBody,
    ),
  );
}

export function createDatasetItemRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItemRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItemRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItemRequestBody' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemRequest$inboundSchema: z.ZodType<
  CreateDatasetItemRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  dataset_id: z.string(),
  RequestBody: z.lazy(() => CreateDatasetItemRequestBody$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "dataset_id": "datasetId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type CreateDatasetItemRequest$Outbound = {
  dataset_id: string;
  RequestBody?: CreateDatasetItemRequestBody$Outbound | undefined;
};

/** @internal */
export const CreateDatasetItemRequest$outboundSchema: z.ZodType<
  CreateDatasetItemRequest$Outbound,
  z.ZodTypeDef,
  CreateDatasetItemRequest
> = z.object({
  datasetId: z.string(),
  requestBody: z.lazy(() => CreateDatasetItemRequestBody$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    datasetId: "dataset_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemRequest$ {
  /** @deprecated use `CreateDatasetItemRequest$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItemRequest$inboundSchema;
  /** @deprecated use `CreateDatasetItemRequest$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItemRequest$outboundSchema;
  /** @deprecated use `CreateDatasetItemRequest$Outbound` instead. */
  export type Outbound = CreateDatasetItemRequest$Outbound;
}

export function createDatasetItemRequestToJSON(
  createDatasetItemRequest: CreateDatasetItemRequest,
): string {
  return JSON.stringify(
    CreateDatasetItemRequest$outboundSchema.parse(createDatasetItemRequest),
  );
}

export function createDatasetItemRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItemRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItemRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItemRequest' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBody5Role$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBody5Role
  > = z.nativeEnum(
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBody5Role,
  );

/** @internal */
export const CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBody5Role$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBody5Role
  > =
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBody5Role$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBody5Role$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBody5Role$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBody5Role$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBody5Role$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBody5Role$outboundSchema;
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONContent$inboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONContent,
    z.ZodTypeDef,
    unknown
  > = z.union([z.string(), z.array(z.string())]);

/** @internal */
export type CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONContent$Outbound =
  | string
  | Array<string>;

/** @internal */
export const CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONContent$outboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONContent$Outbound,
    z.ZodTypeDef,
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONContent
  > = z.union([z.string(), z.array(z.string())]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONContent$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONContent$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONContent$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONContent$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONContent$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONContent$Outbound` instead. */
  export type Outbound =
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONContent$Outbound;
}

export function createDatasetItemMessagesDatasetsResponse200ApplicationJSONContentToJSON(
  createDatasetItemMessagesDatasetsResponse200ApplicationJSONContent:
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONContent,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONContent$outboundSchema
      .parse(
        createDatasetItemMessagesDatasetsResponse200ApplicationJSONContent,
      ),
  );
}

export function createDatasetItemMessagesDatasetsResponse200ApplicationJSONContentFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONContent,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONContent$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONContent' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsToolMessage$inboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsToolMessage,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role:
      CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBody5Role$inboundSchema,
    content: z.union([z.string(), z.array(z.string())]),
    tool_call_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "tool_call_id": "toolCallId",
    });
  });

/** @internal */
export type CreateDatasetItemMessagesDatasetsToolMessage$Outbound = {
  role: string;
  content: string | Array<string>;
  tool_call_id: string;
};

/** @internal */
export const CreateDatasetItemMessagesDatasetsToolMessage$outboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsToolMessage$Outbound,
    z.ZodTypeDef,
    CreateDatasetItemMessagesDatasetsToolMessage
  > = z.object({
    role:
      CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBody5Role$outboundSchema,
    content: z.union([z.string(), z.array(z.string())]),
    toolCallId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      toolCallId: "tool_call_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsToolMessage$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsToolMessage$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsToolMessage$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsToolMessage$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsToolMessage$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsToolMessage$Outbound` instead. */
  export type Outbound = CreateDatasetItemMessagesDatasetsToolMessage$Outbound;
}

export function createDatasetItemMessagesDatasetsToolMessageToJSON(
  createDatasetItemMessagesDatasetsToolMessage:
    CreateDatasetItemMessagesDatasetsToolMessage,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesDatasetsToolMessage$outboundSchema.parse(
      createDatasetItemMessagesDatasetsToolMessage,
    ),
  );
}

export function createDatasetItemMessagesDatasetsToolMessageFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateDatasetItemMessagesDatasetsToolMessage,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemMessagesDatasetsToolMessage$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateDatasetItemMessagesDatasetsToolMessage' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessages4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessages4Type
  > = z.nativeEnum(
    CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessages4Type,
  );

/** @internal */
export const CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessages4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessages4Type
  > =
    CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessages4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessages4Type$ {
  /** @deprecated use `CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessages4Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessages4Type$inboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessages4Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessages4Type$outboundSchema;
}

/** @internal */
export const CreateDatasetItem2DatasetsRefusalContentPart$inboundSchema:
  z.ZodType<
    CreateDatasetItem2DatasetsRefusalContentPart,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessages4Type$inboundSchema,
    refusal: z.string(),
  });

/** @internal */
export type CreateDatasetItem2DatasetsRefusalContentPart$Outbound = {
  type: string;
  refusal: string;
};

/** @internal */
export const CreateDatasetItem2DatasetsRefusalContentPart$outboundSchema:
  z.ZodType<
    CreateDatasetItem2DatasetsRefusalContentPart$Outbound,
    z.ZodTypeDef,
    CreateDatasetItem2DatasetsRefusalContentPart
  > = z.object({
    type:
      CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessages4Type$outboundSchema,
    refusal: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2DatasetsRefusalContentPart$ {
  /** @deprecated use `CreateDatasetItem2DatasetsRefusalContentPart$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItem2DatasetsRefusalContentPart$inboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsRefusalContentPart$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItem2DatasetsRefusalContentPart$outboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsRefusalContentPart$Outbound` instead. */
  export type Outbound = CreateDatasetItem2DatasetsRefusalContentPart$Outbound;
}

export function createDatasetItem2DatasetsRefusalContentPartToJSON(
  createDatasetItem2DatasetsRefusalContentPart:
    CreateDatasetItem2DatasetsRefusalContentPart,
): string {
  return JSON.stringify(
    CreateDatasetItem2DatasetsRefusalContentPart$outboundSchema.parse(
      createDatasetItem2DatasetsRefusalContentPart,
    ),
  );
}

export function createDatasetItem2DatasetsRefusalContentPartFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateDatasetItem2DatasetsRefusalContentPart,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItem2DatasetsRefusalContentPart$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateDatasetItem2DatasetsRefusalContentPart' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessagesType$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessagesType
  > = z.nativeEnum(
    CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessagesType,
  );

/** @internal */
export const CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessagesType$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessagesType
  > =
    CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessagesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessagesType$ {
  /** @deprecated use `CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessagesType$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessagesType$inboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessagesType$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessagesType$outboundSchema;
}

/** @internal */
export const CreateDatasetItem2DatasetsTextContentPart$inboundSchema: z.ZodType<
  CreateDatasetItem2DatasetsTextContentPart,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessagesType$inboundSchema,
  text: z.string(),
});

/** @internal */
export type CreateDatasetItem2DatasetsTextContentPart$Outbound = {
  type: string;
  text: string;
};

/** @internal */
export const CreateDatasetItem2DatasetsTextContentPart$outboundSchema:
  z.ZodType<
    CreateDatasetItem2DatasetsTextContentPart$Outbound,
    z.ZodTypeDef,
    CreateDatasetItem2DatasetsTextContentPart
  > = z.object({
    type:
      CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyMessagesType$outboundSchema,
    text: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2DatasetsTextContentPart$ {
  /** @deprecated use `CreateDatasetItem2DatasetsTextContentPart$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItem2DatasetsTextContentPart$inboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsTextContentPart$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItem2DatasetsTextContentPart$outboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsTextContentPart$Outbound` instead. */
  export type Outbound = CreateDatasetItem2DatasetsTextContentPart$Outbound;
}

export function createDatasetItem2DatasetsTextContentPartToJSON(
  createDatasetItem2DatasetsTextContentPart:
    CreateDatasetItem2DatasetsTextContentPart,
): string {
  return JSON.stringify(
    CreateDatasetItem2DatasetsTextContentPart$outboundSchema.parse(
      createDatasetItem2DatasetsTextContentPart,
    ),
  );
}

export function createDatasetItem2DatasetsTextContentPartFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateDatasetItem2DatasetsTextContentPart,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItem2DatasetsTextContentPart$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateDatasetItem2DatasetsTextContentPart' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemContentDatasetsResponse2002$inboundSchema:
  z.ZodType<
    CreateDatasetItemContentDatasetsResponse2002,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => CreateDatasetItem2DatasetsTextContentPart$inboundSchema),
    z.lazy(() => CreateDatasetItem2DatasetsRefusalContentPart$inboundSchema),
  ]);

/** @internal */
export type CreateDatasetItemContentDatasetsResponse2002$Outbound =
  | CreateDatasetItem2DatasetsTextContentPart$Outbound
  | CreateDatasetItem2DatasetsRefusalContentPart$Outbound;

/** @internal */
export const CreateDatasetItemContentDatasetsResponse2002$outboundSchema:
  z.ZodType<
    CreateDatasetItemContentDatasetsResponse2002$Outbound,
    z.ZodTypeDef,
    CreateDatasetItemContentDatasetsResponse2002
  > = z.union([
    z.lazy(() => CreateDatasetItem2DatasetsTextContentPart$outboundSchema),
    z.lazy(() => CreateDatasetItem2DatasetsRefusalContentPart$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemContentDatasetsResponse2002$ {
  /** @deprecated use `CreateDatasetItemContentDatasetsResponse2002$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemContentDatasetsResponse2002$inboundSchema;
  /** @deprecated use `CreateDatasetItemContentDatasetsResponse2002$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemContentDatasetsResponse2002$outboundSchema;
  /** @deprecated use `CreateDatasetItemContentDatasetsResponse2002$Outbound` instead. */
  export type Outbound = CreateDatasetItemContentDatasetsResponse2002$Outbound;
}

export function createDatasetItemContentDatasetsResponse2002ToJSON(
  createDatasetItemContentDatasetsResponse2002:
    CreateDatasetItemContentDatasetsResponse2002,
): string {
  return JSON.stringify(
    CreateDatasetItemContentDatasetsResponse2002$outboundSchema.parse(
      createDatasetItemContentDatasetsResponse2002,
    ),
  );
}

export function createDatasetItemContentDatasetsResponse2002FromJSON(
  jsonString: string,
): SafeParseResult<
  CreateDatasetItemContentDatasetsResponse2002,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemContentDatasetsResponse2002$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateDatasetItemContentDatasetsResponse2002' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsResponse200Content$inboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsResponse200Content,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => CreateDatasetItem2DatasetsTextContentPart$inboundSchema),
      z.lazy(() =>
        CreateDatasetItem2DatasetsRefusalContentPart$inboundSchema
      ),
    ])),
  ]);

/** @internal */
export type CreateDatasetItemMessagesDatasetsResponse200Content$Outbound =
  | string
  | Array<
    | CreateDatasetItem2DatasetsTextContentPart$Outbound
    | CreateDatasetItem2DatasetsRefusalContentPart$Outbound
  >;

/** @internal */
export const CreateDatasetItemMessagesDatasetsResponse200Content$outboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsResponse200Content$Outbound,
    z.ZodTypeDef,
    CreateDatasetItemMessagesDatasetsResponse200Content
  > = z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => CreateDatasetItem2DatasetsTextContentPart$outboundSchema),
      z.lazy(() =>
        CreateDatasetItem2DatasetsRefusalContentPart$outboundSchema
      ),
    ])),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsResponse200Content$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsResponse200Content$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsResponse200Content$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsResponse200Content$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsResponse200Content$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsResponse200Content$Outbound` instead. */
  export type Outbound =
    CreateDatasetItemMessagesDatasetsResponse200Content$Outbound;
}

export function createDatasetItemMessagesDatasetsResponse200ContentToJSON(
  createDatasetItemMessagesDatasetsResponse200Content:
    CreateDatasetItemMessagesDatasetsResponse200Content,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesDatasetsResponse200Content$outboundSchema.parse(
      createDatasetItemMessagesDatasetsResponse200Content,
    ),
  );
}

export function createDatasetItemMessagesDatasetsResponse200ContentFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateDatasetItemMessagesDatasetsResponse200Content,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemMessagesDatasetsResponse200Content$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateDatasetItemMessagesDatasetsResponse200Content' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBodyRole$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBodyRole
  > = z.nativeEnum(
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBodyRole,
  );

/** @internal */
export const CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBodyRole$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBodyRole
  > =
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBodyRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBodyRole$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBodyRole$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBodyRole$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBodyRole$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBodyRole$outboundSchema;
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsAudio$inboundSchema: z.ZodType<
  CreateDatasetItemMessagesDatasetsAudio,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type CreateDatasetItemMessagesDatasetsAudio$Outbound = {
  id: string;
};

/** @internal */
export const CreateDatasetItemMessagesDatasetsAudio$outboundSchema: z.ZodType<
  CreateDatasetItemMessagesDatasetsAudio$Outbound,
  z.ZodTypeDef,
  CreateDatasetItemMessagesDatasetsAudio
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsAudio$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsAudio$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsAudio$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsAudio$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsAudio$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsAudio$Outbound` instead. */
  export type Outbound = CreateDatasetItemMessagesDatasetsAudio$Outbound;
}

export function createDatasetItemMessagesDatasetsAudioToJSON(
  createDatasetItemMessagesDatasetsAudio:
    CreateDatasetItemMessagesDatasetsAudio,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesDatasetsAudio$outboundSchema.parse(
      createDatasetItemMessagesDatasetsAudio,
    ),
  );
}

export function createDatasetItemMessagesDatasetsAudioFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItemMessagesDatasetsAudio, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemMessagesDatasetsAudio$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItemMessagesDatasetsAudio' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsType$inboundSchema:
  z.ZodNativeEnum<typeof CreateDatasetItemMessagesDatasetsType> = z.nativeEnum(
    CreateDatasetItemMessagesDatasetsType,
  );

/** @internal */
export const CreateDatasetItemMessagesDatasetsType$outboundSchema:
  z.ZodNativeEnum<typeof CreateDatasetItemMessagesDatasetsType> =
    CreateDatasetItemMessagesDatasetsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsType$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsType$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsType$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsType$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsType$outboundSchema;
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsFunction$inboundSchema: z.ZodType<
  CreateDatasetItemMessagesDatasetsFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string().optional(),
  arguments: z.string().optional(),
});

/** @internal */
export type CreateDatasetItemMessagesDatasetsFunction$Outbound = {
  name?: string | undefined;
  arguments?: string | undefined;
};

/** @internal */
export const CreateDatasetItemMessagesDatasetsFunction$outboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsFunction$Outbound,
    z.ZodTypeDef,
    CreateDatasetItemMessagesDatasetsFunction
  > = z.object({
    name: z.string().optional(),
    arguments: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsFunction$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsFunction$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsFunction$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsFunction$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsFunction$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsFunction$Outbound` instead. */
  export type Outbound = CreateDatasetItemMessagesDatasetsFunction$Outbound;
}

export function createDatasetItemMessagesDatasetsFunctionToJSON(
  createDatasetItemMessagesDatasetsFunction:
    CreateDatasetItemMessagesDatasetsFunction,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesDatasetsFunction$outboundSchema.parse(
      createDatasetItemMessagesDatasetsFunction,
    ),
  );
}

export function createDatasetItemMessagesDatasetsFunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateDatasetItemMessagesDatasetsFunction,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemMessagesDatasetsFunction$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateDatasetItemMessagesDatasetsFunction' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsToolCalls$inboundSchema:
  z.ZodType<CreateDatasetItemMessagesDatasetsToolCalls, z.ZodTypeDef, unknown> =
    z.object({
      id: z.string(),
      type: CreateDatasetItemMessagesDatasetsType$inboundSchema,
      function: z.lazy(() =>
        CreateDatasetItemMessagesDatasetsFunction$inboundSchema
      ),
    });

/** @internal */
export type CreateDatasetItemMessagesDatasetsToolCalls$Outbound = {
  id: string;
  type: string;
  function: CreateDatasetItemMessagesDatasetsFunction$Outbound;
};

/** @internal */
export const CreateDatasetItemMessagesDatasetsToolCalls$outboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsToolCalls$Outbound,
    z.ZodTypeDef,
    CreateDatasetItemMessagesDatasetsToolCalls
  > = z.object({
    id: z.string(),
    type: CreateDatasetItemMessagesDatasetsType$outboundSchema,
    function: z.lazy(() =>
      CreateDatasetItemMessagesDatasetsFunction$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsToolCalls$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsToolCalls$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsToolCalls$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsToolCalls$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsToolCalls$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsToolCalls$Outbound` instead. */
  export type Outbound = CreateDatasetItemMessagesDatasetsToolCalls$Outbound;
}

export function createDatasetItemMessagesDatasetsToolCallsToJSON(
  createDatasetItemMessagesDatasetsToolCalls:
    CreateDatasetItemMessagesDatasetsToolCalls,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesDatasetsToolCalls$outboundSchema.parse(
      createDatasetItemMessagesDatasetsToolCalls,
    ),
  );
}

export function createDatasetItemMessagesDatasetsToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateDatasetItemMessagesDatasetsToolCalls,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemMessagesDatasetsToolCalls$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateDatasetItemMessagesDatasetsToolCalls' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsAssistantMessage$inboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsAssistantMessage,
    z.ZodTypeDef,
    unknown
  > = z.object({
    content: z.nullable(
      z.union([
        z.string(),
        z.array(
          z.union([
            z.lazy(() =>
              CreateDatasetItem2DatasetsTextContentPart$inboundSchema
            ),
            z.lazy(() =>
              CreateDatasetItem2DatasetsRefusalContentPart$inboundSchema
            ),
          ]),
        ),
      ]),
    ).optional(),
    refusal: z.nullable(z.string()).optional(),
    role:
      CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBodyRole$inboundSchema,
    name: z.string().optional(),
    audio: z.nullable(
      z.lazy(() => CreateDatasetItemMessagesDatasetsAudio$inboundSchema),
    ).optional(),
    tool_calls: z.array(
      z.lazy(() => CreateDatasetItemMessagesDatasetsToolCalls$inboundSchema),
    ).optional(),
    reasoning: z.string().optional(),
    reasoning_signature: z.string().optional(),
    redacted_reasoning: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      "tool_calls": "toolCalls",
      "reasoning_signature": "reasoningSignature",
      "redacted_reasoning": "redactedReasoning",
    });
  });

/** @internal */
export type CreateDatasetItemMessagesDatasetsAssistantMessage$Outbound = {
  content?:
    | string
    | Array<
      | CreateDatasetItem2DatasetsTextContentPart$Outbound
      | CreateDatasetItem2DatasetsRefusalContentPart$Outbound
    >
    | null
    | undefined;
  refusal?: string | null | undefined;
  role: string;
  name?: string | undefined;
  audio?: CreateDatasetItemMessagesDatasetsAudio$Outbound | null | undefined;
  tool_calls?:
    | Array<CreateDatasetItemMessagesDatasetsToolCalls$Outbound>
    | undefined;
  reasoning?: string | undefined;
  reasoning_signature?: string | undefined;
  redacted_reasoning?: string | undefined;
};

/** @internal */
export const CreateDatasetItemMessagesDatasetsAssistantMessage$outboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsAssistantMessage$Outbound,
    z.ZodTypeDef,
    CreateDatasetItemMessagesDatasetsAssistantMessage
  > = z.object({
    content: z.nullable(
      z.union([
        z.string(),
        z.array(
          z.union([
            z.lazy(() =>
              CreateDatasetItem2DatasetsTextContentPart$outboundSchema
            ),
            z.lazy(() =>
              CreateDatasetItem2DatasetsRefusalContentPart$outboundSchema
            ),
          ]),
        ),
      ]),
    ).optional(),
    refusal: z.nullable(z.string()).optional(),
    role:
      CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONResponseBodyRole$outboundSchema,
    name: z.string().optional(),
    audio: z.nullable(
      z.lazy(() => CreateDatasetItemMessagesDatasetsAudio$outboundSchema),
    ).optional(),
    toolCalls: z.array(
      z.lazy(() => CreateDatasetItemMessagesDatasetsToolCalls$outboundSchema),
    ).optional(),
    reasoning: z.string().optional(),
    reasoningSignature: z.string().optional(),
    redactedReasoning: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      toolCalls: "tool_calls",
      reasoningSignature: "reasoning_signature",
      redactedReasoning: "redacted_reasoning",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsAssistantMessage$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsAssistantMessage$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsAssistantMessage$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsAssistantMessage$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsAssistantMessage$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsAssistantMessage$Outbound` instead. */
  export type Outbound =
    CreateDatasetItemMessagesDatasetsAssistantMessage$Outbound;
}

export function createDatasetItemMessagesDatasetsAssistantMessageToJSON(
  createDatasetItemMessagesDatasetsAssistantMessage:
    CreateDatasetItemMessagesDatasetsAssistantMessage,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesDatasetsAssistantMessage$outboundSchema.parse(
      createDatasetItemMessagesDatasetsAssistantMessage,
    ),
  );
}

export function createDatasetItemMessagesDatasetsAssistantMessageFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateDatasetItemMessagesDatasetsAssistantMessage,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemMessagesDatasetsAssistantMessage$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateDatasetItemMessagesDatasetsAssistantMessage' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONRole$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONRole
  > = z.nativeEnum(
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONRole,
  );

/** @internal */
export const CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONRole$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONRole
  > =
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONRole$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONRole$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONRole$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONRole$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONRole$outboundSchema;
}

/** @internal */
export const CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyType
  > =
    CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const CreateDatasetItem2DatasetsFile$inboundSchema: z.ZodType<
  CreateDatasetItem2DatasetsFile,
  z.ZodTypeDef,
  unknown
> = z.object({
  file_data: z.string(),
  filename: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "file_data": "fileData",
  });
});

/** @internal */
export type CreateDatasetItem2DatasetsFile$Outbound = {
  file_data: string;
  filename?: string | undefined;
};

/** @internal */
export const CreateDatasetItem2DatasetsFile$outboundSchema: z.ZodType<
  CreateDatasetItem2DatasetsFile$Outbound,
  z.ZodTypeDef,
  CreateDatasetItem2DatasetsFile
> = z.object({
  fileData: z.string(),
  filename: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    fileData: "file_data",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2DatasetsFile$ {
  /** @deprecated use `CreateDatasetItem2DatasetsFile$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem2DatasetsFile$inboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsFile$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItem2DatasetsFile$outboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsFile$Outbound` instead. */
  export type Outbound = CreateDatasetItem2DatasetsFile$Outbound;
}

export function createDatasetItem2DatasetsFileToJSON(
  createDatasetItem2DatasetsFile: CreateDatasetItem2DatasetsFile,
): string {
  return JSON.stringify(
    CreateDatasetItem2DatasetsFile$outboundSchema.parse(
      createDatasetItem2DatasetsFile,
    ),
  );
}

export function createDatasetItem2DatasetsFileFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItem2DatasetsFile, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItem2DatasetsFile$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItem2DatasetsFile' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItem2Datasets4$inboundSchema: z.ZodType<
  CreateDatasetItem2Datasets4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyType$inboundSchema,
  file: z.lazy(() => CreateDatasetItem2DatasetsFile$inboundSchema),
});

/** @internal */
export type CreateDatasetItem2Datasets4$Outbound = {
  type: string;
  file: CreateDatasetItem2DatasetsFile$Outbound;
};

/** @internal */
export const CreateDatasetItem2Datasets4$outboundSchema: z.ZodType<
  CreateDatasetItem2Datasets4$Outbound,
  z.ZodTypeDef,
  CreateDatasetItem2Datasets4
> = z.object({
  type:
    CreateDatasetItem2DatasetsResponse200ApplicationJSONResponseBodyType$outboundSchema,
  file: z.lazy(() => CreateDatasetItem2DatasetsFile$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2Datasets4$ {
  /** @deprecated use `CreateDatasetItem2Datasets4$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem2Datasets4$inboundSchema;
  /** @deprecated use `CreateDatasetItem2Datasets4$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItem2Datasets4$outboundSchema;
  /** @deprecated use `CreateDatasetItem2Datasets4$Outbound` instead. */
  export type Outbound = CreateDatasetItem2Datasets4$Outbound;
}

export function createDatasetItem2Datasets4ToJSON(
  createDatasetItem2Datasets4: CreateDatasetItem2Datasets4,
): string {
  return JSON.stringify(
    CreateDatasetItem2Datasets4$outboundSchema.parse(
      createDatasetItem2Datasets4,
    ),
  );
}

export function createDatasetItem2Datasets4FromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItem2Datasets4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItem2Datasets4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItem2Datasets4' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItem2DatasetsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItem2DatasetsResponse200ApplicationJSONType
  > = z.nativeEnum(CreateDatasetItem2DatasetsResponse200ApplicationJSONType);

/** @internal */
export const CreateDatasetItem2DatasetsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateDatasetItem2DatasetsResponse200ApplicationJSONType
  > = CreateDatasetItem2DatasetsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2DatasetsResponse200ApplicationJSONType$ {
  /** @deprecated use `CreateDatasetItem2DatasetsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItem2DatasetsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItem2DatasetsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const CreateDatasetItem2DatasetsFormat$inboundSchema: z.ZodNativeEnum<
  typeof CreateDatasetItem2DatasetsFormat
> = z.nativeEnum(CreateDatasetItem2DatasetsFormat);

/** @internal */
export const CreateDatasetItem2DatasetsFormat$outboundSchema: z.ZodNativeEnum<
  typeof CreateDatasetItem2DatasetsFormat
> = CreateDatasetItem2DatasetsFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2DatasetsFormat$ {
  /** @deprecated use `CreateDatasetItem2DatasetsFormat$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem2DatasetsFormat$inboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsFormat$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItem2DatasetsFormat$outboundSchema;
}

/** @internal */
export const CreateDatasetItem2DatasetsInputAudio$inboundSchema: z.ZodType<
  CreateDatasetItem2DatasetsInputAudio,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.string(),
  format: CreateDatasetItem2DatasetsFormat$inboundSchema,
});

/** @internal */
export type CreateDatasetItem2DatasetsInputAudio$Outbound = {
  data: string;
  format: string;
};

/** @internal */
export const CreateDatasetItem2DatasetsInputAudio$outboundSchema: z.ZodType<
  CreateDatasetItem2DatasetsInputAudio$Outbound,
  z.ZodTypeDef,
  CreateDatasetItem2DatasetsInputAudio
> = z.object({
  data: z.string(),
  format: CreateDatasetItem2DatasetsFormat$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2DatasetsInputAudio$ {
  /** @deprecated use `CreateDatasetItem2DatasetsInputAudio$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItem2DatasetsInputAudio$inboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsInputAudio$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItem2DatasetsInputAudio$outboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsInputAudio$Outbound` instead. */
  export type Outbound = CreateDatasetItem2DatasetsInputAudio$Outbound;
}

export function createDatasetItem2DatasetsInputAudioToJSON(
  createDatasetItem2DatasetsInputAudio: CreateDatasetItem2DatasetsInputAudio,
): string {
  return JSON.stringify(
    CreateDatasetItem2DatasetsInputAudio$outboundSchema.parse(
      createDatasetItem2DatasetsInputAudio,
    ),
  );
}

export function createDatasetItem2DatasetsInputAudioFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItem2DatasetsInputAudio, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItem2DatasetsInputAudio$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItem2DatasetsInputAudio' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItem2Datasets3$inboundSchema: z.ZodType<
  CreateDatasetItem2Datasets3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CreateDatasetItem2DatasetsResponse200ApplicationJSONType$inboundSchema,
  input_audio: z.lazy(() => CreateDatasetItem2DatasetsInputAudio$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "input_audio": "inputAudio",
  });
});

/** @internal */
export type CreateDatasetItem2Datasets3$Outbound = {
  type: string;
  input_audio: CreateDatasetItem2DatasetsInputAudio$Outbound;
};

/** @internal */
export const CreateDatasetItem2Datasets3$outboundSchema: z.ZodType<
  CreateDatasetItem2Datasets3$Outbound,
  z.ZodTypeDef,
  CreateDatasetItem2Datasets3
> = z.object({
  type: CreateDatasetItem2DatasetsResponse200ApplicationJSONType$outboundSchema,
  inputAudio: z.lazy(() => CreateDatasetItem2DatasetsInputAudio$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    inputAudio: "input_audio",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2Datasets3$ {
  /** @deprecated use `CreateDatasetItem2Datasets3$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem2Datasets3$inboundSchema;
  /** @deprecated use `CreateDatasetItem2Datasets3$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItem2Datasets3$outboundSchema;
  /** @deprecated use `CreateDatasetItem2Datasets3$Outbound` instead. */
  export type Outbound = CreateDatasetItem2Datasets3$Outbound;
}

export function createDatasetItem2Datasets3ToJSON(
  createDatasetItem2Datasets3: CreateDatasetItem2Datasets3,
): string {
  return JSON.stringify(
    CreateDatasetItem2Datasets3$outboundSchema.parse(
      createDatasetItem2Datasets3,
    ),
  );
}

export function createDatasetItem2Datasets3FromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItem2Datasets3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItem2Datasets3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItem2Datasets3' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItem2DatasetsResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof CreateDatasetItem2DatasetsResponse200Type> = z
    .nativeEnum(CreateDatasetItem2DatasetsResponse200Type);

/** @internal */
export const CreateDatasetItem2DatasetsResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof CreateDatasetItem2DatasetsResponse200Type> =
    CreateDatasetItem2DatasetsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2DatasetsResponse200Type$ {
  /** @deprecated use `CreateDatasetItem2DatasetsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItem2DatasetsResponse200Type$inboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItem2DatasetsResponse200Type$outboundSchema;
}

/** @internal */
export const CreateDatasetItem2DatasetsDetail$inboundSchema: z.ZodNativeEnum<
  typeof CreateDatasetItem2DatasetsDetail
> = z.nativeEnum(CreateDatasetItem2DatasetsDetail);

/** @internal */
export const CreateDatasetItem2DatasetsDetail$outboundSchema: z.ZodNativeEnum<
  typeof CreateDatasetItem2DatasetsDetail
> = CreateDatasetItem2DatasetsDetail$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2DatasetsDetail$ {
  /** @deprecated use `CreateDatasetItem2DatasetsDetail$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem2DatasetsDetail$inboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsDetail$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItem2DatasetsDetail$outboundSchema;
}

/** @internal */
export const CreateDatasetItem2DatasetsImageUrl$inboundSchema: z.ZodType<
  CreateDatasetItem2DatasetsImageUrl,
  z.ZodTypeDef,
  unknown
> = z.object({
  url: z.string(),
  detail: CreateDatasetItem2DatasetsDetail$inboundSchema.optional(),
});

/** @internal */
export type CreateDatasetItem2DatasetsImageUrl$Outbound = {
  url: string;
  detail?: string | undefined;
};

/** @internal */
export const CreateDatasetItem2DatasetsImageUrl$outboundSchema: z.ZodType<
  CreateDatasetItem2DatasetsImageUrl$Outbound,
  z.ZodTypeDef,
  CreateDatasetItem2DatasetsImageUrl
> = z.object({
  url: z.string(),
  detail: CreateDatasetItem2DatasetsDetail$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2DatasetsImageUrl$ {
  /** @deprecated use `CreateDatasetItem2DatasetsImageUrl$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem2DatasetsImageUrl$inboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsImageUrl$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItem2DatasetsImageUrl$outboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsImageUrl$Outbound` instead. */
  export type Outbound = CreateDatasetItem2DatasetsImageUrl$Outbound;
}

export function createDatasetItem2DatasetsImageUrlToJSON(
  createDatasetItem2DatasetsImageUrl: CreateDatasetItem2DatasetsImageUrl,
): string {
  return JSON.stringify(
    CreateDatasetItem2DatasetsImageUrl$outboundSchema.parse(
      createDatasetItem2DatasetsImageUrl,
    ),
  );
}

export function createDatasetItem2DatasetsImageUrlFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItem2DatasetsImageUrl, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItem2DatasetsImageUrl$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItem2DatasetsImageUrl' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItem2Datasets2$inboundSchema: z.ZodType<
  CreateDatasetItem2Datasets2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CreateDatasetItem2DatasetsResponse200Type$inboundSchema,
  image_url: z.lazy(() => CreateDatasetItem2DatasetsImageUrl$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "image_url": "imageUrl",
  });
});

/** @internal */
export type CreateDatasetItem2Datasets2$Outbound = {
  type: string;
  image_url: CreateDatasetItem2DatasetsImageUrl$Outbound;
};

/** @internal */
export const CreateDatasetItem2Datasets2$outboundSchema: z.ZodType<
  CreateDatasetItem2Datasets2$Outbound,
  z.ZodTypeDef,
  CreateDatasetItem2Datasets2
> = z.object({
  type: CreateDatasetItem2DatasetsResponse200Type$outboundSchema,
  imageUrl: z.lazy(() => CreateDatasetItem2DatasetsImageUrl$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    imageUrl: "image_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2Datasets2$ {
  /** @deprecated use `CreateDatasetItem2Datasets2$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem2Datasets2$inboundSchema;
  /** @deprecated use `CreateDatasetItem2Datasets2$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItem2Datasets2$outboundSchema;
  /** @deprecated use `CreateDatasetItem2Datasets2$Outbound` instead. */
  export type Outbound = CreateDatasetItem2Datasets2$Outbound;
}

export function createDatasetItem2Datasets2ToJSON(
  createDatasetItem2Datasets2: CreateDatasetItem2Datasets2,
): string {
  return JSON.stringify(
    CreateDatasetItem2Datasets2$outboundSchema.parse(
      createDatasetItem2Datasets2,
    ),
  );
}

export function createDatasetItem2Datasets2FromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItem2Datasets2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItem2Datasets2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItem2Datasets2' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItem2DatasetsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof CreateDatasetItem2DatasetsResponseType> = z.nativeEnum(
    CreateDatasetItem2DatasetsResponseType,
  );

/** @internal */
export const CreateDatasetItem2DatasetsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof CreateDatasetItem2DatasetsResponseType> =
    CreateDatasetItem2DatasetsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2DatasetsResponseType$ {
  /** @deprecated use `CreateDatasetItem2DatasetsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItem2DatasetsResponseType$inboundSchema;
  /** @deprecated use `CreateDatasetItem2DatasetsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItem2DatasetsResponseType$outboundSchema;
}

/** @internal */
export const CreateDatasetItem2Datasets1$inboundSchema: z.ZodType<
  CreateDatasetItem2Datasets1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CreateDatasetItem2DatasetsResponseType$inboundSchema,
  text: z.string(),
});

/** @internal */
export type CreateDatasetItem2Datasets1$Outbound = {
  type: string;
  text: string;
};

/** @internal */
export const CreateDatasetItem2Datasets1$outboundSchema: z.ZodType<
  CreateDatasetItem2Datasets1$Outbound,
  z.ZodTypeDef,
  CreateDatasetItem2Datasets1
> = z.object({
  type: CreateDatasetItem2DatasetsResponseType$outboundSchema,
  text: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItem2Datasets1$ {
  /** @deprecated use `CreateDatasetItem2Datasets1$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItem2Datasets1$inboundSchema;
  /** @deprecated use `CreateDatasetItem2Datasets1$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItem2Datasets1$outboundSchema;
  /** @deprecated use `CreateDatasetItem2Datasets1$Outbound` instead. */
  export type Outbound = CreateDatasetItem2Datasets1$Outbound;
}

export function createDatasetItem2Datasets1ToJSON(
  createDatasetItem2Datasets1: CreateDatasetItem2Datasets1,
): string {
  return JSON.stringify(
    CreateDatasetItem2Datasets1$outboundSchema.parse(
      createDatasetItem2Datasets1,
    ),
  );
}

export function createDatasetItem2Datasets1FromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItem2Datasets1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItem2Datasets1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItem2Datasets1' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemContentDatasetsResponse2$inboundSchema: z.ZodType<
  CreateDatasetItemContentDatasetsResponse2,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => CreateDatasetItem2Datasets1$inboundSchema),
  z.lazy(() => CreateDatasetItem2Datasets2$inboundSchema),
  z.lazy(() => CreateDatasetItem2Datasets3$inboundSchema),
  z.lazy(() => CreateDatasetItem2Datasets4$inboundSchema),
]);

/** @internal */
export type CreateDatasetItemContentDatasetsResponse2$Outbound =
  | CreateDatasetItem2Datasets1$Outbound
  | CreateDatasetItem2Datasets2$Outbound
  | CreateDatasetItem2Datasets3$Outbound
  | CreateDatasetItem2Datasets4$Outbound;

/** @internal */
export const CreateDatasetItemContentDatasetsResponse2$outboundSchema:
  z.ZodType<
    CreateDatasetItemContentDatasetsResponse2$Outbound,
    z.ZodTypeDef,
    CreateDatasetItemContentDatasetsResponse2
  > = z.union([
    z.lazy(() => CreateDatasetItem2Datasets1$outboundSchema),
    z.lazy(() => CreateDatasetItem2Datasets2$outboundSchema),
    z.lazy(() => CreateDatasetItem2Datasets3$outboundSchema),
    z.lazy(() => CreateDatasetItem2Datasets4$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemContentDatasetsResponse2$ {
  /** @deprecated use `CreateDatasetItemContentDatasetsResponse2$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemContentDatasetsResponse2$inboundSchema;
  /** @deprecated use `CreateDatasetItemContentDatasetsResponse2$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemContentDatasetsResponse2$outboundSchema;
  /** @deprecated use `CreateDatasetItemContentDatasetsResponse2$Outbound` instead. */
  export type Outbound = CreateDatasetItemContentDatasetsResponse2$Outbound;
}

export function createDatasetItemContentDatasetsResponse2ToJSON(
  createDatasetItemContentDatasetsResponse2:
    CreateDatasetItemContentDatasetsResponse2,
): string {
  return JSON.stringify(
    CreateDatasetItemContentDatasetsResponse2$outboundSchema.parse(
      createDatasetItemContentDatasetsResponse2,
    ),
  );
}

export function createDatasetItemContentDatasetsResponse2FromJSON(
  jsonString: string,
): SafeParseResult<
  CreateDatasetItemContentDatasetsResponse2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemContentDatasetsResponse2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateDatasetItemContentDatasetsResponse2' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsResponseContent$inboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsResponseContent,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => CreateDatasetItem2Datasets1$inboundSchema),
      z.lazy(() => CreateDatasetItem2Datasets2$inboundSchema),
      z.lazy(() => CreateDatasetItem2Datasets3$inboundSchema),
      z.lazy(() => CreateDatasetItem2Datasets4$inboundSchema),
    ])),
  ]);

/** @internal */
export type CreateDatasetItemMessagesDatasetsResponseContent$Outbound =
  | string
  | Array<
    | CreateDatasetItem2Datasets1$Outbound
    | CreateDatasetItem2Datasets2$Outbound
    | CreateDatasetItem2Datasets3$Outbound
    | CreateDatasetItem2Datasets4$Outbound
  >;

/** @internal */
export const CreateDatasetItemMessagesDatasetsResponseContent$outboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsResponseContent$Outbound,
    z.ZodTypeDef,
    CreateDatasetItemMessagesDatasetsResponseContent
  > = z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => CreateDatasetItem2Datasets1$outboundSchema),
      z.lazy(() => CreateDatasetItem2Datasets2$outboundSchema),
      z.lazy(() => CreateDatasetItem2Datasets3$outboundSchema),
      z.lazy(() => CreateDatasetItem2Datasets4$outboundSchema),
    ])),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsResponseContent$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsResponseContent$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsResponseContent$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsResponseContent$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsResponseContent$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsResponseContent$Outbound` instead. */
  export type Outbound =
    CreateDatasetItemMessagesDatasetsResponseContent$Outbound;
}

export function createDatasetItemMessagesDatasetsResponseContentToJSON(
  createDatasetItemMessagesDatasetsResponseContent:
    CreateDatasetItemMessagesDatasetsResponseContent,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesDatasetsResponseContent$outboundSchema.parse(
      createDatasetItemMessagesDatasetsResponseContent,
    ),
  );
}

export function createDatasetItemMessagesDatasetsResponseContentFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateDatasetItemMessagesDatasetsResponseContent,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemMessagesDatasetsResponseContent$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateDatasetItemMessagesDatasetsResponseContent' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsUserMessage$inboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsUserMessage,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role:
      CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONRole$inboundSchema,
    name: z.string().optional(),
    content: z.union([
      z.string(),
      z.array(z.union([
        z.lazy(() => CreateDatasetItem2Datasets1$inboundSchema),
        z.lazy(() => CreateDatasetItem2Datasets2$inboundSchema),
        z.lazy(() => CreateDatasetItem2Datasets3$inboundSchema),
        z.lazy(() => CreateDatasetItem2Datasets4$inboundSchema),
      ])),
    ]),
  });

/** @internal */
export type CreateDatasetItemMessagesDatasetsUserMessage$Outbound = {
  role: string;
  name?: string | undefined;
  content:
    | string
    | Array<
      | CreateDatasetItem2Datasets1$Outbound
      | CreateDatasetItem2Datasets2$Outbound
      | CreateDatasetItem2Datasets3$Outbound
      | CreateDatasetItem2Datasets4$Outbound
    >;
};

/** @internal */
export const CreateDatasetItemMessagesDatasetsUserMessage$outboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsUserMessage$Outbound,
    z.ZodTypeDef,
    CreateDatasetItemMessagesDatasetsUserMessage
  > = z.object({
    role:
      CreateDatasetItemMessagesDatasetsResponse200ApplicationJSONRole$outboundSchema,
    name: z.string().optional(),
    content: z.union([
      z.string(),
      z.array(z.union([
        z.lazy(() => CreateDatasetItem2Datasets1$outboundSchema),
        z.lazy(() => CreateDatasetItem2Datasets2$outboundSchema),
        z.lazy(() => CreateDatasetItem2Datasets3$outboundSchema),
        z.lazy(() => CreateDatasetItem2Datasets4$outboundSchema),
      ])),
    ]),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsUserMessage$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsUserMessage$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsUserMessage$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsUserMessage$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsUserMessage$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsUserMessage$Outbound` instead. */
  export type Outbound = CreateDatasetItemMessagesDatasetsUserMessage$Outbound;
}

export function createDatasetItemMessagesDatasetsUserMessageToJSON(
  createDatasetItemMessagesDatasetsUserMessage:
    CreateDatasetItemMessagesDatasetsUserMessage,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesDatasetsUserMessage$outboundSchema.parse(
      createDatasetItemMessagesDatasetsUserMessage,
    ),
  );
}

export function createDatasetItemMessagesDatasetsUserMessageFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateDatasetItemMessagesDatasetsUserMessage,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemMessagesDatasetsUserMessage$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateDatasetItemMessagesDatasetsUserMessage' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsResponse200Role$inboundSchema:
  z.ZodNativeEnum<typeof CreateDatasetItemMessagesDatasetsResponse200Role> = z
    .nativeEnum(CreateDatasetItemMessagesDatasetsResponse200Role);

/** @internal */
export const CreateDatasetItemMessagesDatasetsResponse200Role$outboundSchema:
  z.ZodNativeEnum<typeof CreateDatasetItemMessagesDatasetsResponse200Role> =
    CreateDatasetItemMessagesDatasetsResponse200Role$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsResponse200Role$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsResponse200Role$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsResponse200Role$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsResponse200Role$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsResponse200Role$outboundSchema;
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsSystemMessage$inboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsSystemMessage,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role: CreateDatasetItemMessagesDatasetsResponse200Role$inboundSchema,
    content: z.string(),
    name: z.string().optional(),
  });

/** @internal */
export type CreateDatasetItemMessagesDatasetsSystemMessage$Outbound = {
  role: string;
  content: string;
  name?: string | undefined;
};

/** @internal */
export const CreateDatasetItemMessagesDatasetsSystemMessage$outboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsSystemMessage$Outbound,
    z.ZodTypeDef,
    CreateDatasetItemMessagesDatasetsSystemMessage
  > = z.object({
    role: CreateDatasetItemMessagesDatasetsResponse200Role$outboundSchema,
    content: z.string(),
    name: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsSystemMessage$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsSystemMessage$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsSystemMessage$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsSystemMessage$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsSystemMessage$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsSystemMessage$Outbound` instead. */
  export type Outbound =
    CreateDatasetItemMessagesDatasetsSystemMessage$Outbound;
}

export function createDatasetItemMessagesDatasetsSystemMessageToJSON(
  createDatasetItemMessagesDatasetsSystemMessage:
    CreateDatasetItemMessagesDatasetsSystemMessage,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesDatasetsSystemMessage$outboundSchema.parse(
      createDatasetItemMessagesDatasetsSystemMessage,
    ),
  );
}

export function createDatasetItemMessagesDatasetsSystemMessageFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateDatasetItemMessagesDatasetsSystemMessage,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemMessagesDatasetsSystemMessage$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateDatasetItemMessagesDatasetsSystemMessage' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsResponseRole$inboundSchema:
  z.ZodNativeEnum<typeof CreateDatasetItemMessagesDatasetsResponseRole> = z
    .nativeEnum(CreateDatasetItemMessagesDatasetsResponseRole);

/** @internal */
export const CreateDatasetItemMessagesDatasetsResponseRole$outboundSchema:
  z.ZodNativeEnum<typeof CreateDatasetItemMessagesDatasetsResponseRole> =
    CreateDatasetItemMessagesDatasetsResponseRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsResponseRole$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsResponseRole$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsResponseRole$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsResponseRole$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsResponseRole$outboundSchema;
}

/** @internal */
export const CreateDatasetItemMessagesDatasetsDeveloperMessage$inboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsDeveloperMessage,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role: CreateDatasetItemMessagesDatasetsResponseRole$inboundSchema,
    content: z.string(),
    name: z.string().optional(),
  });

/** @internal */
export type CreateDatasetItemMessagesDatasetsDeveloperMessage$Outbound = {
  role: string;
  content: string;
  name?: string | undefined;
};

/** @internal */
export const CreateDatasetItemMessagesDatasetsDeveloperMessage$outboundSchema:
  z.ZodType<
    CreateDatasetItemMessagesDatasetsDeveloperMessage$Outbound,
    z.ZodTypeDef,
    CreateDatasetItemMessagesDatasetsDeveloperMessage
  > = z.object({
    role: CreateDatasetItemMessagesDatasetsResponseRole$outboundSchema,
    content: z.string(),
    name: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemMessagesDatasetsDeveloperMessage$ {
  /** @deprecated use `CreateDatasetItemMessagesDatasetsDeveloperMessage$inboundSchema` instead. */
  export const inboundSchema =
    CreateDatasetItemMessagesDatasetsDeveloperMessage$inboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsDeveloperMessage$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemMessagesDatasetsDeveloperMessage$outboundSchema;
  /** @deprecated use `CreateDatasetItemMessagesDatasetsDeveloperMessage$Outbound` instead. */
  export type Outbound =
    CreateDatasetItemMessagesDatasetsDeveloperMessage$Outbound;
}

export function createDatasetItemMessagesDatasetsDeveloperMessageToJSON(
  createDatasetItemMessagesDatasetsDeveloperMessage:
    CreateDatasetItemMessagesDatasetsDeveloperMessage,
): string {
  return JSON.stringify(
    CreateDatasetItemMessagesDatasetsDeveloperMessage$outboundSchema.parse(
      createDatasetItemMessagesDatasetsDeveloperMessage,
    ),
  );
}

export function createDatasetItemMessagesDatasetsDeveloperMessageFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateDatasetItemMessagesDatasetsDeveloperMessage,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateDatasetItemMessagesDatasetsDeveloperMessage$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateDatasetItemMessagesDatasetsDeveloperMessage' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemDatasetsMessages$inboundSchema: z.ZodType<
  CreateDatasetItemDatasetsMessages,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => CreateDatasetItemMessagesDatasetsDeveloperMessage$inboundSchema),
  z.lazy(() => CreateDatasetItemMessagesDatasetsSystemMessage$inboundSchema),
  z.lazy(() => CreateDatasetItemMessagesDatasetsUserMessage$inboundSchema),
  z.lazy(() => CreateDatasetItemMessagesDatasetsToolMessage$inboundSchema),
  z.lazy(() => CreateDatasetItemMessagesDatasetsAssistantMessage$inboundSchema),
]);

/** @internal */
export type CreateDatasetItemDatasetsMessages$Outbound =
  | CreateDatasetItemMessagesDatasetsDeveloperMessage$Outbound
  | CreateDatasetItemMessagesDatasetsSystemMessage$Outbound
  | CreateDatasetItemMessagesDatasetsUserMessage$Outbound
  | CreateDatasetItemMessagesDatasetsToolMessage$Outbound
  | CreateDatasetItemMessagesDatasetsAssistantMessage$Outbound;

/** @internal */
export const CreateDatasetItemDatasetsMessages$outboundSchema: z.ZodType<
  CreateDatasetItemDatasetsMessages$Outbound,
  z.ZodTypeDef,
  CreateDatasetItemDatasetsMessages
> = z.union([
  z.lazy(() =>
    CreateDatasetItemMessagesDatasetsDeveloperMessage$outboundSchema
  ),
  z.lazy(() => CreateDatasetItemMessagesDatasetsSystemMessage$outboundSchema),
  z.lazy(() => CreateDatasetItemMessagesDatasetsUserMessage$outboundSchema),
  z.lazy(() => CreateDatasetItemMessagesDatasetsToolMessage$outboundSchema),
  z.lazy(() =>
    CreateDatasetItemMessagesDatasetsAssistantMessage$outboundSchema
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemDatasetsMessages$ {
  /** @deprecated use `CreateDatasetItemDatasetsMessages$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItemDatasetsMessages$inboundSchema;
  /** @deprecated use `CreateDatasetItemDatasetsMessages$outboundSchema` instead. */
  export const outboundSchema =
    CreateDatasetItemDatasetsMessages$outboundSchema;
  /** @deprecated use `CreateDatasetItemDatasetsMessages$Outbound` instead. */
  export type Outbound = CreateDatasetItemDatasetsMessages$Outbound;
}

export function createDatasetItemDatasetsMessagesToJSON(
  createDatasetItemDatasetsMessages: CreateDatasetItemDatasetsMessages,
): string {
  return JSON.stringify(
    CreateDatasetItemDatasetsMessages$outboundSchema.parse(
      createDatasetItemDatasetsMessages,
    ),
  );
}

export function createDatasetItemDatasetsMessagesFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItemDatasetsMessages, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItemDatasetsMessages$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItemDatasetsMessages' from JSON`,
  );
}

/** @internal */
export const CreateDatasetItemResponseBody$inboundSchema: z.ZodType<
  CreateDatasetItemResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  workspace_id: z.string(),
  inputs: z.record(z.any()).optional(),
  messages: z.array(
    z.union([
      z.lazy(() =>
        CreateDatasetItemMessagesDatasetsDeveloperMessage$inboundSchema
      ),
      z.lazy(() =>
        CreateDatasetItemMessagesDatasetsSystemMessage$inboundSchema
      ),
      z.lazy(() => CreateDatasetItemMessagesDatasetsUserMessage$inboundSchema),
      z.lazy(() => CreateDatasetItemMessagesDatasetsToolMessage$inboundSchema),
      z.lazy(() =>
        CreateDatasetItemMessagesDatasetsAssistantMessage$inboundSchema
      ),
    ]),
  ).optional(),
  expected_output: z.string().optional(),
  dataset_id: z.string(),
  created_by_id: z.string().optional(),
  updated_by_id: z.string().optional(),
  created: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  updated: z.string().datetime({ offset: true }).default(
    "2025-06-02T12:26:15.830Z",
  ).transform(v => new Date(v)),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "workspace_id": "workspaceId",
    "expected_output": "expectedOutput",
    "dataset_id": "datasetId",
    "created_by_id": "createdById",
    "updated_by_id": "updatedById",
  });
});

/** @internal */
export type CreateDatasetItemResponseBody$Outbound = {
  _id: string;
  workspace_id: string;
  inputs?: { [k: string]: any } | undefined;
  messages?:
    | Array<
      | CreateDatasetItemMessagesDatasetsDeveloperMessage$Outbound
      | CreateDatasetItemMessagesDatasetsSystemMessage$Outbound
      | CreateDatasetItemMessagesDatasetsUserMessage$Outbound
      | CreateDatasetItemMessagesDatasetsToolMessage$Outbound
      | CreateDatasetItemMessagesDatasetsAssistantMessage$Outbound
    >
    | undefined;
  expected_output?: string | undefined;
  dataset_id: string;
  created_by_id?: string | undefined;
  updated_by_id?: string | undefined;
  created?: string | undefined;
  updated: string;
};

/** @internal */
export const CreateDatasetItemResponseBody$outboundSchema: z.ZodType<
  CreateDatasetItemResponseBody$Outbound,
  z.ZodTypeDef,
  CreateDatasetItemResponseBody
> = z.object({
  id: z.string(),
  workspaceId: z.string(),
  inputs: z.record(z.any()).optional(),
  messages: z.array(
    z.union([
      z.lazy(() =>
        CreateDatasetItemMessagesDatasetsDeveloperMessage$outboundSchema
      ),
      z.lazy(() =>
        CreateDatasetItemMessagesDatasetsSystemMessage$outboundSchema
      ),
      z.lazy(() => CreateDatasetItemMessagesDatasetsUserMessage$outboundSchema),
      z.lazy(() => CreateDatasetItemMessagesDatasetsToolMessage$outboundSchema),
      z.lazy(() =>
        CreateDatasetItemMessagesDatasetsAssistantMessage$outboundSchema
      ),
    ]),
  ).optional(),
  expectedOutput: z.string().optional(),
  datasetId: z.string(),
  createdById: z.string().optional(),
  updatedById: z.string().optional(),
  created: z.date().transform(v => v.toISOString()).optional(),
  updated: z.date().default(() => new Date("2025-06-02T12:26:15.830Z"))
    .transform(v => v.toISOString()),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    workspaceId: "workspace_id",
    expectedOutput: "expected_output",
    datasetId: "dataset_id",
    createdById: "created_by_id",
    updatedById: "updated_by_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateDatasetItemResponseBody$ {
  /** @deprecated use `CreateDatasetItemResponseBody$inboundSchema` instead. */
  export const inboundSchema = CreateDatasetItemResponseBody$inboundSchema;
  /** @deprecated use `CreateDatasetItemResponseBody$outboundSchema` instead. */
  export const outboundSchema = CreateDatasetItemResponseBody$outboundSchema;
  /** @deprecated use `CreateDatasetItemResponseBody$Outbound` instead. */
  export type Outbound = CreateDatasetItemResponseBody$Outbound;
}

export function createDatasetItemResponseBodyToJSON(
  createDatasetItemResponseBody: CreateDatasetItemResponseBody,
): string {
  return JSON.stringify(
    CreateDatasetItemResponseBody$outboundSchema.parse(
      createDatasetItemResponseBody,
    ),
  );
}

export function createDatasetItemResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<CreateDatasetItemResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateDatasetItemResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateDatasetItemResponseBody' from JSON`,
  );
}
