/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type UpdatePromptSnippetGlobals = {
  contactId?: string | undefined;
};

/**
 * The type of the model
 */
export const UpdatePromptSnippetModelType = {
  Chat: "chat",
  Completion: "completion",
  Embedding: "embedding",
  Vision: "vision",
  Image: "image",
  Tts: "tts",
  Stt: "stt",
  Rerank: "rerank",
  Moderations: "moderations",
} as const;
/**
 * The type of the model
 */
export type UpdatePromptSnippetModelType = ClosedEnum<
  typeof UpdatePromptSnippetModelType
>;

/**
 * Only supported on `image` models.
 */
export const UpdatePromptSnippetFormat = {
  Url: "url",
  B64Json: "b64_json",
  Text: "text",
  JsonObject: "json_object",
} as const;
/**
 * Only supported on `image` models.
 */
export type UpdatePromptSnippetFormat = ClosedEnum<
  typeof UpdatePromptSnippetFormat
>;

/**
 * Only supported on `image` models.
 */
export const UpdatePromptSnippetQuality = {
  Standard: "standard",
  Hd: "hd",
} as const;
/**
 * Only supported on `image` models.
 */
export type UpdatePromptSnippetQuality = ClosedEnum<
  typeof UpdatePromptSnippetQuality
>;

export const UpdatePromptSnippetResponseFormatPromptSnippetsType = {
  JsonObject: "json_object",
} as const;
export type UpdatePromptSnippetResponseFormatPromptSnippetsType = ClosedEnum<
  typeof UpdatePromptSnippetResponseFormatPromptSnippetsType
>;

export type UpdatePromptSnippetResponseFormat2 = {
  type: UpdatePromptSnippetResponseFormatPromptSnippetsType;
};

export const UpdatePromptSnippetResponseFormatType = {
  JsonSchema: "json_schema",
} as const;
export type UpdatePromptSnippetResponseFormatType = ClosedEnum<
  typeof UpdatePromptSnippetResponseFormatType
>;

export type ResponseFormatJsonSchema = {
  name: string;
  strict: boolean;
  schema: { [k: string]: any };
};

export type UpdatePromptSnippetResponseFormat1 = {
  type: UpdatePromptSnippetResponseFormatType;
  jsonSchema: ResponseFormatJsonSchema;
};

/**
 * An object specifying the format that the model must output.
 *
 * @remarks
 *
 *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
 *
 *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
 *
 * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
 */
export type UpdatePromptSnippetResponseFormat =
  | UpdatePromptSnippetResponseFormat2
  | UpdatePromptSnippetResponseFormat1;

/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export const UpdatePromptSnippetPhotoRealVersion = {
  V1: "v1",
  V2: "v2",
} as const;
/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export type UpdatePromptSnippetPhotoRealVersion = ClosedEnum<
  typeof UpdatePromptSnippetPhotoRealVersion
>;

/**
 * The format to return the embeddings
 */
export const UpdatePromptSnippetEncodingFormat = {
  Float: "float",
  Base64: "base64",
} as const;
/**
 * The format to return the embeddings
 */
export type UpdatePromptSnippetEncodingFormat = ClosedEnum<
  typeof UpdatePromptSnippetEncodingFormat
>;

/**
 * Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
 */
export const UpdatePromptSnippetReasoningEffort = {
  Low: "low",
  Medium: "medium",
  High: "high",
} as const;
/**
 * Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
 */
export type UpdatePromptSnippetReasoningEffort = ClosedEnum<
  typeof UpdatePromptSnippetReasoningEffort
>;

/**
 * Model Parameters: Not all parameters apply to every model
 */
export type UpdatePromptSnippetModelParameters = {
  /**
   * Only supported on `chat` and `completion` models.
   */
  temperature?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  maxTokens?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topK?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topP?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  frequencyPenalty?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  presencePenalty?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  numImages?: number | undefined;
  /**
   * Best effort deterministic seed for the model. Currently only OpenAI models support these
   */
  seed?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  format?: UpdatePromptSnippetFormat | undefined;
  /**
   * Only supported on `image` models.
   */
  dimensions?: string | undefined;
  /**
   * Only supported on `image` models.
   */
  quality?: UpdatePromptSnippetQuality | undefined;
  /**
   * Only supported on `image` models.
   */
  style?: string | undefined;
  /**
   * An object specifying the format that the model must output.
   *
   * @remarks
   *
   *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
   *
   *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
   *
   * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
   */
  responseFormat?:
    | UpdatePromptSnippetResponseFormat2
    | UpdatePromptSnippetResponseFormat1
    | null
    | undefined;
  /**
   * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
   */
  photoRealVersion?: UpdatePromptSnippetPhotoRealVersion | undefined;
  /**
   * The format to return the embeddings
   */
  encodingFormat?: UpdatePromptSnippetEncodingFormat | undefined;
  /**
   * Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
   */
  reasoningEffort?: UpdatePromptSnippetReasoningEffort | undefined;
};

export const UpdatePromptSnippetProvider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
  Jina: "jina",
  Togetherai: "togetherai",
  Elevenlabs: "elevenlabs",
} as const;
export type UpdatePromptSnippetProvider = ClosedEnum<
  typeof UpdatePromptSnippetProvider
>;

/**
 * The role of the prompt message
 */
export const UpdatePromptSnippetRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type UpdatePromptSnippetRole = ClosedEnum<
  typeof UpdatePromptSnippetRole
>;

export const UpdatePromptSnippet2PromptSnippetsType = {
  ImageUrl: "image_url",
} as const;
export type UpdatePromptSnippet2PromptSnippetsType = ClosedEnum<
  typeof UpdatePromptSnippet2PromptSnippetsType
>;

export type UpdatePromptSnippet2ImageUrl = {
  /**
   * Either a URL of the image or the base64 encoded data URI.
   */
  url: string;
  /**
   * Specifies the detail level of the image. Currently only supported with OpenAI models
   */
  detail?: string | undefined;
};

/**
 * The image part of the prompt message. Only supported with vision models.
 */
export type UpdatePromptSnippet22 = {
  type: UpdatePromptSnippet2PromptSnippetsType;
  imageUrl: UpdatePromptSnippet2ImageUrl;
};

export const UpdatePromptSnippet2Type = {
  Text: "text",
} as const;
export type UpdatePromptSnippet2Type = ClosedEnum<
  typeof UpdatePromptSnippet2Type
>;

/**
 * Text content part of a prompt message
 */
export type UpdatePromptSnippet21 = {
  type: UpdatePromptSnippet2Type;
  text: string;
};

export type UpdatePromptSnippetContent2 =
  | UpdatePromptSnippet21
  | UpdatePromptSnippet22;

/**
 * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
 */
export type UpdatePromptSnippetContent =
  | string
  | Array<UpdatePromptSnippet21 | UpdatePromptSnippet22>;

export const UpdatePromptSnippetType = {
  Function: "function",
} as const;
export type UpdatePromptSnippetType = ClosedEnum<
  typeof UpdatePromptSnippetType
>;

export type UpdatePromptSnippetFunction = {
  name: string;
  /**
   * JSON string arguments for the functions
   */
  arguments: string;
};

export type UpdatePromptSnippetToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type: UpdatePromptSnippetType;
  function: UpdatePromptSnippetFunction;
};

export type UpdatePromptSnippetMessages = {
  /**
   * The role of the prompt message
   */
  role: UpdatePromptSnippetRole;
  /**
   * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
   */
  content: string | Array<UpdatePromptSnippet21 | UpdatePromptSnippet22>;
  toolCalls?: Array<UpdatePromptSnippetToolCalls> | undefined;
};

/**
 * A list of messages compatible with the openAI schema
 */
export type UpdatePromptSnippetPromptConfig = {
  stream?: boolean | undefined;
  model?: string | undefined;
  /**
   * The type of the model
   */
  modelType?: UpdatePromptSnippetModelType | undefined;
  /**
   * Model Parameters: Not all parameters apply to every model
   */
  modelParameters?: UpdatePromptSnippetModelParameters | undefined;
  provider?: UpdatePromptSnippetProvider | undefined;
  version?: string | undefined;
  messages: Array<UpdatePromptSnippetMessages>;
};

export const UpdatePromptSnippetUseCases = {
  Agents: "Agents",
  AgentsSimulations: "Agents simulations",
  APIInteraction: "API interaction",
  AutonomousAgents: "Autonomous Agents",
  Chatbots: "Chatbots",
  Classification: "Classification",
  CodeUnderstanding: "Code understanding",
  CodeWriting: "Code writing",
  DocumentsQA: "Documents QA",
  Conversation: "Conversation",
  Extraction: "Extraction",
  MultiModal: "Multi-modal",
  SelfChecking: "Self-checking",
  Sql: "SQL",
  Summarization: "Summarization",
  Tagging: "Tagging",
} as const;
export type UpdatePromptSnippetUseCases = ClosedEnum<
  typeof UpdatePromptSnippetUseCases
>;

/**
 * The language that the prompt is written in. Use this field to categorize the prompt for your own purpose
 */
export const UpdatePromptSnippetLanguage = {
  Chinese: "Chinese",
  Dutch: "Dutch",
  English: "English",
  French: "French",
  German: "German",
  Russian: "Russian",
  Spanish: "Spanish",
} as const;
/**
 * The language that the prompt is written in. Use this field to categorize the prompt for your own purpose
 */
export type UpdatePromptSnippetLanguage = ClosedEnum<
  typeof UpdatePromptSnippetLanguage
>;

export type UpdatePromptSnippetMetadata = {
  /**
   * A list of use cases that the prompt is meant to be used for. Use this field to categorize the prompt for your own purpose
   */
  useCases?: Array<UpdatePromptSnippetUseCases> | undefined;
  /**
   * The language that the prompt is written in. Use this field to categorize the prompt for your own purpose
   */
  language?: UpdatePromptSnippetLanguage | undefined;
};

export type UpdatePromptSnippetRequestBody = {
  /**
   * The prompt snippet’s description, meant to be displayable in the UI. Use this field to optionally store a long form explanation of the prompt for your own purpose
   */
  description?: string | null | undefined;
  /**
   * A list of messages compatible with the openAI schema
   */
  promptConfig?: UpdatePromptSnippetPromptConfig | undefined;
  metadata?: UpdatePromptSnippetMetadata | undefined;
  /**
   * The path where the entity is stored in the project structure. The first element of the path always represents the project name. Any subsequent path element after the project will be created as a folder in the project if it does not exists.
   */
  path?: string | undefined;
};

export type UpdatePromptSnippetRequest = {
  /**
   * Prompt ID
   */
  id: string;
  requestBody?: UpdatePromptSnippetRequestBody | undefined;
};

export const UpdatePromptSnippetOwner2 = {
  Vendor: "vendor",
} as const;
export type UpdatePromptSnippetOwner2 = ClosedEnum<
  typeof UpdatePromptSnippetOwner2
>;

export type UpdatePromptSnippetOwner = string | UpdatePromptSnippetOwner2;

/**
 * The type of the model
 */
export const UpdatePromptSnippetPromptSnippetsModelType = {
  Chat: "chat",
  Completion: "completion",
  Embedding: "embedding",
  Vision: "vision",
  Image: "image",
  Tts: "tts",
  Stt: "stt",
  Rerank: "rerank",
  Moderations: "moderations",
} as const;
/**
 * The type of the model
 */
export type UpdatePromptSnippetPromptSnippetsModelType = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsModelType
>;

/**
 * Only supported on `image` models.
 */
export const UpdatePromptSnippetPromptSnippetsFormat = {
  Url: "url",
  B64Json: "b64_json",
  Text: "text",
  JsonObject: "json_object",
} as const;
/**
 * Only supported on `image` models.
 */
export type UpdatePromptSnippetPromptSnippetsFormat = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsFormat
>;

/**
 * Only supported on `image` models.
 */
export const UpdatePromptSnippetPromptSnippetsQuality = {
  Standard: "standard",
  Hd: "hd",
} as const;
/**
 * Only supported on `image` models.
 */
export type UpdatePromptSnippetPromptSnippetsQuality = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsQuality
>;

export const UpdatePromptSnippetResponseFormatPromptSnippetsResponse200Type = {
  JsonObject: "json_object",
} as const;
export type UpdatePromptSnippetResponseFormatPromptSnippetsResponse200Type =
  ClosedEnum<
    typeof UpdatePromptSnippetResponseFormatPromptSnippetsResponse200Type
  >;

export type UpdatePromptSnippetResponseFormatPromptSnippets2 = {
  type: UpdatePromptSnippetResponseFormatPromptSnippetsResponse200Type;
};

export const UpdatePromptSnippetResponseFormatPromptSnippetsResponseType = {
  JsonSchema: "json_schema",
} as const;
export type UpdatePromptSnippetResponseFormatPromptSnippetsResponseType =
  ClosedEnum<
    typeof UpdatePromptSnippetResponseFormatPromptSnippetsResponseType
  >;

export type UpdatePromptSnippetResponseFormatJsonSchema = {
  name: string;
  strict: boolean;
  schema: { [k: string]: any };
};

export type UpdatePromptSnippetResponseFormatPromptSnippets1 = {
  type: UpdatePromptSnippetResponseFormatPromptSnippetsResponseType;
  jsonSchema: UpdatePromptSnippetResponseFormatJsonSchema;
};

/**
 * An object specifying the format that the model must output.
 *
 * @remarks
 *
 *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
 *
 *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
 *
 * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
 */
export type UpdatePromptSnippetPromptSnippetsResponseFormat =
  | UpdatePromptSnippetResponseFormatPromptSnippets2
  | UpdatePromptSnippetResponseFormatPromptSnippets1;

/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export const UpdatePromptSnippetPromptSnippetsPhotoRealVersion = {
  V1: "v1",
  V2: "v2",
} as const;
/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export type UpdatePromptSnippetPromptSnippetsPhotoRealVersion = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsPhotoRealVersion
>;

/**
 * The format to return the embeddings
 */
export const UpdatePromptSnippetPromptSnippetsEncodingFormat = {
  Float: "float",
  Base64: "base64",
} as const;
/**
 * The format to return the embeddings
 */
export type UpdatePromptSnippetPromptSnippetsEncodingFormat = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsEncodingFormat
>;

/**
 * Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
 */
export const UpdatePromptSnippetPromptSnippetsReasoningEffort = {
  Low: "low",
  Medium: "medium",
  High: "high",
} as const;
/**
 * Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
 */
export type UpdatePromptSnippetPromptSnippetsReasoningEffort = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsReasoningEffort
>;

/**
 * Model Parameters: Not all parameters apply to every model
 */
export type UpdatePromptSnippetPromptSnippetsModelParameters = {
  /**
   * Only supported on `chat` and `completion` models.
   */
  temperature?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  maxTokens?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topK?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topP?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  frequencyPenalty?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  presencePenalty?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  numImages?: number | undefined;
  /**
   * Best effort deterministic seed for the model. Currently only OpenAI models support these
   */
  seed?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  format?: UpdatePromptSnippetPromptSnippetsFormat | undefined;
  /**
   * Only supported on `image` models.
   */
  dimensions?: string | undefined;
  /**
   * Only supported on `image` models.
   */
  quality?: UpdatePromptSnippetPromptSnippetsQuality | undefined;
  /**
   * Only supported on `image` models.
   */
  style?: string | undefined;
  /**
   * An object specifying the format that the model must output.
   *
   * @remarks
   *
   *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
   *
   *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
   *
   * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
   */
  responseFormat?:
    | UpdatePromptSnippetResponseFormatPromptSnippets2
    | UpdatePromptSnippetResponseFormatPromptSnippets1
    | null
    | undefined;
  /**
   * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
   */
  photoRealVersion?:
    | UpdatePromptSnippetPromptSnippetsPhotoRealVersion
    | undefined;
  /**
   * The format to return the embeddings
   */
  encodingFormat?: UpdatePromptSnippetPromptSnippetsEncodingFormat | undefined;
  /**
   * Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
   */
  reasoningEffort?:
    | UpdatePromptSnippetPromptSnippetsReasoningEffort
    | undefined;
};

export const UpdatePromptSnippetPromptSnippetsProvider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
  Jina: "jina",
  Togetherai: "togetherai",
  Elevenlabs: "elevenlabs",
} as const;
export type UpdatePromptSnippetPromptSnippetsProvider = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsProvider
>;

/**
 * The role of the prompt message
 */
export const UpdatePromptSnippetPromptSnippetsRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type UpdatePromptSnippetPromptSnippetsRole = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsRole
>;

export const UpdatePromptSnippet2PromptSnippetsResponse200Type = {
  ImageUrl: "image_url",
} as const;
export type UpdatePromptSnippet2PromptSnippetsResponse200Type = ClosedEnum<
  typeof UpdatePromptSnippet2PromptSnippetsResponse200Type
>;

export type UpdatePromptSnippet2PromptSnippetsImageUrl = {
  /**
   * The orq.ai id of the image
   */
  id?: string | undefined;
  /**
   * Either a URL of the image or the base64 encoded data URI.
   */
  url: string;
  /**
   * Specifies the detail level of the image. Currently only supported with OpenAI models
   */
  detail?: string | undefined;
};

/**
 * The image part of the prompt message. Only supported with vision models.
 */
export type UpdatePromptSnippet2PromptSnippets2 = {
  type: UpdatePromptSnippet2PromptSnippetsResponse200Type;
  imageUrl: UpdatePromptSnippet2PromptSnippetsImageUrl;
};

export const UpdatePromptSnippet2PromptSnippetsResponseType = {
  Text: "text",
} as const;
export type UpdatePromptSnippet2PromptSnippetsResponseType = ClosedEnum<
  typeof UpdatePromptSnippet2PromptSnippetsResponseType
>;

/**
 * Text content part of a prompt message
 */
export type UpdatePromptSnippet2PromptSnippets1 = {
  type: UpdatePromptSnippet2PromptSnippetsResponseType;
  text: string;
};

export type UpdatePromptSnippetContentPromptSnippets2 =
  | UpdatePromptSnippet2PromptSnippets1
  | UpdatePromptSnippet2PromptSnippets2;

/**
 * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
 */
export type UpdatePromptSnippetPromptSnippetsContent =
  | string
  | Array<
    UpdatePromptSnippet2PromptSnippets1 | UpdatePromptSnippet2PromptSnippets2
  >;

export const UpdatePromptSnippetPromptSnippetsResponseType = {
  Function: "function",
} as const;
export type UpdatePromptSnippetPromptSnippetsResponseType = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsResponseType
>;

export type UpdatePromptSnippetPromptSnippetsFunction = {
  name: string;
  /**
   * JSON string arguments for the functions
   */
  arguments: string;
};

export type UpdatePromptSnippetPromptSnippetsToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type: UpdatePromptSnippetPromptSnippetsResponseType;
  function: UpdatePromptSnippetPromptSnippetsFunction;
};

export type UpdatePromptSnippetPromptSnippetsMessages = {
  /**
   * The role of the prompt message
   */
  role: UpdatePromptSnippetPromptSnippetsRole;
  /**
   * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
   */
  content:
    | string
    | Array<
      UpdatePromptSnippet2PromptSnippets1 | UpdatePromptSnippet2PromptSnippets2
    >;
  toolCalls?: Array<UpdatePromptSnippetPromptSnippetsToolCalls> | undefined;
};

/**
 * A list of messages compatible with the openAI schema
 */
export type UpdatePromptSnippetPromptSnippetsPromptConfig = {
  stream?: boolean | undefined;
  model?: string | undefined;
  /**
   * The id of the resource
   */
  modelDbId?: string | undefined;
  /**
   * The type of the model
   */
  modelType?: UpdatePromptSnippetPromptSnippetsModelType | undefined;
  /**
   * Model Parameters: Not all parameters apply to every model
   */
  modelParameters?:
    | UpdatePromptSnippetPromptSnippetsModelParameters
    | undefined;
  provider?: UpdatePromptSnippetPromptSnippetsProvider | undefined;
  /**
   * The id of the resource
   */
  integrationId?: string | null | undefined;
  version?: string | undefined;
  messages: Array<UpdatePromptSnippetPromptSnippetsMessages>;
};

export const UpdatePromptSnippetPromptSnippetsUseCases = {
  Agents: "Agents",
  AgentsSimulations: "Agents simulations",
  APIInteraction: "API interaction",
  AutonomousAgents: "Autonomous Agents",
  Chatbots: "Chatbots",
  Classification: "Classification",
  CodeUnderstanding: "Code understanding",
  CodeWriting: "Code writing",
  DocumentsQA: "Documents QA",
  Conversation: "Conversation",
  Extraction: "Extraction",
  MultiModal: "Multi-modal",
  SelfChecking: "Self-checking",
  Sql: "SQL",
  Summarization: "Summarization",
  Tagging: "Tagging",
} as const;
export type UpdatePromptSnippetPromptSnippetsUseCases = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsUseCases
>;

/**
 * The language that the prompt is written in. Use this field to categorize the prompt for your own purpose
 */
export const UpdatePromptSnippetPromptSnippetsLanguage = {
  Chinese: "Chinese",
  Dutch: "Dutch",
  English: "English",
  French: "French",
  German: "German",
  Russian: "Russian",
  Spanish: "Spanish",
} as const;
/**
 * The language that the prompt is written in. Use this field to categorize the prompt for your own purpose
 */
export type UpdatePromptSnippetPromptSnippetsLanguage = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsLanguage
>;

export type UpdatePromptSnippetPromptSnippetsMetadata = {
  /**
   * A list of use cases that the prompt is meant to be used for. Use this field to categorize the prompt for your own purpose
   */
  useCases?: Array<UpdatePromptSnippetPromptSnippetsUseCases> | undefined;
  /**
   * The language that the prompt is written in. Use this field to categorize the prompt for your own purpose
   */
  language?: UpdatePromptSnippetPromptSnippetsLanguage | undefined;
};

export const UpdatePromptSnippetPromptSnippetsType = {
  Snippet: "snippet",
} as const;
export type UpdatePromptSnippetPromptSnippetsType = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsType
>;

/**
 * The type of the model
 */
export const UpdatePromptSnippetPromptSnippetsResponseModelType = {
  Chat: "chat",
  Completion: "completion",
  Embedding: "embedding",
  Vision: "vision",
  Image: "image",
  Tts: "tts",
  Stt: "stt",
  Rerank: "rerank",
  Moderations: "moderations",
} as const;
/**
 * The type of the model
 */
export type UpdatePromptSnippetPromptSnippetsResponseModelType = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsResponseModelType
>;

/**
 * Only supported on `image` models.
 */
export const UpdatePromptSnippetPromptSnippetsResponse200Format = {
  Url: "url",
  B64Json: "b64_json",
  Text: "text",
  JsonObject: "json_object",
} as const;
/**
 * Only supported on `image` models.
 */
export type UpdatePromptSnippetPromptSnippetsResponse200Format = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsResponse200Format
>;

/**
 * Only supported on `image` models.
 */
export const UpdatePromptSnippetPromptSnippetsResponseQuality = {
  Standard: "standard",
  Hd: "hd",
} as const;
/**
 * Only supported on `image` models.
 */
export type UpdatePromptSnippetPromptSnippetsResponseQuality = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsResponseQuality
>;

export const UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONResponseBodyType =
  {
    JsonObject: "json_object",
  } as const;
export type UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONResponseBodyType
  >;

export type UpdatePromptSnippetResponseFormatPromptSnippetsResponse2 = {
  type:
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONResponseBodyType;
};

export const UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONType =
  {
    JsonSchema: "json_schema",
  } as const;
export type UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONType
  >;

export type UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema = {
  name: string;
  strict: boolean;
  schema: { [k: string]: any };
};

export type UpdatePromptSnippetResponseFormatPromptSnippetsResponse1 = {
  type:
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONType;
  jsonSchema: UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema;
};

/**
 * An object specifying the format that the model must output.
 *
 * @remarks
 *
 *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
 *
 *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
 *
 * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
 */
export type UpdatePromptSnippetPromptSnippetsResponseResponseFormat =
  | UpdatePromptSnippetResponseFormatPromptSnippetsResponse2
  | UpdatePromptSnippetResponseFormatPromptSnippetsResponse1;

/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export const UpdatePromptSnippetPromptSnippetsResponsePhotoRealVersion = {
  V1: "v1",
  V2: "v2",
} as const;
/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export type UpdatePromptSnippetPromptSnippetsResponsePhotoRealVersion =
  ClosedEnum<typeof UpdatePromptSnippetPromptSnippetsResponsePhotoRealVersion>;

/**
 * The format to return the embeddings
 */
export const UpdatePromptSnippetPromptSnippetsResponseEncodingFormat = {
  Float: "float",
  Base64: "base64",
} as const;
/**
 * The format to return the embeddings
 */
export type UpdatePromptSnippetPromptSnippetsResponseEncodingFormat =
  ClosedEnum<typeof UpdatePromptSnippetPromptSnippetsResponseEncodingFormat>;

/**
 * Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
 */
export const UpdatePromptSnippetPromptSnippetsResponseReasoningEffort = {
  Low: "low",
  Medium: "medium",
  High: "high",
} as const;
/**
 * Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
 */
export type UpdatePromptSnippetPromptSnippetsResponseReasoningEffort =
  ClosedEnum<typeof UpdatePromptSnippetPromptSnippetsResponseReasoningEffort>;

/**
 * Model Parameters: Not all parameters apply to every model
 */
export type UpdatePromptSnippetPromptSnippetsResponseModelParameters = {
  /**
   * Only supported on `chat` and `completion` models.
   */
  temperature?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  maxTokens?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topK?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topP?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  frequencyPenalty?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  presencePenalty?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  numImages?: number | undefined;
  /**
   * Best effort deterministic seed for the model. Currently only OpenAI models support these
   */
  seed?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  format?: UpdatePromptSnippetPromptSnippetsResponse200Format | undefined;
  /**
   * Only supported on `image` models.
   */
  dimensions?: string | undefined;
  /**
   * Only supported on `image` models.
   */
  quality?: UpdatePromptSnippetPromptSnippetsResponseQuality | undefined;
  /**
   * Only supported on `image` models.
   */
  style?: string | undefined;
  /**
   * An object specifying the format that the model must output.
   *
   * @remarks
   *
   *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
   *
   *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
   *
   * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
   */
  responseFormat?:
    | UpdatePromptSnippetResponseFormatPromptSnippetsResponse2
    | UpdatePromptSnippetResponseFormatPromptSnippetsResponse1
    | null
    | undefined;
  /**
   * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
   */
  photoRealVersion?:
    | UpdatePromptSnippetPromptSnippetsResponsePhotoRealVersion
    | undefined;
  /**
   * The format to return the embeddings
   */
  encodingFormat?:
    | UpdatePromptSnippetPromptSnippetsResponseEncodingFormat
    | undefined;
  /**
   * Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
   */
  reasoningEffort?:
    | UpdatePromptSnippetPromptSnippetsResponseReasoningEffort
    | undefined;
};

export const UpdatePromptSnippetPromptSnippetsResponseProvider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
  Jina: "jina",
  Togetherai: "togetherai",
  Elevenlabs: "elevenlabs",
} as const;
export type UpdatePromptSnippetPromptSnippetsResponseProvider = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsResponseProvider
>;

/**
 * The role of the prompt message
 */
export const UpdatePromptSnippetPromptSnippetsResponseRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type UpdatePromptSnippetPromptSnippetsResponseRole = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsResponseRole
>;

export const UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONResponseBodyType =
  {
    ImageUrl: "image_url",
  } as const;
export type UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONResponseBodyType
  >;

export type UpdatePromptSnippet2PromptSnippetsResponseImageUrl = {
  /**
   * The orq.ai id of the image
   */
  id?: string | undefined;
  /**
   * Either a URL of the image or the base64 encoded data URI.
   */
  url: string;
  /**
   * Specifies the detail level of the image. Currently only supported with OpenAI models
   */
  detail?: string | undefined;
};

/**
 * The image part of the prompt message. Only supported with vision models.
 */
export type UpdatePromptSnippet2PromptSnippetsResponse2 = {
  type:
    UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONResponseBodyType;
  imageUrl: UpdatePromptSnippet2PromptSnippetsResponseImageUrl;
};

export const UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONType =
  {
    Text: "text",
  } as const;
export type UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONType
  >;

/**
 * Text content part of a prompt message
 */
export type UpdatePromptSnippet2PromptSnippetsResponse1 = {
  type: UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONType;
  text: string;
};

export type UpdatePromptSnippetContentPromptSnippetsResponse2 =
  | UpdatePromptSnippet2PromptSnippetsResponse1
  | UpdatePromptSnippet2PromptSnippetsResponse2;

/**
 * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
 */
export type UpdatePromptSnippetPromptSnippetsResponseContent =
  | string
  | Array<
    | UpdatePromptSnippet2PromptSnippetsResponse1
    | UpdatePromptSnippet2PromptSnippetsResponse2
  >;

export const UpdatePromptSnippetPromptSnippetsResponse200Type = {
  Function: "function",
} as const;
export type UpdatePromptSnippetPromptSnippetsResponse200Type = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsResponse200Type
>;

export type UpdatePromptSnippetPromptSnippetsResponseFunction = {
  name: string;
  /**
   * JSON string arguments for the functions
   */
  arguments: string;
};

export type UpdatePromptSnippetPromptSnippetsResponseToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type: UpdatePromptSnippetPromptSnippetsResponse200Type;
  function: UpdatePromptSnippetPromptSnippetsResponseFunction;
};

export type UpdatePromptSnippetPromptSnippetsResponseMessages = {
  /**
   * The role of the prompt message
   */
  role: UpdatePromptSnippetPromptSnippetsResponseRole;
  /**
   * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
   */
  content:
    | string
    | Array<
      | UpdatePromptSnippet2PromptSnippetsResponse1
      | UpdatePromptSnippet2PromptSnippetsResponse2
    >;
  toolCalls?:
    | Array<UpdatePromptSnippetPromptSnippetsResponseToolCalls>
    | undefined;
};

/**
 * A list of messages compatible with the openAI schema
 */
export type UpdatePromptSnippetPromptSnippetsResponsePromptConfig = {
  stream?: boolean | undefined;
  model?: string | undefined;
  /**
   * The id of the resource
   */
  modelDbId?: string | undefined;
  /**
   * The type of the model
   */
  modelType?: UpdatePromptSnippetPromptSnippetsResponseModelType | undefined;
  /**
   * Model Parameters: Not all parameters apply to every model
   */
  modelParameters?:
    | UpdatePromptSnippetPromptSnippetsResponseModelParameters
    | undefined;
  provider?: UpdatePromptSnippetPromptSnippetsResponseProvider | undefined;
  /**
   * The id of the resource
   */
  integrationId?: string | null | undefined;
  version?: string | undefined;
  messages: Array<UpdatePromptSnippetPromptSnippetsResponseMessages>;
};

export const UpdatePromptSnippetPromptSnippetsResponseUseCases = {
  Agents: "Agents",
  AgentsSimulations: "Agents simulations",
  APIInteraction: "API interaction",
  AutonomousAgents: "Autonomous Agents",
  Chatbots: "Chatbots",
  Classification: "Classification",
  CodeUnderstanding: "Code understanding",
  CodeWriting: "Code writing",
  DocumentsQA: "Documents QA",
  Conversation: "Conversation",
  Extraction: "Extraction",
  MultiModal: "Multi-modal",
  SelfChecking: "Self-checking",
  Sql: "SQL",
  Summarization: "Summarization",
  Tagging: "Tagging",
} as const;
export type UpdatePromptSnippetPromptSnippetsResponseUseCases = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsResponseUseCases
>;

/**
 * The language that the prompt is written in. Use this field to categorize the prompt for your own purpose
 */
export const UpdatePromptSnippetPromptSnippetsResponseLanguage = {
  Chinese: "Chinese",
  Dutch: "Dutch",
  English: "English",
  French: "French",
  German: "German",
  Russian: "Russian",
  Spanish: "Spanish",
} as const;
/**
 * The language that the prompt is written in. Use this field to categorize the prompt for your own purpose
 */
export type UpdatePromptSnippetPromptSnippetsResponseLanguage = ClosedEnum<
  typeof UpdatePromptSnippetPromptSnippetsResponseLanguage
>;

export type UpdatePromptSnippetPromptSnippetsResponseMetadata = {
  /**
   * A list of use cases that the prompt is meant to be used for. Use this field to categorize the prompt for your own purpose
   */
  useCases?:
    | Array<UpdatePromptSnippetPromptSnippetsResponseUseCases>
    | undefined;
  /**
   * The language that the prompt is written in. Use this field to categorize the prompt for your own purpose
   */
  language?: UpdatePromptSnippetPromptSnippetsResponseLanguage | undefined;
};

/**
 * Prompt version model returned from the API
 */
export type UpdatePromptSnippetVersions = {
  id: string;
  /**
   * The prompt snippet’s description, meant to be displayable in the UI. Use this field to optionally store a long form explanation of the prompt for your own purpose
   */
  description?: string | null | undefined;
  /**
   * A list of messages compatible with the openAI schema
   */
  promptConfig: UpdatePromptSnippetPromptSnippetsResponsePromptConfig;
  metadata: UpdatePromptSnippetPromptSnippetsResponseMetadata;
  createdById: string;
  updatedById: string;
  timestamp: string;
};

/**
 * Prompt snippet model returned from the API
 */
export type UpdatePromptSnippetResponseBody = {
  id: string;
  owner: string | UpdatePromptSnippetOwner2;
  domainId: string;
  key: string;
  /**
   * The prompt snippet’s description, meant to be displayable in the UI. Use this field to optionally store a long form explanation of the prompt for your own purpose
   */
  description?: string | null | undefined;
  /**
   * A list of messages compatible with the openAI schema
   */
  promptConfig: UpdatePromptSnippetPromptSnippetsPromptConfig;
  metadata: UpdatePromptSnippetPromptSnippetsMetadata;
  createdById: string;
  updatedById: string;
  /**
   * The date and time the resource was created
   */
  created?: Date | undefined;
  /**
   * The date and time the resource was last updated
   */
  updated?: Date | undefined;
  type: UpdatePromptSnippetPromptSnippetsType;
  versions: Array<UpdatePromptSnippetVersions>;
};

/** @internal */
export const UpdatePromptSnippetGlobals$inboundSchema: z.ZodType<
  UpdatePromptSnippetGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  contactId: z.string().optional(),
});

/** @internal */
export type UpdatePromptSnippetGlobals$Outbound = {
  contactId?: string | undefined;
};

/** @internal */
export const UpdatePromptSnippetGlobals$outboundSchema: z.ZodType<
  UpdatePromptSnippetGlobals$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippetGlobals
> = z.object({
  contactId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetGlobals$ {
  /** @deprecated use `UpdatePromptSnippetGlobals$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetGlobals$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetGlobals$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetGlobals$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetGlobals$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetGlobals$Outbound;
}

export function updatePromptSnippetGlobalsToJSON(
  updatePromptSnippetGlobals: UpdatePromptSnippetGlobals,
): string {
  return JSON.stringify(
    UpdatePromptSnippetGlobals$outboundSchema.parse(updatePromptSnippetGlobals),
  );
}

export function updatePromptSnippetGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippetGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePromptSnippetGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetGlobals' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetModelType$inboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetModelType
> = z.nativeEnum(UpdatePromptSnippetModelType);

/** @internal */
export const UpdatePromptSnippetModelType$outboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetModelType
> = UpdatePromptSnippetModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetModelType$ {
  /** @deprecated use `UpdatePromptSnippetModelType$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetModelType$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetModelType$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetModelType$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetFormat$inboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetFormat
> = z.nativeEnum(UpdatePromptSnippetFormat);

/** @internal */
export const UpdatePromptSnippetFormat$outboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetFormat
> = UpdatePromptSnippetFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetFormat$ {
  /** @deprecated use `UpdatePromptSnippetFormat$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetFormat$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetFormat$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetFormat$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetQuality$inboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetQuality
> = z.nativeEnum(UpdatePromptSnippetQuality);

/** @internal */
export const UpdatePromptSnippetQuality$outboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetQuality
> = UpdatePromptSnippetQuality$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetQuality$ {
  /** @deprecated use `UpdatePromptSnippetQuality$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetQuality$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetQuality$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetQuality$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippetsType$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetResponseFormatPromptSnippetsType> =
    z.nativeEnum(UpdatePromptSnippetResponseFormatPromptSnippetsType);

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippetsType$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetResponseFormatPromptSnippetsType> =
    UpdatePromptSnippetResponseFormatPromptSnippetsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetResponseFormatPromptSnippetsType$ {
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippetsType$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippetsType$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippetsType$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippetsType$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetResponseFormat2$inboundSchema: z.ZodType<
  UpdatePromptSnippetResponseFormat2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: UpdatePromptSnippetResponseFormatPromptSnippetsType$inboundSchema,
});

/** @internal */
export type UpdatePromptSnippetResponseFormat2$Outbound = {
  type: string;
};

/** @internal */
export const UpdatePromptSnippetResponseFormat2$outboundSchema: z.ZodType<
  UpdatePromptSnippetResponseFormat2$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippetResponseFormat2
> = z.object({
  type: UpdatePromptSnippetResponseFormatPromptSnippetsType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetResponseFormat2$ {
  /** @deprecated use `UpdatePromptSnippetResponseFormat2$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetResponseFormat2$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormat2$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetResponseFormat2$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormat2$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetResponseFormat2$Outbound;
}

export function updatePromptSnippetResponseFormat2ToJSON(
  updatePromptSnippetResponseFormat2: UpdatePromptSnippetResponseFormat2,
): string {
  return JSON.stringify(
    UpdatePromptSnippetResponseFormat2$outboundSchema.parse(
      updatePromptSnippetResponseFormat2,
    ),
  );
}

export function updatePromptSnippetResponseFormat2FromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippetResponseFormat2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetResponseFormat2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetResponseFormat2' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetResponseFormatType$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetResponseFormatType> = z.nativeEnum(
    UpdatePromptSnippetResponseFormatType,
  );

/** @internal */
export const UpdatePromptSnippetResponseFormatType$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetResponseFormatType> =
    UpdatePromptSnippetResponseFormatType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetResponseFormatType$ {
  /** @deprecated use `UpdatePromptSnippetResponseFormatType$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetResponseFormatType$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormatType$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetResponseFormatType$outboundSchema;
}

/** @internal */
export const ResponseFormatJsonSchema$inboundSchema: z.ZodType<
  ResponseFormatJsonSchema,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  strict: z.boolean(),
  schema: z.record(z.any()),
});

/** @internal */
export type ResponseFormatJsonSchema$Outbound = {
  name: string;
  strict: boolean;
  schema: { [k: string]: any };
};

/** @internal */
export const ResponseFormatJsonSchema$outboundSchema: z.ZodType<
  ResponseFormatJsonSchema$Outbound,
  z.ZodTypeDef,
  ResponseFormatJsonSchema
> = z.object({
  name: z.string(),
  strict: z.boolean(),
  schema: z.record(z.any()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseFormatJsonSchema$ {
  /** @deprecated use `ResponseFormatJsonSchema$inboundSchema` instead. */
  export const inboundSchema = ResponseFormatJsonSchema$inboundSchema;
  /** @deprecated use `ResponseFormatJsonSchema$outboundSchema` instead. */
  export const outboundSchema = ResponseFormatJsonSchema$outboundSchema;
  /** @deprecated use `ResponseFormatJsonSchema$Outbound` instead. */
  export type Outbound = ResponseFormatJsonSchema$Outbound;
}

export function responseFormatJsonSchemaToJSON(
  responseFormatJsonSchema: ResponseFormatJsonSchema,
): string {
  return JSON.stringify(
    ResponseFormatJsonSchema$outboundSchema.parse(responseFormatJsonSchema),
  );
}

export function responseFormatJsonSchemaFromJSON(
  jsonString: string,
): SafeParseResult<ResponseFormatJsonSchema, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponseFormatJsonSchema$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponseFormatJsonSchema' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetResponseFormat1$inboundSchema: z.ZodType<
  UpdatePromptSnippetResponseFormat1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: UpdatePromptSnippetResponseFormatType$inboundSchema,
  json_schema: z.lazy(() => ResponseFormatJsonSchema$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "json_schema": "jsonSchema",
  });
});

/** @internal */
export type UpdatePromptSnippetResponseFormat1$Outbound = {
  type: string;
  json_schema: ResponseFormatJsonSchema$Outbound;
};

/** @internal */
export const UpdatePromptSnippetResponseFormat1$outboundSchema: z.ZodType<
  UpdatePromptSnippetResponseFormat1$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippetResponseFormat1
> = z.object({
  type: UpdatePromptSnippetResponseFormatType$outboundSchema,
  jsonSchema: z.lazy(() => ResponseFormatJsonSchema$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    jsonSchema: "json_schema",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetResponseFormat1$ {
  /** @deprecated use `UpdatePromptSnippetResponseFormat1$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetResponseFormat1$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormat1$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetResponseFormat1$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormat1$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetResponseFormat1$Outbound;
}

export function updatePromptSnippetResponseFormat1ToJSON(
  updatePromptSnippetResponseFormat1: UpdatePromptSnippetResponseFormat1,
): string {
  return JSON.stringify(
    UpdatePromptSnippetResponseFormat1$outboundSchema.parse(
      updatePromptSnippetResponseFormat1,
    ),
  );
}

export function updatePromptSnippetResponseFormat1FromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippetResponseFormat1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetResponseFormat1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetResponseFormat1' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetResponseFormat$inboundSchema: z.ZodType<
  UpdatePromptSnippetResponseFormat,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => UpdatePromptSnippetResponseFormat2$inboundSchema),
  z.lazy(() => UpdatePromptSnippetResponseFormat1$inboundSchema),
]);

/** @internal */
export type UpdatePromptSnippetResponseFormat$Outbound =
  | UpdatePromptSnippetResponseFormat2$Outbound
  | UpdatePromptSnippetResponseFormat1$Outbound;

/** @internal */
export const UpdatePromptSnippetResponseFormat$outboundSchema: z.ZodType<
  UpdatePromptSnippetResponseFormat$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippetResponseFormat
> = z.union([
  z.lazy(() => UpdatePromptSnippetResponseFormat2$outboundSchema),
  z.lazy(() => UpdatePromptSnippetResponseFormat1$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetResponseFormat$ {
  /** @deprecated use `UpdatePromptSnippetResponseFormat$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetResponseFormat$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormat$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetResponseFormat$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormat$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetResponseFormat$Outbound;
}

export function updatePromptSnippetResponseFormatToJSON(
  updatePromptSnippetResponseFormat: UpdatePromptSnippetResponseFormat,
): string {
  return JSON.stringify(
    UpdatePromptSnippetResponseFormat$outboundSchema.parse(
      updatePromptSnippetResponseFormat,
    ),
  );
}

export function updatePromptSnippetResponseFormatFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippetResponseFormat, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePromptSnippetResponseFormat$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetResponseFormat' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPhotoRealVersion$inboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetPhotoRealVersion
> = z.nativeEnum(UpdatePromptSnippetPhotoRealVersion);

/** @internal */
export const UpdatePromptSnippetPhotoRealVersion$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPhotoRealVersion> =
    UpdatePromptSnippetPhotoRealVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPhotoRealVersion$ {
  /** @deprecated use `UpdatePromptSnippetPhotoRealVersion$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPhotoRealVersion$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPhotoRealVersion$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPhotoRealVersion$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetEncodingFormat$inboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetEncodingFormat
> = z.nativeEnum(UpdatePromptSnippetEncodingFormat);

/** @internal */
export const UpdatePromptSnippetEncodingFormat$outboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetEncodingFormat
> = UpdatePromptSnippetEncodingFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetEncodingFormat$ {
  /** @deprecated use `UpdatePromptSnippetEncodingFormat$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetEncodingFormat$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetEncodingFormat$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetEncodingFormat$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetReasoningEffort$inboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetReasoningEffort
> = z.nativeEnum(UpdatePromptSnippetReasoningEffort);

/** @internal */
export const UpdatePromptSnippetReasoningEffort$outboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetReasoningEffort
> = UpdatePromptSnippetReasoningEffort$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetReasoningEffort$ {
  /** @deprecated use `UpdatePromptSnippetReasoningEffort$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetReasoningEffort$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetReasoningEffort$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetReasoningEffort$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetModelParameters$inboundSchema: z.ZodType<
  UpdatePromptSnippetModelParameters,
  z.ZodTypeDef,
  unknown
> = z.object({
  temperature: z.number().optional(),
  maxTokens: z.number().optional(),
  topK: z.number().optional(),
  topP: z.number().optional(),
  frequencyPenalty: z.number().optional(),
  presencePenalty: z.number().optional(),
  numImages: z.number().optional(),
  seed: z.number().optional(),
  format: UpdatePromptSnippetFormat$inboundSchema.optional(),
  dimensions: z.string().optional(),
  quality: UpdatePromptSnippetQuality$inboundSchema.optional(),
  style: z.string().optional(),
  responseFormat: z.nullable(
    z.union([
      z.lazy(() => UpdatePromptSnippetResponseFormat2$inboundSchema),
      z.lazy(() => UpdatePromptSnippetResponseFormat1$inboundSchema),
    ]),
  ).optional(),
  photoRealVersion: UpdatePromptSnippetPhotoRealVersion$inboundSchema
    .optional(),
  encoding_format: UpdatePromptSnippetEncodingFormat$inboundSchema.optional(),
  reasoningEffort: UpdatePromptSnippetReasoningEffort$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "encoding_format": "encodingFormat",
  });
});

/** @internal */
export type UpdatePromptSnippetModelParameters$Outbound = {
  temperature?: number | undefined;
  maxTokens?: number | undefined;
  topK?: number | undefined;
  topP?: number | undefined;
  frequencyPenalty?: number | undefined;
  presencePenalty?: number | undefined;
  numImages?: number | undefined;
  seed?: number | undefined;
  format?: string | undefined;
  dimensions?: string | undefined;
  quality?: string | undefined;
  style?: string | undefined;
  responseFormat?:
    | UpdatePromptSnippetResponseFormat2$Outbound
    | UpdatePromptSnippetResponseFormat1$Outbound
    | null
    | undefined;
  photoRealVersion?: string | undefined;
  encoding_format?: string | undefined;
  reasoningEffort?: string | undefined;
};

/** @internal */
export const UpdatePromptSnippetModelParameters$outboundSchema: z.ZodType<
  UpdatePromptSnippetModelParameters$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippetModelParameters
> = z.object({
  temperature: z.number().optional(),
  maxTokens: z.number().optional(),
  topK: z.number().optional(),
  topP: z.number().optional(),
  frequencyPenalty: z.number().optional(),
  presencePenalty: z.number().optional(),
  numImages: z.number().optional(),
  seed: z.number().optional(),
  format: UpdatePromptSnippetFormat$outboundSchema.optional(),
  dimensions: z.string().optional(),
  quality: UpdatePromptSnippetQuality$outboundSchema.optional(),
  style: z.string().optional(),
  responseFormat: z.nullable(
    z.union([
      z.lazy(() => UpdatePromptSnippetResponseFormat2$outboundSchema),
      z.lazy(() => UpdatePromptSnippetResponseFormat1$outboundSchema),
    ]),
  ).optional(),
  photoRealVersion: UpdatePromptSnippetPhotoRealVersion$outboundSchema
    .optional(),
  encodingFormat: UpdatePromptSnippetEncodingFormat$outboundSchema.optional(),
  reasoningEffort: UpdatePromptSnippetReasoningEffort$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    encodingFormat: "encoding_format",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetModelParameters$ {
  /** @deprecated use `UpdatePromptSnippetModelParameters$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetModelParameters$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetModelParameters$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetModelParameters$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetModelParameters$Outbound;
}

export function updatePromptSnippetModelParametersToJSON(
  updatePromptSnippetModelParameters: UpdatePromptSnippetModelParameters,
): string {
  return JSON.stringify(
    UpdatePromptSnippetModelParameters$outboundSchema.parse(
      updatePromptSnippetModelParameters,
    ),
  );
}

export function updatePromptSnippetModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippetModelParameters, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetModelParameters$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetModelParameters' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetProvider$inboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetProvider
> = z.nativeEnum(UpdatePromptSnippetProvider);

/** @internal */
export const UpdatePromptSnippetProvider$outboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetProvider
> = UpdatePromptSnippetProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetProvider$ {
  /** @deprecated use `UpdatePromptSnippetProvider$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetProvider$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetProvider$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetProvider$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetRole$inboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetRole
> = z.nativeEnum(UpdatePromptSnippetRole);

/** @internal */
export const UpdatePromptSnippetRole$outboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetRole
> = UpdatePromptSnippetRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetRole$ {
  /** @deprecated use `UpdatePromptSnippetRole$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetRole$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetRole$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetRole$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippet2PromptSnippetsType$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippet2PromptSnippetsType> = z.nativeEnum(
    UpdatePromptSnippet2PromptSnippetsType,
  );

/** @internal */
export const UpdatePromptSnippet2PromptSnippetsType$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippet2PromptSnippetsType> =
    UpdatePromptSnippet2PromptSnippetsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippet2PromptSnippetsType$ {
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsType$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippet2PromptSnippetsType$inboundSchema;
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsType$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippet2PromptSnippetsType$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippet2ImageUrl$inboundSchema: z.ZodType<
  UpdatePromptSnippet2ImageUrl,
  z.ZodTypeDef,
  unknown
> = z.object({
  url: z.string(),
  detail: z.string().optional(),
});

/** @internal */
export type UpdatePromptSnippet2ImageUrl$Outbound = {
  url: string;
  detail?: string | undefined;
};

/** @internal */
export const UpdatePromptSnippet2ImageUrl$outboundSchema: z.ZodType<
  UpdatePromptSnippet2ImageUrl$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippet2ImageUrl
> = z.object({
  url: z.string(),
  detail: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippet2ImageUrl$ {
  /** @deprecated use `UpdatePromptSnippet2ImageUrl$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippet2ImageUrl$inboundSchema;
  /** @deprecated use `UpdatePromptSnippet2ImageUrl$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippet2ImageUrl$outboundSchema;
  /** @deprecated use `UpdatePromptSnippet2ImageUrl$Outbound` instead. */
  export type Outbound = UpdatePromptSnippet2ImageUrl$Outbound;
}

export function updatePromptSnippet2ImageUrlToJSON(
  updatePromptSnippet2ImageUrl: UpdatePromptSnippet2ImageUrl,
): string {
  return JSON.stringify(
    UpdatePromptSnippet2ImageUrl$outboundSchema.parse(
      updatePromptSnippet2ImageUrl,
    ),
  );
}

export function updatePromptSnippet2ImageUrlFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippet2ImageUrl, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePromptSnippet2ImageUrl$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippet2ImageUrl' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippet22$inboundSchema: z.ZodType<
  UpdatePromptSnippet22,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: UpdatePromptSnippet2PromptSnippetsType$inboundSchema,
  image_url: z.lazy(() => UpdatePromptSnippet2ImageUrl$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "image_url": "imageUrl",
  });
});

/** @internal */
export type UpdatePromptSnippet22$Outbound = {
  type: string;
  image_url: UpdatePromptSnippet2ImageUrl$Outbound;
};

/** @internal */
export const UpdatePromptSnippet22$outboundSchema: z.ZodType<
  UpdatePromptSnippet22$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippet22
> = z.object({
  type: UpdatePromptSnippet2PromptSnippetsType$outboundSchema,
  imageUrl: z.lazy(() => UpdatePromptSnippet2ImageUrl$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    imageUrl: "image_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippet22$ {
  /** @deprecated use `UpdatePromptSnippet22$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippet22$inboundSchema;
  /** @deprecated use `UpdatePromptSnippet22$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippet22$outboundSchema;
  /** @deprecated use `UpdatePromptSnippet22$Outbound` instead. */
  export type Outbound = UpdatePromptSnippet22$Outbound;
}

export function updatePromptSnippet22ToJSON(
  updatePromptSnippet22: UpdatePromptSnippet22,
): string {
  return JSON.stringify(
    UpdatePromptSnippet22$outboundSchema.parse(updatePromptSnippet22),
  );
}

export function updatePromptSnippet22FromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippet22, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePromptSnippet22$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippet22' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippet2Type$inboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippet2Type
> = z.nativeEnum(UpdatePromptSnippet2Type);

/** @internal */
export const UpdatePromptSnippet2Type$outboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippet2Type
> = UpdatePromptSnippet2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippet2Type$ {
  /** @deprecated use `UpdatePromptSnippet2Type$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippet2Type$inboundSchema;
  /** @deprecated use `UpdatePromptSnippet2Type$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippet2Type$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippet21$inboundSchema: z.ZodType<
  UpdatePromptSnippet21,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: UpdatePromptSnippet2Type$inboundSchema,
  text: z.string(),
});

/** @internal */
export type UpdatePromptSnippet21$Outbound = {
  type: string;
  text: string;
};

/** @internal */
export const UpdatePromptSnippet21$outboundSchema: z.ZodType<
  UpdatePromptSnippet21$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippet21
> = z.object({
  type: UpdatePromptSnippet2Type$outboundSchema,
  text: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippet21$ {
  /** @deprecated use `UpdatePromptSnippet21$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippet21$inboundSchema;
  /** @deprecated use `UpdatePromptSnippet21$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippet21$outboundSchema;
  /** @deprecated use `UpdatePromptSnippet21$Outbound` instead. */
  export type Outbound = UpdatePromptSnippet21$Outbound;
}

export function updatePromptSnippet21ToJSON(
  updatePromptSnippet21: UpdatePromptSnippet21,
): string {
  return JSON.stringify(
    UpdatePromptSnippet21$outboundSchema.parse(updatePromptSnippet21),
  );
}

export function updatePromptSnippet21FromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippet21, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePromptSnippet21$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippet21' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetContent2$inboundSchema: z.ZodType<
  UpdatePromptSnippetContent2,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => UpdatePromptSnippet21$inboundSchema),
  z.lazy(() => UpdatePromptSnippet22$inboundSchema),
]);

/** @internal */
export type UpdatePromptSnippetContent2$Outbound =
  | UpdatePromptSnippet21$Outbound
  | UpdatePromptSnippet22$Outbound;

/** @internal */
export const UpdatePromptSnippetContent2$outboundSchema: z.ZodType<
  UpdatePromptSnippetContent2$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippetContent2
> = z.union([
  z.lazy(() => UpdatePromptSnippet21$outboundSchema),
  z.lazy(() => UpdatePromptSnippet22$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetContent2$ {
  /** @deprecated use `UpdatePromptSnippetContent2$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetContent2$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetContent2$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetContent2$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetContent2$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetContent2$Outbound;
}

export function updatePromptSnippetContent2ToJSON(
  updatePromptSnippetContent2: UpdatePromptSnippetContent2,
): string {
  return JSON.stringify(
    UpdatePromptSnippetContent2$outboundSchema.parse(
      updatePromptSnippetContent2,
    ),
  );
}

export function updatePromptSnippetContent2FromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippetContent2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePromptSnippetContent2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetContent2' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetContent$inboundSchema: z.ZodType<
  UpdatePromptSnippetContent,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => UpdatePromptSnippet21$inboundSchema),
    z.lazy(() => UpdatePromptSnippet22$inboundSchema),
  ])),
]);

/** @internal */
export type UpdatePromptSnippetContent$Outbound =
  | string
  | Array<UpdatePromptSnippet21$Outbound | UpdatePromptSnippet22$Outbound>;

/** @internal */
export const UpdatePromptSnippetContent$outboundSchema: z.ZodType<
  UpdatePromptSnippetContent$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippetContent
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => UpdatePromptSnippet21$outboundSchema),
    z.lazy(() => UpdatePromptSnippet22$outboundSchema),
  ])),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetContent$ {
  /** @deprecated use `UpdatePromptSnippetContent$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetContent$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetContent$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetContent$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetContent$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetContent$Outbound;
}

export function updatePromptSnippetContentToJSON(
  updatePromptSnippetContent: UpdatePromptSnippetContent,
): string {
  return JSON.stringify(
    UpdatePromptSnippetContent$outboundSchema.parse(updatePromptSnippetContent),
  );
}

export function updatePromptSnippetContentFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippetContent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePromptSnippetContent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetContent' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetType$inboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetType
> = z.nativeEnum(UpdatePromptSnippetType);

/** @internal */
export const UpdatePromptSnippetType$outboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetType
> = UpdatePromptSnippetType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetType$ {
  /** @deprecated use `UpdatePromptSnippetType$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetType$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetType$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetType$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetFunction$inboundSchema: z.ZodType<
  UpdatePromptSnippetFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/** @internal */
export type UpdatePromptSnippetFunction$Outbound = {
  name: string;
  arguments: string;
};

/** @internal */
export const UpdatePromptSnippetFunction$outboundSchema: z.ZodType<
  UpdatePromptSnippetFunction$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippetFunction
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetFunction$ {
  /** @deprecated use `UpdatePromptSnippetFunction$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetFunction$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetFunction$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetFunction$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetFunction$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetFunction$Outbound;
}

export function updatePromptSnippetFunctionToJSON(
  updatePromptSnippetFunction: UpdatePromptSnippetFunction,
): string {
  return JSON.stringify(
    UpdatePromptSnippetFunction$outboundSchema.parse(
      updatePromptSnippetFunction,
    ),
  );
}

export function updatePromptSnippetFunctionFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippetFunction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePromptSnippetFunction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetFunction' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetToolCalls$inboundSchema: z.ZodType<
  UpdatePromptSnippetToolCalls,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: UpdatePromptSnippetType$inboundSchema,
  function: z.lazy(() => UpdatePromptSnippetFunction$inboundSchema),
});

/** @internal */
export type UpdatePromptSnippetToolCalls$Outbound = {
  id?: string | undefined;
  index?: number | undefined;
  type: string;
  function: UpdatePromptSnippetFunction$Outbound;
};

/** @internal */
export const UpdatePromptSnippetToolCalls$outboundSchema: z.ZodType<
  UpdatePromptSnippetToolCalls$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippetToolCalls
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: UpdatePromptSnippetType$outboundSchema,
  function: z.lazy(() => UpdatePromptSnippetFunction$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetToolCalls$ {
  /** @deprecated use `UpdatePromptSnippetToolCalls$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetToolCalls$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetToolCalls$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetToolCalls$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetToolCalls$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetToolCalls$Outbound;
}

export function updatePromptSnippetToolCallsToJSON(
  updatePromptSnippetToolCalls: UpdatePromptSnippetToolCalls,
): string {
  return JSON.stringify(
    UpdatePromptSnippetToolCalls$outboundSchema.parse(
      updatePromptSnippetToolCalls,
    ),
  );
}

export function updatePromptSnippetToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippetToolCalls, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePromptSnippetToolCalls$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetToolCalls' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetMessages$inboundSchema: z.ZodType<
  UpdatePromptSnippetMessages,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: UpdatePromptSnippetRole$inboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => UpdatePromptSnippet21$inboundSchema),
      z.lazy(() => UpdatePromptSnippet22$inboundSchema),
    ])),
  ]),
  tool_calls: z.array(z.lazy(() => UpdatePromptSnippetToolCalls$inboundSchema))
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "tool_calls": "toolCalls",
  });
});

/** @internal */
export type UpdatePromptSnippetMessages$Outbound = {
  role: string;
  content:
    | string
    | Array<UpdatePromptSnippet21$Outbound | UpdatePromptSnippet22$Outbound>;
  tool_calls?: Array<UpdatePromptSnippetToolCalls$Outbound> | undefined;
};

/** @internal */
export const UpdatePromptSnippetMessages$outboundSchema: z.ZodType<
  UpdatePromptSnippetMessages$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippetMessages
> = z.object({
  role: UpdatePromptSnippetRole$outboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => UpdatePromptSnippet21$outboundSchema),
      z.lazy(() => UpdatePromptSnippet22$outboundSchema),
    ])),
  ]),
  toolCalls: z.array(z.lazy(() => UpdatePromptSnippetToolCalls$outboundSchema))
    .optional(),
}).transform((v) => {
  return remap$(v, {
    toolCalls: "tool_calls",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetMessages$ {
  /** @deprecated use `UpdatePromptSnippetMessages$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetMessages$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetMessages$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetMessages$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetMessages$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetMessages$Outbound;
}

export function updatePromptSnippetMessagesToJSON(
  updatePromptSnippetMessages: UpdatePromptSnippetMessages,
): string {
  return JSON.stringify(
    UpdatePromptSnippetMessages$outboundSchema.parse(
      updatePromptSnippetMessages,
    ),
  );
}

export function updatePromptSnippetMessagesFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippetMessages, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePromptSnippetMessages$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetMessages' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptConfig$inboundSchema: z.ZodType<
  UpdatePromptSnippetPromptConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  stream: z.boolean().optional(),
  model: z.string().optional(),
  model_type: UpdatePromptSnippetModelType$inboundSchema.optional(),
  model_parameters: z.lazy(() =>
    UpdatePromptSnippetModelParameters$inboundSchema
  ).optional(),
  provider: UpdatePromptSnippetProvider$inboundSchema.optional(),
  version: z.string().optional(),
  messages: z.array(z.lazy(() => UpdatePromptSnippetMessages$inboundSchema)),
}).transform((v) => {
  return remap$(v, {
    "model_type": "modelType",
    "model_parameters": "modelParameters",
  });
});

/** @internal */
export type UpdatePromptSnippetPromptConfig$Outbound = {
  stream?: boolean | undefined;
  model?: string | undefined;
  model_type?: string | undefined;
  model_parameters?: UpdatePromptSnippetModelParameters$Outbound | undefined;
  provider?: string | undefined;
  version?: string | undefined;
  messages: Array<UpdatePromptSnippetMessages$Outbound>;
};

/** @internal */
export const UpdatePromptSnippetPromptConfig$outboundSchema: z.ZodType<
  UpdatePromptSnippetPromptConfig$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippetPromptConfig
> = z.object({
  stream: z.boolean().optional(),
  model: z.string().optional(),
  modelType: UpdatePromptSnippetModelType$outboundSchema.optional(),
  modelParameters: z.lazy(() =>
    UpdatePromptSnippetModelParameters$outboundSchema
  ).optional(),
  provider: UpdatePromptSnippetProvider$outboundSchema.optional(),
  version: z.string().optional(),
  messages: z.array(z.lazy(() => UpdatePromptSnippetMessages$outboundSchema)),
}).transform((v) => {
  return remap$(v, {
    modelType: "model_type",
    modelParameters: "model_parameters",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptConfig$ {
  /** @deprecated use `UpdatePromptSnippetPromptConfig$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetPromptConfig$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptConfig$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetPromptConfig$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptConfig$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetPromptConfig$Outbound;
}

export function updatePromptSnippetPromptConfigToJSON(
  updatePromptSnippetPromptConfig: UpdatePromptSnippetPromptConfig,
): string {
  return JSON.stringify(
    UpdatePromptSnippetPromptConfig$outboundSchema.parse(
      updatePromptSnippetPromptConfig,
    ),
  );
}

export function updatePromptSnippetPromptConfigFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippetPromptConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePromptSnippetPromptConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetPromptConfig' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetUseCases$inboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetUseCases
> = z.nativeEnum(UpdatePromptSnippetUseCases);

/** @internal */
export const UpdatePromptSnippetUseCases$outboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetUseCases
> = UpdatePromptSnippetUseCases$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetUseCases$ {
  /** @deprecated use `UpdatePromptSnippetUseCases$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetUseCases$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetUseCases$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetUseCases$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetLanguage$inboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetLanguage
> = z.nativeEnum(UpdatePromptSnippetLanguage);

/** @internal */
export const UpdatePromptSnippetLanguage$outboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetLanguage
> = UpdatePromptSnippetLanguage$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetLanguage$ {
  /** @deprecated use `UpdatePromptSnippetLanguage$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetLanguage$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetLanguage$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetLanguage$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetMetadata$inboundSchema: z.ZodType<
  UpdatePromptSnippetMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({
  use_cases: z.array(UpdatePromptSnippetUseCases$inboundSchema).optional(),
  language: UpdatePromptSnippetLanguage$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "use_cases": "useCases",
  });
});

/** @internal */
export type UpdatePromptSnippetMetadata$Outbound = {
  use_cases?: Array<string> | undefined;
  language?: string | undefined;
};

/** @internal */
export const UpdatePromptSnippetMetadata$outboundSchema: z.ZodType<
  UpdatePromptSnippetMetadata$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippetMetadata
> = z.object({
  useCases: z.array(UpdatePromptSnippetUseCases$outboundSchema).optional(),
  language: UpdatePromptSnippetLanguage$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    useCases: "use_cases",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetMetadata$ {
  /** @deprecated use `UpdatePromptSnippetMetadata$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetMetadata$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetMetadata$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetMetadata$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetMetadata$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetMetadata$Outbound;
}

export function updatePromptSnippetMetadataToJSON(
  updatePromptSnippetMetadata: UpdatePromptSnippetMetadata,
): string {
  return JSON.stringify(
    UpdatePromptSnippetMetadata$outboundSchema.parse(
      updatePromptSnippetMetadata,
    ),
  );
}

export function updatePromptSnippetMetadataFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippetMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePromptSnippetMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetMetadata' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetRequestBody$inboundSchema: z.ZodType<
  UpdatePromptSnippetRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  description: z.nullable(z.string()).optional(),
  prompt_config: z.lazy(() => UpdatePromptSnippetPromptConfig$inboundSchema)
    .optional(),
  metadata: z.lazy(() => UpdatePromptSnippetMetadata$inboundSchema).optional(),
  path: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "prompt_config": "promptConfig",
  });
});

/** @internal */
export type UpdatePromptSnippetRequestBody$Outbound = {
  description?: string | null | undefined;
  prompt_config?: UpdatePromptSnippetPromptConfig$Outbound | undefined;
  metadata?: UpdatePromptSnippetMetadata$Outbound | undefined;
  path?: string | undefined;
};

/** @internal */
export const UpdatePromptSnippetRequestBody$outboundSchema: z.ZodType<
  UpdatePromptSnippetRequestBody$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippetRequestBody
> = z.object({
  description: z.nullable(z.string()).optional(),
  promptConfig: z.lazy(() => UpdatePromptSnippetPromptConfig$outboundSchema)
    .optional(),
  metadata: z.lazy(() => UpdatePromptSnippetMetadata$outboundSchema).optional(),
  path: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    promptConfig: "prompt_config",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetRequestBody$ {
  /** @deprecated use `UpdatePromptSnippetRequestBody$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetRequestBody$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetRequestBody$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetRequestBody$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetRequestBody$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetRequestBody$Outbound;
}

export function updatePromptSnippetRequestBodyToJSON(
  updatePromptSnippetRequestBody: UpdatePromptSnippetRequestBody,
): string {
  return JSON.stringify(
    UpdatePromptSnippetRequestBody$outboundSchema.parse(
      updatePromptSnippetRequestBody,
    ),
  );
}

export function updatePromptSnippetRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippetRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePromptSnippetRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetRequestBody' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetRequest$inboundSchema: z.ZodType<
  UpdatePromptSnippetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  RequestBody: z.lazy(() => UpdatePromptSnippetRequestBody$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UpdatePromptSnippetRequest$Outbound = {
  id: string;
  RequestBody?: UpdatePromptSnippetRequestBody$Outbound | undefined;
};

/** @internal */
export const UpdatePromptSnippetRequest$outboundSchema: z.ZodType<
  UpdatePromptSnippetRequest$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippetRequest
> = z.object({
  id: z.string(),
  requestBody: z.lazy(() => UpdatePromptSnippetRequestBody$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetRequest$ {
  /** @deprecated use `UpdatePromptSnippetRequest$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetRequest$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetRequest$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetRequest$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetRequest$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetRequest$Outbound;
}

export function updatePromptSnippetRequestToJSON(
  updatePromptSnippetRequest: UpdatePromptSnippetRequest,
): string {
  return JSON.stringify(
    UpdatePromptSnippetRequest$outboundSchema.parse(updatePromptSnippetRequest),
  );
}

export function updatePromptSnippetRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippetRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePromptSnippetRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetRequest' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetOwner2$inboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetOwner2
> = z.nativeEnum(UpdatePromptSnippetOwner2);

/** @internal */
export const UpdatePromptSnippetOwner2$outboundSchema: z.ZodNativeEnum<
  typeof UpdatePromptSnippetOwner2
> = UpdatePromptSnippetOwner2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetOwner2$ {
  /** @deprecated use `UpdatePromptSnippetOwner2$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetOwner2$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetOwner2$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetOwner2$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetOwner$inboundSchema: z.ZodType<
  UpdatePromptSnippetOwner,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), UpdatePromptSnippetOwner2$inboundSchema]);

/** @internal */
export type UpdatePromptSnippetOwner$Outbound = string | string;

/** @internal */
export const UpdatePromptSnippetOwner$outboundSchema: z.ZodType<
  UpdatePromptSnippetOwner$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippetOwner
> = z.union([z.string(), UpdatePromptSnippetOwner2$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetOwner$ {
  /** @deprecated use `UpdatePromptSnippetOwner$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetOwner$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetOwner$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetOwner$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetOwner$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetOwner$Outbound;
}

export function updatePromptSnippetOwnerToJSON(
  updatePromptSnippetOwner: UpdatePromptSnippetOwner,
): string {
  return JSON.stringify(
    UpdatePromptSnippetOwner$outboundSchema.parse(updatePromptSnippetOwner),
  );
}

export function updatePromptSnippetOwnerFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippetOwner, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePromptSnippetOwner$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetOwner' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsModelType$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsModelType> = z
    .nativeEnum(UpdatePromptSnippetPromptSnippetsModelType);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsModelType$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsModelType> =
    UpdatePromptSnippetPromptSnippetsModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsModelType$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsModelType$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsModelType$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsModelType$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsModelType$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsFormat$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsFormat> = z
    .nativeEnum(UpdatePromptSnippetPromptSnippetsFormat);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsFormat$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsFormat> =
    UpdatePromptSnippetPromptSnippetsFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsFormat$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsFormat$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsFormat$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsFormat$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsFormat$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsQuality$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsQuality> = z
    .nativeEnum(UpdatePromptSnippetPromptSnippetsQuality);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsQuality$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsQuality> =
    UpdatePromptSnippetPromptSnippetsQuality$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsQuality$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsQuality$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsQuality$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsQuality$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsQuality$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippetsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdatePromptSnippetResponseFormatPromptSnippetsResponse200Type
  > = z.nativeEnum(
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse200Type,
  );

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippetsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdatePromptSnippetResponseFormatPromptSnippetsResponse200Type
  > =
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetResponseFormatPromptSnippetsResponse200Type$ {
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippetsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse200Type$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippetsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse200Type$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippets2$inboundSchema:
  z.ZodType<
    UpdatePromptSnippetResponseFormatPromptSnippets2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      UpdatePromptSnippetResponseFormatPromptSnippetsResponse200Type$inboundSchema,
  });

/** @internal */
export type UpdatePromptSnippetResponseFormatPromptSnippets2$Outbound = {
  type: string;
};

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippets2$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetResponseFormatPromptSnippets2$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetResponseFormatPromptSnippets2
  > = z.object({
    type:
      UpdatePromptSnippetResponseFormatPromptSnippetsResponse200Type$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetResponseFormatPromptSnippets2$ {
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippets2$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippets2$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippets2$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippets2$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippets2$Outbound` instead. */
  export type Outbound =
    UpdatePromptSnippetResponseFormatPromptSnippets2$Outbound;
}

export function updatePromptSnippetResponseFormatPromptSnippets2ToJSON(
  updatePromptSnippetResponseFormatPromptSnippets2:
    UpdatePromptSnippetResponseFormatPromptSnippets2,
): string {
  return JSON.stringify(
    UpdatePromptSnippetResponseFormatPromptSnippets2$outboundSchema.parse(
      updatePromptSnippetResponseFormatPromptSnippets2,
    ),
  );
}

export function updatePromptSnippetResponseFormatPromptSnippets2FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetResponseFormatPromptSnippets2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetResponseFormatPromptSnippets2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippetResponseFormatPromptSnippets2' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippetsResponseType$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdatePromptSnippetResponseFormatPromptSnippetsResponseType
  > = z.nativeEnum(UpdatePromptSnippetResponseFormatPromptSnippetsResponseType);

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippetsResponseType$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdatePromptSnippetResponseFormatPromptSnippetsResponseType
  > = UpdatePromptSnippetResponseFormatPromptSnippetsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetResponseFormatPromptSnippetsResponseType$ {
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippetsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippetsResponseType$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippetsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippetsResponseType$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetResponseFormatJsonSchema$inboundSchema:
  z.ZodType<
    UpdatePromptSnippetResponseFormatJsonSchema,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/** @internal */
export type UpdatePromptSnippetResponseFormatJsonSchema$Outbound = {
  name: string;
  strict: boolean;
  schema: { [k: string]: any };
};

/** @internal */
export const UpdatePromptSnippetResponseFormatJsonSchema$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetResponseFormatJsonSchema$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetResponseFormatJsonSchema
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetResponseFormatJsonSchema$ {
  /** @deprecated use `UpdatePromptSnippetResponseFormatJsonSchema$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetResponseFormatJsonSchema$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormatJsonSchema$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetResponseFormatJsonSchema$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormatJsonSchema$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetResponseFormatJsonSchema$Outbound;
}

export function updatePromptSnippetResponseFormatJsonSchemaToJSON(
  updatePromptSnippetResponseFormatJsonSchema:
    UpdatePromptSnippetResponseFormatJsonSchema,
): string {
  return JSON.stringify(
    UpdatePromptSnippetResponseFormatJsonSchema$outboundSchema.parse(
      updatePromptSnippetResponseFormatJsonSchema,
    ),
  );
}

export function updatePromptSnippetResponseFormatJsonSchemaFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetResponseFormatJsonSchema,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetResponseFormatJsonSchema$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippetResponseFormatJsonSchema' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippets1$inboundSchema:
  z.ZodType<
    UpdatePromptSnippetResponseFormatPromptSnippets1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      UpdatePromptSnippetResponseFormatPromptSnippetsResponseType$inboundSchema,
    json_schema: z.lazy(() =>
      UpdatePromptSnippetResponseFormatJsonSchema$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "json_schema": "jsonSchema",
    });
  });

/** @internal */
export type UpdatePromptSnippetResponseFormatPromptSnippets1$Outbound = {
  type: string;
  json_schema: UpdatePromptSnippetResponseFormatJsonSchema$Outbound;
};

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippets1$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetResponseFormatPromptSnippets1$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetResponseFormatPromptSnippets1
  > = z.object({
    type:
      UpdatePromptSnippetResponseFormatPromptSnippetsResponseType$outboundSchema,
    jsonSchema: z.lazy(() =>
      UpdatePromptSnippetResponseFormatJsonSchema$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      jsonSchema: "json_schema",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetResponseFormatPromptSnippets1$ {
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippets1$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippets1$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippets1$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippets1$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippets1$Outbound` instead. */
  export type Outbound =
    UpdatePromptSnippetResponseFormatPromptSnippets1$Outbound;
}

export function updatePromptSnippetResponseFormatPromptSnippets1ToJSON(
  updatePromptSnippetResponseFormatPromptSnippets1:
    UpdatePromptSnippetResponseFormatPromptSnippets1,
): string {
  return JSON.stringify(
    UpdatePromptSnippetResponseFormatPromptSnippets1$outboundSchema.parse(
      updatePromptSnippetResponseFormatPromptSnippets1,
    ),
  );
}

export function updatePromptSnippetResponseFormatPromptSnippets1FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetResponseFormatPromptSnippets1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetResponseFormatPromptSnippets1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippetResponseFormatPromptSnippets1' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseFormat$inboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsResponseFormat,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      UpdatePromptSnippetResponseFormatPromptSnippets2$inboundSchema
    ),
    z.lazy(() =>
      UpdatePromptSnippetResponseFormatPromptSnippets1$inboundSchema
    ),
  ]);

/** @internal */
export type UpdatePromptSnippetPromptSnippetsResponseFormat$Outbound =
  | UpdatePromptSnippetResponseFormatPromptSnippets2$Outbound
  | UpdatePromptSnippetResponseFormatPromptSnippets1$Outbound;

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseFormat$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsResponseFormat$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetPromptSnippetsResponseFormat
  > = z.union([
    z.lazy(() =>
      UpdatePromptSnippetResponseFormatPromptSnippets2$outboundSchema
    ),
    z.lazy(() =>
      UpdatePromptSnippetResponseFormatPromptSnippets1$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponseFormat$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseFormat$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseFormat$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseFormat$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseFormat$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseFormat$Outbound` instead. */
  export type Outbound =
    UpdatePromptSnippetPromptSnippetsResponseFormat$Outbound;
}

export function updatePromptSnippetPromptSnippetsResponseFormatToJSON(
  updatePromptSnippetPromptSnippetsResponseFormat:
    UpdatePromptSnippetPromptSnippetsResponseFormat,
): string {
  return JSON.stringify(
    UpdatePromptSnippetPromptSnippetsResponseFormat$outboundSchema.parse(
      updatePromptSnippetPromptSnippetsResponseFormat,
    ),
  );
}

export function updatePromptSnippetPromptSnippetsResponseFormatFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetPromptSnippetsResponseFormat,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetPromptSnippetsResponseFormat$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippetPromptSnippetsResponseFormat' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsPhotoRealVersion$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsPhotoRealVersion> = z
    .nativeEnum(UpdatePromptSnippetPromptSnippetsPhotoRealVersion);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsPhotoRealVersion$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsPhotoRealVersion> =
    UpdatePromptSnippetPromptSnippetsPhotoRealVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsPhotoRealVersion$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsPhotoRealVersion$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsPhotoRealVersion$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsPhotoRealVersion$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsPhotoRealVersion$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsEncodingFormat$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsEncodingFormat> = z
    .nativeEnum(UpdatePromptSnippetPromptSnippetsEncodingFormat);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsEncodingFormat$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsEncodingFormat> =
    UpdatePromptSnippetPromptSnippetsEncodingFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsEncodingFormat$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsEncodingFormat$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsEncodingFormat$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsEncodingFormat$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsEncodingFormat$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsReasoningEffort$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsReasoningEffort> = z
    .nativeEnum(UpdatePromptSnippetPromptSnippetsReasoningEffort);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsReasoningEffort$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsReasoningEffort> =
    UpdatePromptSnippetPromptSnippetsReasoningEffort$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsReasoningEffort$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsReasoningEffort$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsReasoningEffort$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsReasoningEffort$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsReasoningEffort$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsModelParameters$inboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsModelParameters,
    z.ZodTypeDef,
    unknown
  > = z.object({
    temperature: z.number().optional(),
    maxTokens: z.number().optional(),
    topK: z.number().optional(),
    topP: z.number().optional(),
    frequencyPenalty: z.number().optional(),
    presencePenalty: z.number().optional(),
    numImages: z.number().optional(),
    seed: z.number().optional(),
    format: UpdatePromptSnippetPromptSnippetsFormat$inboundSchema.optional(),
    dimensions: z.string().optional(),
    quality: UpdatePromptSnippetPromptSnippetsQuality$inboundSchema.optional(),
    style: z.string().optional(),
    responseFormat: z.nullable(
      z.union([
        z.lazy(() =>
          UpdatePromptSnippetResponseFormatPromptSnippets2$inboundSchema
        ),
        z.lazy(() =>
          UpdatePromptSnippetResponseFormatPromptSnippets1$inboundSchema
        ),
      ]),
    ).optional(),
    photoRealVersion:
      UpdatePromptSnippetPromptSnippetsPhotoRealVersion$inboundSchema
        .optional(),
    encoding_format:
      UpdatePromptSnippetPromptSnippetsEncodingFormat$inboundSchema.optional(),
    reasoningEffort:
      UpdatePromptSnippetPromptSnippetsReasoningEffort$inboundSchema.optional(),
  }).transform((v) => {
    return remap$(v, {
      "encoding_format": "encodingFormat",
    });
  });

/** @internal */
export type UpdatePromptSnippetPromptSnippetsModelParameters$Outbound = {
  temperature?: number | undefined;
  maxTokens?: number | undefined;
  topK?: number | undefined;
  topP?: number | undefined;
  frequencyPenalty?: number | undefined;
  presencePenalty?: number | undefined;
  numImages?: number | undefined;
  seed?: number | undefined;
  format?: string | undefined;
  dimensions?: string | undefined;
  quality?: string | undefined;
  style?: string | undefined;
  responseFormat?:
    | UpdatePromptSnippetResponseFormatPromptSnippets2$Outbound
    | UpdatePromptSnippetResponseFormatPromptSnippets1$Outbound
    | null
    | undefined;
  photoRealVersion?: string | undefined;
  encoding_format?: string | undefined;
  reasoningEffort?: string | undefined;
};

/** @internal */
export const UpdatePromptSnippetPromptSnippetsModelParameters$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsModelParameters$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetPromptSnippetsModelParameters
  > = z.object({
    temperature: z.number().optional(),
    maxTokens: z.number().optional(),
    topK: z.number().optional(),
    topP: z.number().optional(),
    frequencyPenalty: z.number().optional(),
    presencePenalty: z.number().optional(),
    numImages: z.number().optional(),
    seed: z.number().optional(),
    format: UpdatePromptSnippetPromptSnippetsFormat$outboundSchema.optional(),
    dimensions: z.string().optional(),
    quality: UpdatePromptSnippetPromptSnippetsQuality$outboundSchema.optional(),
    style: z.string().optional(),
    responseFormat: z.nullable(
      z.union([
        z.lazy(() =>
          UpdatePromptSnippetResponseFormatPromptSnippets2$outboundSchema
        ),
        z.lazy(() =>
          UpdatePromptSnippetResponseFormatPromptSnippets1$outboundSchema
        ),
      ]),
    ).optional(),
    photoRealVersion:
      UpdatePromptSnippetPromptSnippetsPhotoRealVersion$outboundSchema
        .optional(),
    encodingFormat:
      UpdatePromptSnippetPromptSnippetsEncodingFormat$outboundSchema.optional(),
    reasoningEffort:
      UpdatePromptSnippetPromptSnippetsReasoningEffort$outboundSchema
        .optional(),
  }).transform((v) => {
    return remap$(v, {
      encodingFormat: "encoding_format",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsModelParameters$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsModelParameters$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsModelParameters$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsModelParameters$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsModelParameters$Outbound` instead. */
  export type Outbound =
    UpdatePromptSnippetPromptSnippetsModelParameters$Outbound;
}

export function updatePromptSnippetPromptSnippetsModelParametersToJSON(
  updatePromptSnippetPromptSnippetsModelParameters:
    UpdatePromptSnippetPromptSnippetsModelParameters,
): string {
  return JSON.stringify(
    UpdatePromptSnippetPromptSnippetsModelParameters$outboundSchema.parse(
      updatePromptSnippetPromptSnippetsModelParameters,
    ),
  );
}

export function updatePromptSnippetPromptSnippetsModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetPromptSnippetsModelParameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetPromptSnippetsModelParameters$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippetPromptSnippetsModelParameters' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsProvider$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsProvider> = z
    .nativeEnum(UpdatePromptSnippetPromptSnippetsProvider);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsProvider$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsProvider> =
    UpdatePromptSnippetPromptSnippetsProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsProvider$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsProvider$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsProvider$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsProvider$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsProvider$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsRole$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsRole> = z.nativeEnum(
    UpdatePromptSnippetPromptSnippetsRole,
  );

/** @internal */
export const UpdatePromptSnippetPromptSnippetsRole$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsRole> =
    UpdatePromptSnippetPromptSnippetsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsRole$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsRole$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsRole$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsRole$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsRole$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippet2PromptSnippetsResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippet2PromptSnippetsResponse200Type> = z
    .nativeEnum(UpdatePromptSnippet2PromptSnippetsResponse200Type);

/** @internal */
export const UpdatePromptSnippet2PromptSnippetsResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippet2PromptSnippetsResponse200Type> =
    UpdatePromptSnippet2PromptSnippetsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippet2PromptSnippetsResponse200Type$ {
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippet2PromptSnippetsResponse200Type$inboundSchema;
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippet2PromptSnippetsResponse200Type$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippet2PromptSnippetsImageUrl$inboundSchema:
  z.ZodType<UpdatePromptSnippet2PromptSnippetsImageUrl, z.ZodTypeDef, unknown> =
    z.object({
      id: z.string().optional(),
      url: z.string(),
      detail: z.string().optional(),
    });

/** @internal */
export type UpdatePromptSnippet2PromptSnippetsImageUrl$Outbound = {
  id?: string | undefined;
  url: string;
  detail?: string | undefined;
};

/** @internal */
export const UpdatePromptSnippet2PromptSnippetsImageUrl$outboundSchema:
  z.ZodType<
    UpdatePromptSnippet2PromptSnippetsImageUrl$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippet2PromptSnippetsImageUrl
  > = z.object({
    id: z.string().optional(),
    url: z.string(),
    detail: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippet2PromptSnippetsImageUrl$ {
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsImageUrl$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippet2PromptSnippetsImageUrl$inboundSchema;
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsImageUrl$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippet2PromptSnippetsImageUrl$outboundSchema;
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsImageUrl$Outbound` instead. */
  export type Outbound = UpdatePromptSnippet2PromptSnippetsImageUrl$Outbound;
}

export function updatePromptSnippet2PromptSnippetsImageUrlToJSON(
  updatePromptSnippet2PromptSnippetsImageUrl:
    UpdatePromptSnippet2PromptSnippetsImageUrl,
): string {
  return JSON.stringify(
    UpdatePromptSnippet2PromptSnippetsImageUrl$outboundSchema.parse(
      updatePromptSnippet2PromptSnippetsImageUrl,
    ),
  );
}

export function updatePromptSnippet2PromptSnippetsImageUrlFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippet2PromptSnippetsImageUrl,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippet2PromptSnippetsImageUrl$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippet2PromptSnippetsImageUrl' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippet2PromptSnippets2$inboundSchema: z.ZodType<
  UpdatePromptSnippet2PromptSnippets2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: UpdatePromptSnippet2PromptSnippetsResponse200Type$inboundSchema,
  image_url: z.lazy(() =>
    UpdatePromptSnippet2PromptSnippetsImageUrl$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "image_url": "imageUrl",
  });
});

/** @internal */
export type UpdatePromptSnippet2PromptSnippets2$Outbound = {
  type: string;
  image_url: UpdatePromptSnippet2PromptSnippetsImageUrl$Outbound;
};

/** @internal */
export const UpdatePromptSnippet2PromptSnippets2$outboundSchema: z.ZodType<
  UpdatePromptSnippet2PromptSnippets2$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippet2PromptSnippets2
> = z.object({
  type: UpdatePromptSnippet2PromptSnippetsResponse200Type$outboundSchema,
  imageUrl: z.lazy(() =>
    UpdatePromptSnippet2PromptSnippetsImageUrl$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    imageUrl: "image_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippet2PromptSnippets2$ {
  /** @deprecated use `UpdatePromptSnippet2PromptSnippets2$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippet2PromptSnippets2$inboundSchema;
  /** @deprecated use `UpdatePromptSnippet2PromptSnippets2$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippet2PromptSnippets2$outboundSchema;
  /** @deprecated use `UpdatePromptSnippet2PromptSnippets2$Outbound` instead. */
  export type Outbound = UpdatePromptSnippet2PromptSnippets2$Outbound;
}

export function updatePromptSnippet2PromptSnippets2ToJSON(
  updatePromptSnippet2PromptSnippets2: UpdatePromptSnippet2PromptSnippets2,
): string {
  return JSON.stringify(
    UpdatePromptSnippet2PromptSnippets2$outboundSchema.parse(
      updatePromptSnippet2PromptSnippets2,
    ),
  );
}

export function updatePromptSnippet2PromptSnippets2FromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippet2PromptSnippets2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippet2PromptSnippets2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippet2PromptSnippets2' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippet2PromptSnippetsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippet2PromptSnippetsResponseType> = z
    .nativeEnum(UpdatePromptSnippet2PromptSnippetsResponseType);

/** @internal */
export const UpdatePromptSnippet2PromptSnippetsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippet2PromptSnippetsResponseType> =
    UpdatePromptSnippet2PromptSnippetsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippet2PromptSnippetsResponseType$ {
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippet2PromptSnippetsResponseType$inboundSchema;
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippet2PromptSnippetsResponseType$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippet2PromptSnippets1$inboundSchema: z.ZodType<
  UpdatePromptSnippet2PromptSnippets1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: UpdatePromptSnippet2PromptSnippetsResponseType$inboundSchema,
  text: z.string(),
});

/** @internal */
export type UpdatePromptSnippet2PromptSnippets1$Outbound = {
  type: string;
  text: string;
};

/** @internal */
export const UpdatePromptSnippet2PromptSnippets1$outboundSchema: z.ZodType<
  UpdatePromptSnippet2PromptSnippets1$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippet2PromptSnippets1
> = z.object({
  type: UpdatePromptSnippet2PromptSnippetsResponseType$outboundSchema,
  text: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippet2PromptSnippets1$ {
  /** @deprecated use `UpdatePromptSnippet2PromptSnippets1$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippet2PromptSnippets1$inboundSchema;
  /** @deprecated use `UpdatePromptSnippet2PromptSnippets1$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippet2PromptSnippets1$outboundSchema;
  /** @deprecated use `UpdatePromptSnippet2PromptSnippets1$Outbound` instead. */
  export type Outbound = UpdatePromptSnippet2PromptSnippets1$Outbound;
}

export function updatePromptSnippet2PromptSnippets1ToJSON(
  updatePromptSnippet2PromptSnippets1: UpdatePromptSnippet2PromptSnippets1,
): string {
  return JSON.stringify(
    UpdatePromptSnippet2PromptSnippets1$outboundSchema.parse(
      updatePromptSnippet2PromptSnippets1,
    ),
  );
}

export function updatePromptSnippet2PromptSnippets1FromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippet2PromptSnippets1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippet2PromptSnippets1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippet2PromptSnippets1' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetContentPromptSnippets2$inboundSchema: z.ZodType<
  UpdatePromptSnippetContentPromptSnippets2,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => UpdatePromptSnippet2PromptSnippets1$inboundSchema),
  z.lazy(() => UpdatePromptSnippet2PromptSnippets2$inboundSchema),
]);

/** @internal */
export type UpdatePromptSnippetContentPromptSnippets2$Outbound =
  | UpdatePromptSnippet2PromptSnippets1$Outbound
  | UpdatePromptSnippet2PromptSnippets2$Outbound;

/** @internal */
export const UpdatePromptSnippetContentPromptSnippets2$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetContentPromptSnippets2$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetContentPromptSnippets2
  > = z.union([
    z.lazy(() => UpdatePromptSnippet2PromptSnippets1$outboundSchema),
    z.lazy(() => UpdatePromptSnippet2PromptSnippets2$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetContentPromptSnippets2$ {
  /** @deprecated use `UpdatePromptSnippetContentPromptSnippets2$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetContentPromptSnippets2$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetContentPromptSnippets2$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetContentPromptSnippets2$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetContentPromptSnippets2$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetContentPromptSnippets2$Outbound;
}

export function updatePromptSnippetContentPromptSnippets2ToJSON(
  updatePromptSnippetContentPromptSnippets2:
    UpdatePromptSnippetContentPromptSnippets2,
): string {
  return JSON.stringify(
    UpdatePromptSnippetContentPromptSnippets2$outboundSchema.parse(
      updatePromptSnippetContentPromptSnippets2,
    ),
  );
}

export function updatePromptSnippetContentPromptSnippets2FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetContentPromptSnippets2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetContentPromptSnippets2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippetContentPromptSnippets2' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsContent$inboundSchema: z.ZodType<
  UpdatePromptSnippetPromptSnippetsContent,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => UpdatePromptSnippet2PromptSnippets1$inboundSchema),
    z.lazy(() => UpdatePromptSnippet2PromptSnippets2$inboundSchema),
  ])),
]);

/** @internal */
export type UpdatePromptSnippetPromptSnippetsContent$Outbound =
  | string
  | Array<
    | UpdatePromptSnippet2PromptSnippets1$Outbound
    | UpdatePromptSnippet2PromptSnippets2$Outbound
  >;

/** @internal */
export const UpdatePromptSnippetPromptSnippetsContent$outboundSchema: z.ZodType<
  UpdatePromptSnippetPromptSnippetsContent$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippetPromptSnippetsContent
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => UpdatePromptSnippet2PromptSnippets1$outboundSchema),
    z.lazy(() => UpdatePromptSnippet2PromptSnippets2$outboundSchema),
  ])),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsContent$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsContent$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsContent$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsContent$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsContent$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsContent$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetPromptSnippetsContent$Outbound;
}

export function updatePromptSnippetPromptSnippetsContentToJSON(
  updatePromptSnippetPromptSnippetsContent:
    UpdatePromptSnippetPromptSnippetsContent,
): string {
  return JSON.stringify(
    UpdatePromptSnippetPromptSnippetsContent$outboundSchema.parse(
      updatePromptSnippetPromptSnippetsContent,
    ),
  );
}

export function updatePromptSnippetPromptSnippetsContentFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetPromptSnippetsContent,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetPromptSnippetsContent$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippetPromptSnippetsContent' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsResponseType> = z
    .nativeEnum(UpdatePromptSnippetPromptSnippetsResponseType);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsResponseType> =
    UpdatePromptSnippetPromptSnippetsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponseType$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseType$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseType$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsFunction$inboundSchema: z.ZodType<
  UpdatePromptSnippetPromptSnippetsFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/** @internal */
export type UpdatePromptSnippetPromptSnippetsFunction$Outbound = {
  name: string;
  arguments: string;
};

/** @internal */
export const UpdatePromptSnippetPromptSnippetsFunction$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsFunction$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetPromptSnippetsFunction
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsFunction$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsFunction$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsFunction$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsFunction$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsFunction$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsFunction$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetPromptSnippetsFunction$Outbound;
}

export function updatePromptSnippetPromptSnippetsFunctionToJSON(
  updatePromptSnippetPromptSnippetsFunction:
    UpdatePromptSnippetPromptSnippetsFunction,
): string {
  return JSON.stringify(
    UpdatePromptSnippetPromptSnippetsFunction$outboundSchema.parse(
      updatePromptSnippetPromptSnippetsFunction,
    ),
  );
}

export function updatePromptSnippetPromptSnippetsFunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetPromptSnippetsFunction,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetPromptSnippetsFunction$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippetPromptSnippetsFunction' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsToolCalls$inboundSchema:
  z.ZodType<UpdatePromptSnippetPromptSnippetsToolCalls, z.ZodTypeDef, unknown> =
    z.object({
      id: z.string().optional(),
      index: z.number().optional(),
      type: UpdatePromptSnippetPromptSnippetsResponseType$inboundSchema,
      function: z.lazy(() =>
        UpdatePromptSnippetPromptSnippetsFunction$inboundSchema
      ),
    });

/** @internal */
export type UpdatePromptSnippetPromptSnippetsToolCalls$Outbound = {
  id?: string | undefined;
  index?: number | undefined;
  type: string;
  function: UpdatePromptSnippetPromptSnippetsFunction$Outbound;
};

/** @internal */
export const UpdatePromptSnippetPromptSnippetsToolCalls$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsToolCalls$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetPromptSnippetsToolCalls
  > = z.object({
    id: z.string().optional(),
    index: z.number().optional(),
    type: UpdatePromptSnippetPromptSnippetsResponseType$outboundSchema,
    function: z.lazy(() =>
      UpdatePromptSnippetPromptSnippetsFunction$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsToolCalls$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsToolCalls$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsToolCalls$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsToolCalls$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsToolCalls$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsToolCalls$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetPromptSnippetsToolCalls$Outbound;
}

export function updatePromptSnippetPromptSnippetsToolCallsToJSON(
  updatePromptSnippetPromptSnippetsToolCalls:
    UpdatePromptSnippetPromptSnippetsToolCalls,
): string {
  return JSON.stringify(
    UpdatePromptSnippetPromptSnippetsToolCalls$outboundSchema.parse(
      updatePromptSnippetPromptSnippetsToolCalls,
    ),
  );
}

export function updatePromptSnippetPromptSnippetsToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetPromptSnippetsToolCalls,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetPromptSnippetsToolCalls$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippetPromptSnippetsToolCalls' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsMessages$inboundSchema: z.ZodType<
  UpdatePromptSnippetPromptSnippetsMessages,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: UpdatePromptSnippetPromptSnippetsRole$inboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => UpdatePromptSnippet2PromptSnippets1$inboundSchema),
      z.lazy(() => UpdatePromptSnippet2PromptSnippets2$inboundSchema),
    ])),
  ]),
  tool_calls: z.array(
    z.lazy(() => UpdatePromptSnippetPromptSnippetsToolCalls$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "tool_calls": "toolCalls",
  });
});

/** @internal */
export type UpdatePromptSnippetPromptSnippetsMessages$Outbound = {
  role: string;
  content:
    | string
    | Array<
      | UpdatePromptSnippet2PromptSnippets1$Outbound
      | UpdatePromptSnippet2PromptSnippets2$Outbound
    >;
  tool_calls?:
    | Array<UpdatePromptSnippetPromptSnippetsToolCalls$Outbound>
    | undefined;
};

/** @internal */
export const UpdatePromptSnippetPromptSnippetsMessages$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsMessages$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetPromptSnippetsMessages
  > = z.object({
    role: UpdatePromptSnippetPromptSnippetsRole$outboundSchema,
    content: z.union([
      z.string(),
      z.array(z.union([
        z.lazy(() => UpdatePromptSnippet2PromptSnippets1$outboundSchema),
        z.lazy(() => UpdatePromptSnippet2PromptSnippets2$outboundSchema),
      ])),
    ]),
    toolCalls: z.array(
      z.lazy(() => UpdatePromptSnippetPromptSnippetsToolCalls$outboundSchema),
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      toolCalls: "tool_calls",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsMessages$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsMessages$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsMessages$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsMessages$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsMessages$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsMessages$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetPromptSnippetsMessages$Outbound;
}

export function updatePromptSnippetPromptSnippetsMessagesToJSON(
  updatePromptSnippetPromptSnippetsMessages:
    UpdatePromptSnippetPromptSnippetsMessages,
): string {
  return JSON.stringify(
    UpdatePromptSnippetPromptSnippetsMessages$outboundSchema.parse(
      updatePromptSnippetPromptSnippetsMessages,
    ),
  );
}

export function updatePromptSnippetPromptSnippetsMessagesFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetPromptSnippetsMessages,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetPromptSnippetsMessages$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippetPromptSnippetsMessages' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsPromptConfig$inboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsPromptConfig,
    z.ZodTypeDef,
    unknown
  > = z.object({
    stream: z.boolean().optional(),
    model: z.string().optional(),
    model_db_id: z.string().optional(),
    model_type: UpdatePromptSnippetPromptSnippetsModelType$inboundSchema
      .optional(),
    model_parameters: z.lazy(() =>
      UpdatePromptSnippetPromptSnippetsModelParameters$inboundSchema
    ).optional(),
    provider: UpdatePromptSnippetPromptSnippetsProvider$inboundSchema
      .optional(),
    integration_id: z.nullable(z.string()).optional(),
    version: z.string().optional(),
    messages: z.array(
      z.lazy(() => UpdatePromptSnippetPromptSnippetsMessages$inboundSchema),
    ),
  }).transform((v) => {
    return remap$(v, {
      "model_db_id": "modelDbId",
      "model_type": "modelType",
      "model_parameters": "modelParameters",
      "integration_id": "integrationId",
    });
  });

/** @internal */
export type UpdatePromptSnippetPromptSnippetsPromptConfig$Outbound = {
  stream?: boolean | undefined;
  model?: string | undefined;
  model_db_id?: string | undefined;
  model_type?: string | undefined;
  model_parameters?:
    | UpdatePromptSnippetPromptSnippetsModelParameters$Outbound
    | undefined;
  provider?: string | undefined;
  integration_id?: string | null | undefined;
  version?: string | undefined;
  messages: Array<UpdatePromptSnippetPromptSnippetsMessages$Outbound>;
};

/** @internal */
export const UpdatePromptSnippetPromptSnippetsPromptConfig$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsPromptConfig$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetPromptSnippetsPromptConfig
  > = z.object({
    stream: z.boolean().optional(),
    model: z.string().optional(),
    modelDbId: z.string().optional(),
    modelType: UpdatePromptSnippetPromptSnippetsModelType$outboundSchema
      .optional(),
    modelParameters: z.lazy(() =>
      UpdatePromptSnippetPromptSnippetsModelParameters$outboundSchema
    ).optional(),
    provider: UpdatePromptSnippetPromptSnippetsProvider$outboundSchema
      .optional(),
    integrationId: z.nullable(z.string()).optional(),
    version: z.string().optional(),
    messages: z.array(
      z.lazy(() => UpdatePromptSnippetPromptSnippetsMessages$outboundSchema),
    ),
  }).transform((v) => {
    return remap$(v, {
      modelDbId: "model_db_id",
      modelType: "model_type",
      modelParameters: "model_parameters",
      integrationId: "integration_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsPromptConfig$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsPromptConfig$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsPromptConfig$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsPromptConfig$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsPromptConfig$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsPromptConfig$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetPromptSnippetsPromptConfig$Outbound;
}

export function updatePromptSnippetPromptSnippetsPromptConfigToJSON(
  updatePromptSnippetPromptSnippetsPromptConfig:
    UpdatePromptSnippetPromptSnippetsPromptConfig,
): string {
  return JSON.stringify(
    UpdatePromptSnippetPromptSnippetsPromptConfig$outboundSchema.parse(
      updatePromptSnippetPromptSnippetsPromptConfig,
    ),
  );
}

export function updatePromptSnippetPromptSnippetsPromptConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetPromptSnippetsPromptConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetPromptSnippetsPromptConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippetPromptSnippetsPromptConfig' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsUseCases$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsUseCases> = z
    .nativeEnum(UpdatePromptSnippetPromptSnippetsUseCases);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsUseCases$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsUseCases> =
    UpdatePromptSnippetPromptSnippetsUseCases$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsUseCases$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsUseCases$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsUseCases$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsUseCases$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsUseCases$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsLanguage$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsLanguage> = z
    .nativeEnum(UpdatePromptSnippetPromptSnippetsLanguage);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsLanguage$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsLanguage> =
    UpdatePromptSnippetPromptSnippetsLanguage$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsLanguage$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsLanguage$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsLanguage$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsLanguage$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsLanguage$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsMetadata$inboundSchema: z.ZodType<
  UpdatePromptSnippetPromptSnippetsMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({
  use_cases: z.array(UpdatePromptSnippetPromptSnippetsUseCases$inboundSchema)
    .optional(),
  language: UpdatePromptSnippetPromptSnippetsLanguage$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "use_cases": "useCases",
  });
});

/** @internal */
export type UpdatePromptSnippetPromptSnippetsMetadata$Outbound = {
  use_cases?: Array<string> | undefined;
  language?: string | undefined;
};

/** @internal */
export const UpdatePromptSnippetPromptSnippetsMetadata$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsMetadata$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetPromptSnippetsMetadata
  > = z.object({
    useCases: z.array(UpdatePromptSnippetPromptSnippetsUseCases$outboundSchema)
      .optional(),
    language: UpdatePromptSnippetPromptSnippetsLanguage$outboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      useCases: "use_cases",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsMetadata$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsMetadata$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsMetadata$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsMetadata$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsMetadata$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsMetadata$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetPromptSnippetsMetadata$Outbound;
}

export function updatePromptSnippetPromptSnippetsMetadataToJSON(
  updatePromptSnippetPromptSnippetsMetadata:
    UpdatePromptSnippetPromptSnippetsMetadata,
): string {
  return JSON.stringify(
    UpdatePromptSnippetPromptSnippetsMetadata$outboundSchema.parse(
      updatePromptSnippetPromptSnippetsMetadata,
    ),
  );
}

export function updatePromptSnippetPromptSnippetsMetadataFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetPromptSnippetsMetadata,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetPromptSnippetsMetadata$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippetPromptSnippetsMetadata' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsType$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsType> = z.nativeEnum(
    UpdatePromptSnippetPromptSnippetsType,
  );

/** @internal */
export const UpdatePromptSnippetPromptSnippetsType$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsType> =
    UpdatePromptSnippetPromptSnippetsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsType$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsType$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsType$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsType$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsType$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseModelType$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsResponseModelType> = z
    .nativeEnum(UpdatePromptSnippetPromptSnippetsResponseModelType);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseModelType$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsResponseModelType> =
    UpdatePromptSnippetPromptSnippetsResponseModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponseModelType$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseModelType$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseModelType$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseModelType$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseModelType$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponse200Format$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsResponse200Format> = z
    .nativeEnum(UpdatePromptSnippetPromptSnippetsResponse200Format);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponse200Format$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsResponse200Format> =
    UpdatePromptSnippetPromptSnippetsResponse200Format$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponse200Format$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponse200Format$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponse200Format$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponse200Format$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponse200Format$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseQuality$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsResponseQuality> = z
    .nativeEnum(UpdatePromptSnippetPromptSnippetsResponseQuality);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseQuality$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsResponseQuality> =
    UpdatePromptSnippetPromptSnippetsResponseQuality$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponseQuality$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseQuality$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseQuality$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseQuality$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseQuality$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONResponseBodyType
  > =
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippetsResponse2$inboundSchema:
  z.ZodType<
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONResponseBodyType$inboundSchema,
  });

/** @internal */
export type UpdatePromptSnippetResponseFormatPromptSnippetsResponse2$Outbound =
  {
    type: string;
  };

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippetsResponse2$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse2$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse2
  > = z.object({
    type:
      UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONResponseBodyType$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetResponseFormatPromptSnippetsResponse2$ {
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippetsResponse2$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse2$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippetsResponse2$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse2$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippetsResponse2$Outbound` instead. */
  export type Outbound =
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse2$Outbound;
}

export function updatePromptSnippetResponseFormatPromptSnippetsResponse2ToJSON(
  updatePromptSnippetResponseFormatPromptSnippetsResponse2:
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse2,
): string {
  return JSON.stringify(
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse2$outboundSchema
      .parse(updatePromptSnippetResponseFormatPromptSnippetsResponse2),
  );
}

export function updatePromptSnippetResponseFormatPromptSnippetsResponse2FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetResponseFormatPromptSnippetsResponse2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetResponseFormatPromptSnippetsResponse2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetResponseFormatPromptSnippetsResponse2' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONType
  > = z.nativeEnum(
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONType,
  );

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONType
  > =
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONType$ {
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema$inboundSchema:
  z.ZodType<
    UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/** @internal */
export type UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema$Outbound =
  {
    name: string;
    strict: boolean;
    schema: { [k: string]: any };
  };

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema$ {
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema$Outbound` instead. */
  export type Outbound =
    UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema$Outbound;
}

export function updatePromptSnippetResponseFormatPromptSnippetsJsonSchemaToJSON(
  updatePromptSnippetResponseFormatPromptSnippetsJsonSchema:
    UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema,
): string {
  return JSON.stringify(
    UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema$outboundSchema
      .parse(updatePromptSnippetResponseFormatPromptSnippetsJsonSchema),
  );
}

export function updatePromptSnippetResponseFormatPromptSnippetsJsonSchemaFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippetsResponse1$inboundSchema:
  z.ZodType<
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONType$inboundSchema,
    json_schema: z.lazy(() =>
      UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "json_schema": "jsonSchema",
    });
  });

/** @internal */
export type UpdatePromptSnippetResponseFormatPromptSnippetsResponse1$Outbound =
  {
    type: string;
    json_schema:
      UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema$Outbound;
  };

/** @internal */
export const UpdatePromptSnippetResponseFormatPromptSnippetsResponse1$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse1$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse1
  > = z.object({
    type:
      UpdatePromptSnippetResponseFormatPromptSnippetsResponse200ApplicationJSONType$outboundSchema,
    jsonSchema: z.lazy(() =>
      UpdatePromptSnippetResponseFormatPromptSnippetsJsonSchema$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      jsonSchema: "json_schema",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetResponseFormatPromptSnippetsResponse1$ {
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippetsResponse1$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse1$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippetsResponse1$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse1$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseFormatPromptSnippetsResponse1$Outbound` instead. */
  export type Outbound =
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse1$Outbound;
}

export function updatePromptSnippetResponseFormatPromptSnippetsResponse1ToJSON(
  updatePromptSnippetResponseFormatPromptSnippetsResponse1:
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse1,
): string {
  return JSON.stringify(
    UpdatePromptSnippetResponseFormatPromptSnippetsResponse1$outboundSchema
      .parse(updatePromptSnippetResponseFormatPromptSnippetsResponse1),
  );
}

export function updatePromptSnippetResponseFormatPromptSnippetsResponse1FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetResponseFormatPromptSnippetsResponse1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetResponseFormatPromptSnippetsResponse1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetResponseFormatPromptSnippetsResponse1' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseResponseFormat$inboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsResponseResponseFormat,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      UpdatePromptSnippetResponseFormatPromptSnippetsResponse2$inboundSchema
    ),
    z.lazy(() =>
      UpdatePromptSnippetResponseFormatPromptSnippetsResponse1$inboundSchema
    ),
  ]);

/** @internal */
export type UpdatePromptSnippetPromptSnippetsResponseResponseFormat$Outbound =
  | UpdatePromptSnippetResponseFormatPromptSnippetsResponse2$Outbound
  | UpdatePromptSnippetResponseFormatPromptSnippetsResponse1$Outbound;

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseResponseFormat$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsResponseResponseFormat$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetPromptSnippetsResponseResponseFormat
  > = z.union([
    z.lazy(() =>
      UpdatePromptSnippetResponseFormatPromptSnippetsResponse2$outboundSchema
    ),
    z.lazy(() =>
      UpdatePromptSnippetResponseFormatPromptSnippetsResponse1$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponseResponseFormat$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseResponseFormat$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseResponseFormat$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseResponseFormat$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseResponseFormat$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseResponseFormat$Outbound` instead. */
  export type Outbound =
    UpdatePromptSnippetPromptSnippetsResponseResponseFormat$Outbound;
}

export function updatePromptSnippetPromptSnippetsResponseResponseFormatToJSON(
  updatePromptSnippetPromptSnippetsResponseResponseFormat:
    UpdatePromptSnippetPromptSnippetsResponseResponseFormat,
): string {
  return JSON.stringify(
    UpdatePromptSnippetPromptSnippetsResponseResponseFormat$outboundSchema
      .parse(updatePromptSnippetPromptSnippetsResponseResponseFormat),
  );
}

export function updatePromptSnippetPromptSnippetsResponseResponseFormatFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetPromptSnippetsResponseResponseFormat,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetPromptSnippetsResponseResponseFormat$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetPromptSnippetsResponseResponseFormat' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponsePhotoRealVersion$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdatePromptSnippetPromptSnippetsResponsePhotoRealVersion
  > = z.nativeEnum(UpdatePromptSnippetPromptSnippetsResponsePhotoRealVersion);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponsePhotoRealVersion$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdatePromptSnippetPromptSnippetsResponsePhotoRealVersion
  > = UpdatePromptSnippetPromptSnippetsResponsePhotoRealVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponsePhotoRealVersion$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponsePhotoRealVersion$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponsePhotoRealVersion$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponsePhotoRealVersion$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponsePhotoRealVersion$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseEncodingFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdatePromptSnippetPromptSnippetsResponseEncodingFormat
  > = z.nativeEnum(UpdatePromptSnippetPromptSnippetsResponseEncodingFormat);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseEncodingFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdatePromptSnippetPromptSnippetsResponseEncodingFormat
  > = UpdatePromptSnippetPromptSnippetsResponseEncodingFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponseEncodingFormat$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseEncodingFormat$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseEncodingFormat$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseEncodingFormat$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseEncodingFormat$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseReasoningEffort$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdatePromptSnippetPromptSnippetsResponseReasoningEffort
  > = z.nativeEnum(UpdatePromptSnippetPromptSnippetsResponseReasoningEffort);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseReasoningEffort$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdatePromptSnippetPromptSnippetsResponseReasoningEffort
  > = UpdatePromptSnippetPromptSnippetsResponseReasoningEffort$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponseReasoningEffort$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseReasoningEffort$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseReasoningEffort$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseReasoningEffort$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseReasoningEffort$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseModelParameters$inboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsResponseModelParameters,
    z.ZodTypeDef,
    unknown
  > = z.object({
    temperature: z.number().optional(),
    maxTokens: z.number().optional(),
    topK: z.number().optional(),
    topP: z.number().optional(),
    frequencyPenalty: z.number().optional(),
    presencePenalty: z.number().optional(),
    numImages: z.number().optional(),
    seed: z.number().optional(),
    format: UpdatePromptSnippetPromptSnippetsResponse200Format$inboundSchema
      .optional(),
    dimensions: z.string().optional(),
    quality: UpdatePromptSnippetPromptSnippetsResponseQuality$inboundSchema
      .optional(),
    style: z.string().optional(),
    responseFormat: z.nullable(
      z.union([
        z.lazy(() =>
          UpdatePromptSnippetResponseFormatPromptSnippetsResponse2$inboundSchema
        ),
        z.lazy(() =>
          UpdatePromptSnippetResponseFormatPromptSnippetsResponse1$inboundSchema
        ),
      ]),
    ).optional(),
    photoRealVersion:
      UpdatePromptSnippetPromptSnippetsResponsePhotoRealVersion$inboundSchema
        .optional(),
    encoding_format:
      UpdatePromptSnippetPromptSnippetsResponseEncodingFormat$inboundSchema
        .optional(),
    reasoningEffort:
      UpdatePromptSnippetPromptSnippetsResponseReasoningEffort$inboundSchema
        .optional(),
  }).transform((v) => {
    return remap$(v, {
      "encoding_format": "encodingFormat",
    });
  });

/** @internal */
export type UpdatePromptSnippetPromptSnippetsResponseModelParameters$Outbound =
  {
    temperature?: number | undefined;
    maxTokens?: number | undefined;
    topK?: number | undefined;
    topP?: number | undefined;
    frequencyPenalty?: number | undefined;
    presencePenalty?: number | undefined;
    numImages?: number | undefined;
    seed?: number | undefined;
    format?: string | undefined;
    dimensions?: string | undefined;
    quality?: string | undefined;
    style?: string | undefined;
    responseFormat?:
      | UpdatePromptSnippetResponseFormatPromptSnippetsResponse2$Outbound
      | UpdatePromptSnippetResponseFormatPromptSnippetsResponse1$Outbound
      | null
      | undefined;
    photoRealVersion?: string | undefined;
    encoding_format?: string | undefined;
    reasoningEffort?: string | undefined;
  };

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseModelParameters$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsResponseModelParameters$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetPromptSnippetsResponseModelParameters
  > = z.object({
    temperature: z.number().optional(),
    maxTokens: z.number().optional(),
    topK: z.number().optional(),
    topP: z.number().optional(),
    frequencyPenalty: z.number().optional(),
    presencePenalty: z.number().optional(),
    numImages: z.number().optional(),
    seed: z.number().optional(),
    format: UpdatePromptSnippetPromptSnippetsResponse200Format$outboundSchema
      .optional(),
    dimensions: z.string().optional(),
    quality: UpdatePromptSnippetPromptSnippetsResponseQuality$outboundSchema
      .optional(),
    style: z.string().optional(),
    responseFormat: z.nullable(
      z.union([
        z.lazy(() =>
          UpdatePromptSnippetResponseFormatPromptSnippetsResponse2$outboundSchema
        ),
        z.lazy(() =>
          UpdatePromptSnippetResponseFormatPromptSnippetsResponse1$outboundSchema
        ),
      ]),
    ).optional(),
    photoRealVersion:
      UpdatePromptSnippetPromptSnippetsResponsePhotoRealVersion$outboundSchema
        .optional(),
    encodingFormat:
      UpdatePromptSnippetPromptSnippetsResponseEncodingFormat$outboundSchema
        .optional(),
    reasoningEffort:
      UpdatePromptSnippetPromptSnippetsResponseReasoningEffort$outboundSchema
        .optional(),
  }).transform((v) => {
    return remap$(v, {
      encodingFormat: "encoding_format",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponseModelParameters$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseModelParameters$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseModelParameters$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseModelParameters$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseModelParameters$Outbound` instead. */
  export type Outbound =
    UpdatePromptSnippetPromptSnippetsResponseModelParameters$Outbound;
}

export function updatePromptSnippetPromptSnippetsResponseModelParametersToJSON(
  updatePromptSnippetPromptSnippetsResponseModelParameters:
    UpdatePromptSnippetPromptSnippetsResponseModelParameters,
): string {
  return JSON.stringify(
    UpdatePromptSnippetPromptSnippetsResponseModelParameters$outboundSchema
      .parse(updatePromptSnippetPromptSnippetsResponseModelParameters),
  );
}

export function updatePromptSnippetPromptSnippetsResponseModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetPromptSnippetsResponseModelParameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetPromptSnippetsResponseModelParameters$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetPromptSnippetsResponseModelParameters' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseProvider$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsResponseProvider> = z
    .nativeEnum(UpdatePromptSnippetPromptSnippetsResponseProvider);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseProvider$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsResponseProvider> =
    UpdatePromptSnippetPromptSnippetsResponseProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponseProvider$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseProvider$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseProvider$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseProvider$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseProvider$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseRole$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsResponseRole> = z
    .nativeEnum(UpdatePromptSnippetPromptSnippetsResponseRole);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseRole$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsResponseRole> =
    UpdatePromptSnippetPromptSnippetsResponseRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponseRole$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseRole$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseRole$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseRole$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseRole$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONResponseBodyType
  > =
    UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippet2PromptSnippetsResponseImageUrl$inboundSchema:
  z.ZodType<
    UpdatePromptSnippet2PromptSnippetsResponseImageUrl,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    url: z.string(),
    detail: z.string().optional(),
  });

/** @internal */
export type UpdatePromptSnippet2PromptSnippetsResponseImageUrl$Outbound = {
  id?: string | undefined;
  url: string;
  detail?: string | undefined;
};

/** @internal */
export const UpdatePromptSnippet2PromptSnippetsResponseImageUrl$outboundSchema:
  z.ZodType<
    UpdatePromptSnippet2PromptSnippetsResponseImageUrl$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippet2PromptSnippetsResponseImageUrl
  > = z.object({
    id: z.string().optional(),
    url: z.string(),
    detail: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippet2PromptSnippetsResponseImageUrl$ {
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsResponseImageUrl$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippet2PromptSnippetsResponseImageUrl$inboundSchema;
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsResponseImageUrl$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippet2PromptSnippetsResponseImageUrl$outboundSchema;
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsResponseImageUrl$Outbound` instead. */
  export type Outbound =
    UpdatePromptSnippet2PromptSnippetsResponseImageUrl$Outbound;
}

export function updatePromptSnippet2PromptSnippetsResponseImageUrlToJSON(
  updatePromptSnippet2PromptSnippetsResponseImageUrl:
    UpdatePromptSnippet2PromptSnippetsResponseImageUrl,
): string {
  return JSON.stringify(
    UpdatePromptSnippet2PromptSnippetsResponseImageUrl$outboundSchema.parse(
      updatePromptSnippet2PromptSnippetsResponseImageUrl,
    ),
  );
}

export function updatePromptSnippet2PromptSnippetsResponseImageUrlFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippet2PromptSnippetsResponseImageUrl,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippet2PromptSnippetsResponseImageUrl$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippet2PromptSnippetsResponseImageUrl' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippet2PromptSnippetsResponse2$inboundSchema:
  z.ZodType<
    UpdatePromptSnippet2PromptSnippetsResponse2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONResponseBodyType$inboundSchema,
    image_url: z.lazy(() =>
      UpdatePromptSnippet2PromptSnippetsResponseImageUrl$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "image_url": "imageUrl",
    });
  });

/** @internal */
export type UpdatePromptSnippet2PromptSnippetsResponse2$Outbound = {
  type: string;
  image_url: UpdatePromptSnippet2PromptSnippetsResponseImageUrl$Outbound;
};

/** @internal */
export const UpdatePromptSnippet2PromptSnippetsResponse2$outboundSchema:
  z.ZodType<
    UpdatePromptSnippet2PromptSnippetsResponse2$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippet2PromptSnippetsResponse2
  > = z.object({
    type:
      UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONResponseBodyType$outboundSchema,
    imageUrl: z.lazy(() =>
      UpdatePromptSnippet2PromptSnippetsResponseImageUrl$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      imageUrl: "image_url",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippet2PromptSnippetsResponse2$ {
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsResponse2$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippet2PromptSnippetsResponse2$inboundSchema;
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsResponse2$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippet2PromptSnippetsResponse2$outboundSchema;
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsResponse2$Outbound` instead. */
  export type Outbound = UpdatePromptSnippet2PromptSnippetsResponse2$Outbound;
}

export function updatePromptSnippet2PromptSnippetsResponse2ToJSON(
  updatePromptSnippet2PromptSnippetsResponse2:
    UpdatePromptSnippet2PromptSnippetsResponse2,
): string {
  return JSON.stringify(
    UpdatePromptSnippet2PromptSnippetsResponse2$outboundSchema.parse(
      updatePromptSnippet2PromptSnippetsResponse2,
    ),
  );
}

export function updatePromptSnippet2PromptSnippetsResponse2FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippet2PromptSnippetsResponse2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippet2PromptSnippetsResponse2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippet2PromptSnippetsResponse2' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONType
  > = z.nativeEnum(
    UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONType,
  );

/** @internal */
export const UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONType
  > =
    UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONType$ {
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippet2PromptSnippetsResponse1$inboundSchema:
  z.ZodType<
    UpdatePromptSnippet2PromptSnippetsResponse1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONType$inboundSchema,
    text: z.string(),
  });

/** @internal */
export type UpdatePromptSnippet2PromptSnippetsResponse1$Outbound = {
  type: string;
  text: string;
};

/** @internal */
export const UpdatePromptSnippet2PromptSnippetsResponse1$outboundSchema:
  z.ZodType<
    UpdatePromptSnippet2PromptSnippetsResponse1$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippet2PromptSnippetsResponse1
  > = z.object({
    type:
      UpdatePromptSnippet2PromptSnippetsResponse200ApplicationJSONType$outboundSchema,
    text: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippet2PromptSnippetsResponse1$ {
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsResponse1$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippet2PromptSnippetsResponse1$inboundSchema;
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsResponse1$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippet2PromptSnippetsResponse1$outboundSchema;
  /** @deprecated use `UpdatePromptSnippet2PromptSnippetsResponse1$Outbound` instead. */
  export type Outbound = UpdatePromptSnippet2PromptSnippetsResponse1$Outbound;
}

export function updatePromptSnippet2PromptSnippetsResponse1ToJSON(
  updatePromptSnippet2PromptSnippetsResponse1:
    UpdatePromptSnippet2PromptSnippetsResponse1,
): string {
  return JSON.stringify(
    UpdatePromptSnippet2PromptSnippetsResponse1$outboundSchema.parse(
      updatePromptSnippet2PromptSnippetsResponse1,
    ),
  );
}

export function updatePromptSnippet2PromptSnippetsResponse1FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippet2PromptSnippetsResponse1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippet2PromptSnippetsResponse1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippet2PromptSnippetsResponse1' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetContentPromptSnippetsResponse2$inboundSchema:
  z.ZodType<
    UpdatePromptSnippetContentPromptSnippetsResponse2,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => UpdatePromptSnippet2PromptSnippetsResponse1$inboundSchema),
    z.lazy(() => UpdatePromptSnippet2PromptSnippetsResponse2$inboundSchema),
  ]);

/** @internal */
export type UpdatePromptSnippetContentPromptSnippetsResponse2$Outbound =
  | UpdatePromptSnippet2PromptSnippetsResponse1$Outbound
  | UpdatePromptSnippet2PromptSnippetsResponse2$Outbound;

/** @internal */
export const UpdatePromptSnippetContentPromptSnippetsResponse2$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetContentPromptSnippetsResponse2$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetContentPromptSnippetsResponse2
  > = z.union([
    z.lazy(() => UpdatePromptSnippet2PromptSnippetsResponse1$outboundSchema),
    z.lazy(() => UpdatePromptSnippet2PromptSnippetsResponse2$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetContentPromptSnippetsResponse2$ {
  /** @deprecated use `UpdatePromptSnippetContentPromptSnippetsResponse2$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetContentPromptSnippetsResponse2$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetContentPromptSnippetsResponse2$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetContentPromptSnippetsResponse2$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetContentPromptSnippetsResponse2$Outbound` instead. */
  export type Outbound =
    UpdatePromptSnippetContentPromptSnippetsResponse2$Outbound;
}

export function updatePromptSnippetContentPromptSnippetsResponse2ToJSON(
  updatePromptSnippetContentPromptSnippetsResponse2:
    UpdatePromptSnippetContentPromptSnippetsResponse2,
): string {
  return JSON.stringify(
    UpdatePromptSnippetContentPromptSnippetsResponse2$outboundSchema.parse(
      updatePromptSnippetContentPromptSnippetsResponse2,
    ),
  );
}

export function updatePromptSnippetContentPromptSnippetsResponse2FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetContentPromptSnippetsResponse2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetContentPromptSnippetsResponse2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippetContentPromptSnippetsResponse2' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseContent$inboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsResponseContent,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => UpdatePromptSnippet2PromptSnippetsResponse1$inboundSchema),
      z.lazy(() => UpdatePromptSnippet2PromptSnippetsResponse2$inboundSchema),
    ])),
  ]);

/** @internal */
export type UpdatePromptSnippetPromptSnippetsResponseContent$Outbound =
  | string
  | Array<
    | UpdatePromptSnippet2PromptSnippetsResponse1$Outbound
    | UpdatePromptSnippet2PromptSnippetsResponse2$Outbound
  >;

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseContent$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsResponseContent$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetPromptSnippetsResponseContent
  > = z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => UpdatePromptSnippet2PromptSnippetsResponse1$outboundSchema),
      z.lazy(() =>
        UpdatePromptSnippet2PromptSnippetsResponse2$outboundSchema
      ),
    ])),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponseContent$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseContent$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseContent$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseContent$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseContent$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseContent$Outbound` instead. */
  export type Outbound =
    UpdatePromptSnippetPromptSnippetsResponseContent$Outbound;
}

export function updatePromptSnippetPromptSnippetsResponseContentToJSON(
  updatePromptSnippetPromptSnippetsResponseContent:
    UpdatePromptSnippetPromptSnippetsResponseContent,
): string {
  return JSON.stringify(
    UpdatePromptSnippetPromptSnippetsResponseContent$outboundSchema.parse(
      updatePromptSnippetPromptSnippetsResponseContent,
    ),
  );
}

export function updatePromptSnippetPromptSnippetsResponseContentFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetPromptSnippetsResponseContent,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetPromptSnippetsResponseContent$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippetPromptSnippetsResponseContent' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsResponse200Type> = z
    .nativeEnum(UpdatePromptSnippetPromptSnippetsResponse200Type);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsResponse200Type> =
    UpdatePromptSnippetPromptSnippetsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponse200Type$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponse200Type$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponse200Type$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseFunction$inboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsResponseFunction,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/** @internal */
export type UpdatePromptSnippetPromptSnippetsResponseFunction$Outbound = {
  name: string;
  arguments: string;
};

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseFunction$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsResponseFunction$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetPromptSnippetsResponseFunction
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponseFunction$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseFunction$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseFunction$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseFunction$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseFunction$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseFunction$Outbound` instead. */
  export type Outbound =
    UpdatePromptSnippetPromptSnippetsResponseFunction$Outbound;
}

export function updatePromptSnippetPromptSnippetsResponseFunctionToJSON(
  updatePromptSnippetPromptSnippetsResponseFunction:
    UpdatePromptSnippetPromptSnippetsResponseFunction,
): string {
  return JSON.stringify(
    UpdatePromptSnippetPromptSnippetsResponseFunction$outboundSchema.parse(
      updatePromptSnippetPromptSnippetsResponseFunction,
    ),
  );
}

export function updatePromptSnippetPromptSnippetsResponseFunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetPromptSnippetsResponseFunction,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetPromptSnippetsResponseFunction$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippetPromptSnippetsResponseFunction' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseToolCalls$inboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsResponseToolCalls,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    index: z.number().optional(),
    type: UpdatePromptSnippetPromptSnippetsResponse200Type$inboundSchema,
    function: z.lazy(() =>
      UpdatePromptSnippetPromptSnippetsResponseFunction$inboundSchema
    ),
  });

/** @internal */
export type UpdatePromptSnippetPromptSnippetsResponseToolCalls$Outbound = {
  id?: string | undefined;
  index?: number | undefined;
  type: string;
  function: UpdatePromptSnippetPromptSnippetsResponseFunction$Outbound;
};

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseToolCalls$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsResponseToolCalls$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetPromptSnippetsResponseToolCalls
  > = z.object({
    id: z.string().optional(),
    index: z.number().optional(),
    type: UpdatePromptSnippetPromptSnippetsResponse200Type$outboundSchema,
    function: z.lazy(() =>
      UpdatePromptSnippetPromptSnippetsResponseFunction$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponseToolCalls$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseToolCalls$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseToolCalls$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseToolCalls$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseToolCalls$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseToolCalls$Outbound` instead. */
  export type Outbound =
    UpdatePromptSnippetPromptSnippetsResponseToolCalls$Outbound;
}

export function updatePromptSnippetPromptSnippetsResponseToolCallsToJSON(
  updatePromptSnippetPromptSnippetsResponseToolCalls:
    UpdatePromptSnippetPromptSnippetsResponseToolCalls,
): string {
  return JSON.stringify(
    UpdatePromptSnippetPromptSnippetsResponseToolCalls$outboundSchema.parse(
      updatePromptSnippetPromptSnippetsResponseToolCalls,
    ),
  );
}

export function updatePromptSnippetPromptSnippetsResponseToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetPromptSnippetsResponseToolCalls,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetPromptSnippetsResponseToolCalls$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippetPromptSnippetsResponseToolCalls' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseMessages$inboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsResponseMessages,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role: UpdatePromptSnippetPromptSnippetsResponseRole$inboundSchema,
    content: z.union([
      z.string(),
      z.array(z.union([
        z.lazy(() => UpdatePromptSnippet2PromptSnippetsResponse1$inboundSchema),
        z.lazy(() =>
          UpdatePromptSnippet2PromptSnippetsResponse2$inboundSchema
        ),
      ])),
    ]),
    tool_calls: z.array(
      z.lazy(() =>
        UpdatePromptSnippetPromptSnippetsResponseToolCalls$inboundSchema
      ),
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "tool_calls": "toolCalls",
    });
  });

/** @internal */
export type UpdatePromptSnippetPromptSnippetsResponseMessages$Outbound = {
  role: string;
  content:
    | string
    | Array<
      | UpdatePromptSnippet2PromptSnippetsResponse1$Outbound
      | UpdatePromptSnippet2PromptSnippetsResponse2$Outbound
    >;
  tool_calls?:
    | Array<UpdatePromptSnippetPromptSnippetsResponseToolCalls$Outbound>
    | undefined;
};

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseMessages$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsResponseMessages$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetPromptSnippetsResponseMessages
  > = z.object({
    role: UpdatePromptSnippetPromptSnippetsResponseRole$outboundSchema,
    content: z.union([
      z.string(),
      z.array(z.union([
        z.lazy(() =>
          UpdatePromptSnippet2PromptSnippetsResponse1$outboundSchema
        ),
        z.lazy(() =>
          UpdatePromptSnippet2PromptSnippetsResponse2$outboundSchema
        ),
      ])),
    ]),
    toolCalls: z.array(
      z.lazy(() =>
        UpdatePromptSnippetPromptSnippetsResponseToolCalls$outboundSchema
      ),
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      toolCalls: "tool_calls",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponseMessages$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseMessages$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseMessages$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseMessages$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseMessages$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseMessages$Outbound` instead. */
  export type Outbound =
    UpdatePromptSnippetPromptSnippetsResponseMessages$Outbound;
}

export function updatePromptSnippetPromptSnippetsResponseMessagesToJSON(
  updatePromptSnippetPromptSnippetsResponseMessages:
    UpdatePromptSnippetPromptSnippetsResponseMessages,
): string {
  return JSON.stringify(
    UpdatePromptSnippetPromptSnippetsResponseMessages$outboundSchema.parse(
      updatePromptSnippetPromptSnippetsResponseMessages,
    ),
  );
}

export function updatePromptSnippetPromptSnippetsResponseMessagesFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetPromptSnippetsResponseMessages,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetPromptSnippetsResponseMessages$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippetPromptSnippetsResponseMessages' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponsePromptConfig$inboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsResponsePromptConfig,
    z.ZodTypeDef,
    unknown
  > = z.object({
    stream: z.boolean().optional(),
    model: z.string().optional(),
    model_db_id: z.string().optional(),
    model_type: UpdatePromptSnippetPromptSnippetsResponseModelType$inboundSchema
      .optional(),
    model_parameters: z.lazy(() =>
      UpdatePromptSnippetPromptSnippetsResponseModelParameters$inboundSchema
    ).optional(),
    provider: UpdatePromptSnippetPromptSnippetsResponseProvider$inboundSchema
      .optional(),
    integration_id: z.nullable(z.string()).optional(),
    version: z.string().optional(),
    messages: z.array(
      z.lazy(() =>
        UpdatePromptSnippetPromptSnippetsResponseMessages$inboundSchema
      ),
    ),
  }).transform((v) => {
    return remap$(v, {
      "model_db_id": "modelDbId",
      "model_type": "modelType",
      "model_parameters": "modelParameters",
      "integration_id": "integrationId",
    });
  });

/** @internal */
export type UpdatePromptSnippetPromptSnippetsResponsePromptConfig$Outbound = {
  stream?: boolean | undefined;
  model?: string | undefined;
  model_db_id?: string | undefined;
  model_type?: string | undefined;
  model_parameters?:
    | UpdatePromptSnippetPromptSnippetsResponseModelParameters$Outbound
    | undefined;
  provider?: string | undefined;
  integration_id?: string | null | undefined;
  version?: string | undefined;
  messages: Array<UpdatePromptSnippetPromptSnippetsResponseMessages$Outbound>;
};

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponsePromptConfig$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsResponsePromptConfig$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetPromptSnippetsResponsePromptConfig
  > = z.object({
    stream: z.boolean().optional(),
    model: z.string().optional(),
    modelDbId: z.string().optional(),
    modelType: UpdatePromptSnippetPromptSnippetsResponseModelType$outboundSchema
      .optional(),
    modelParameters: z.lazy(() =>
      UpdatePromptSnippetPromptSnippetsResponseModelParameters$outboundSchema
    ).optional(),
    provider: UpdatePromptSnippetPromptSnippetsResponseProvider$outboundSchema
      .optional(),
    integrationId: z.nullable(z.string()).optional(),
    version: z.string().optional(),
    messages: z.array(
      z.lazy(() =>
        UpdatePromptSnippetPromptSnippetsResponseMessages$outboundSchema
      ),
    ),
  }).transform((v) => {
    return remap$(v, {
      modelDbId: "model_db_id",
      modelType: "model_type",
      modelParameters: "model_parameters",
      integrationId: "integration_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponsePromptConfig$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponsePromptConfig$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponsePromptConfig$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponsePromptConfig$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponsePromptConfig$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponsePromptConfig$Outbound` instead. */
  export type Outbound =
    UpdatePromptSnippetPromptSnippetsResponsePromptConfig$Outbound;
}

export function updatePromptSnippetPromptSnippetsResponsePromptConfigToJSON(
  updatePromptSnippetPromptSnippetsResponsePromptConfig:
    UpdatePromptSnippetPromptSnippetsResponsePromptConfig,
): string {
  return JSON.stringify(
    UpdatePromptSnippetPromptSnippetsResponsePromptConfig$outboundSchema.parse(
      updatePromptSnippetPromptSnippetsResponsePromptConfig,
    ),
  );
}

export function updatePromptSnippetPromptSnippetsResponsePromptConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetPromptSnippetsResponsePromptConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetPromptSnippetsResponsePromptConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippetPromptSnippetsResponsePromptConfig' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseUseCases$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsResponseUseCases> = z
    .nativeEnum(UpdatePromptSnippetPromptSnippetsResponseUseCases);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseUseCases$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsResponseUseCases> =
    UpdatePromptSnippetPromptSnippetsResponseUseCases$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponseUseCases$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseUseCases$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseUseCases$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseUseCases$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseUseCases$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseLanguage$inboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsResponseLanguage> = z
    .nativeEnum(UpdatePromptSnippetPromptSnippetsResponseLanguage);

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseLanguage$outboundSchema:
  z.ZodNativeEnum<typeof UpdatePromptSnippetPromptSnippetsResponseLanguage> =
    UpdatePromptSnippetPromptSnippetsResponseLanguage$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponseLanguage$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseLanguage$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseLanguage$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseLanguage$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseLanguage$outboundSchema;
}

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseMetadata$inboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsResponseMetadata,
    z.ZodTypeDef,
    unknown
  > = z.object({
    use_cases: z.array(
      UpdatePromptSnippetPromptSnippetsResponseUseCases$inboundSchema,
    ).optional(),
    language: UpdatePromptSnippetPromptSnippetsResponseLanguage$inboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "use_cases": "useCases",
    });
  });

/** @internal */
export type UpdatePromptSnippetPromptSnippetsResponseMetadata$Outbound = {
  use_cases?: Array<string> | undefined;
  language?: string | undefined;
};

/** @internal */
export const UpdatePromptSnippetPromptSnippetsResponseMetadata$outboundSchema:
  z.ZodType<
    UpdatePromptSnippetPromptSnippetsResponseMetadata$Outbound,
    z.ZodTypeDef,
    UpdatePromptSnippetPromptSnippetsResponseMetadata
  > = z.object({
    useCases: z.array(
      UpdatePromptSnippetPromptSnippetsResponseUseCases$outboundSchema,
    ).optional(),
    language: UpdatePromptSnippetPromptSnippetsResponseLanguage$outboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      useCases: "use_cases",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetPromptSnippetsResponseMetadata$ {
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseMetadata$inboundSchema` instead. */
  export const inboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseMetadata$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseMetadata$outboundSchema` instead. */
  export const outboundSchema =
    UpdatePromptSnippetPromptSnippetsResponseMetadata$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetPromptSnippetsResponseMetadata$Outbound` instead. */
  export type Outbound =
    UpdatePromptSnippetPromptSnippetsResponseMetadata$Outbound;
}

export function updatePromptSnippetPromptSnippetsResponseMetadataToJSON(
  updatePromptSnippetPromptSnippetsResponseMetadata:
    UpdatePromptSnippetPromptSnippetsResponseMetadata,
): string {
  return JSON.stringify(
    UpdatePromptSnippetPromptSnippetsResponseMetadata$outboundSchema.parse(
      updatePromptSnippetPromptSnippetsResponseMetadata,
    ),
  );
}

export function updatePromptSnippetPromptSnippetsResponseMetadataFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdatePromptSnippetPromptSnippetsResponseMetadata,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdatePromptSnippetPromptSnippetsResponseMetadata$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdatePromptSnippetPromptSnippetsResponseMetadata' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetVersions$inboundSchema: z.ZodType<
  UpdatePromptSnippetVersions,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  description: z.nullable(z.string()).optional(),
  prompt_config: z.lazy(() =>
    UpdatePromptSnippetPromptSnippetsResponsePromptConfig$inboundSchema
  ),
  metadata: z.lazy(() =>
    UpdatePromptSnippetPromptSnippetsResponseMetadata$inboundSchema
  ),
  created_by_id: z.string(),
  updated_by_id: z.string(),
  timestamp: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "prompt_config": "promptConfig",
    "created_by_id": "createdById",
    "updated_by_id": "updatedById",
  });
});

/** @internal */
export type UpdatePromptSnippetVersions$Outbound = {
  _id: string;
  description?: string | null | undefined;
  prompt_config: UpdatePromptSnippetPromptSnippetsResponsePromptConfig$Outbound;
  metadata: UpdatePromptSnippetPromptSnippetsResponseMetadata$Outbound;
  created_by_id: string;
  updated_by_id: string;
  timestamp: string;
};

/** @internal */
export const UpdatePromptSnippetVersions$outboundSchema: z.ZodType<
  UpdatePromptSnippetVersions$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippetVersions
> = z.object({
  id: z.string(),
  description: z.nullable(z.string()).optional(),
  promptConfig: z.lazy(() =>
    UpdatePromptSnippetPromptSnippetsResponsePromptConfig$outboundSchema
  ),
  metadata: z.lazy(() =>
    UpdatePromptSnippetPromptSnippetsResponseMetadata$outboundSchema
  ),
  createdById: z.string(),
  updatedById: z.string(),
  timestamp: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    promptConfig: "prompt_config",
    createdById: "created_by_id",
    updatedById: "updated_by_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetVersions$ {
  /** @deprecated use `UpdatePromptSnippetVersions$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetVersions$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetVersions$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetVersions$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetVersions$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetVersions$Outbound;
}

export function updatePromptSnippetVersionsToJSON(
  updatePromptSnippetVersions: UpdatePromptSnippetVersions,
): string {
  return JSON.stringify(
    UpdatePromptSnippetVersions$outboundSchema.parse(
      updatePromptSnippetVersions,
    ),
  );
}

export function updatePromptSnippetVersionsFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippetVersions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePromptSnippetVersions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetVersions' from JSON`,
  );
}

/** @internal */
export const UpdatePromptSnippetResponseBody$inboundSchema: z.ZodType<
  UpdatePromptSnippetResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  owner: z.union([z.string(), UpdatePromptSnippetOwner2$inboundSchema]),
  domain_id: z.string(),
  key: z.string(),
  description: z.nullable(z.string()).optional(),
  prompt_config: z.lazy(() =>
    UpdatePromptSnippetPromptSnippetsPromptConfig$inboundSchema
  ),
  metadata: z.lazy(() =>
    UpdatePromptSnippetPromptSnippetsMetadata$inboundSchema
  ),
  created_by_id: z.string(),
  updated_by_id: z.string(),
  created: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  updated: z.string().datetime({ offset: true }).default(
    "2025-02-10T14:13:16.580Z",
  ).transform(v => new Date(v)),
  type: UpdatePromptSnippetPromptSnippetsType$inboundSchema,
  versions: z.array(z.lazy(() => UpdatePromptSnippetVersions$inboundSchema)),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "domain_id": "domainId",
    "prompt_config": "promptConfig",
    "created_by_id": "createdById",
    "updated_by_id": "updatedById",
  });
});

/** @internal */
export type UpdatePromptSnippetResponseBody$Outbound = {
  _id: string;
  owner: string | string;
  domain_id: string;
  key: string;
  description?: string | null | undefined;
  prompt_config: UpdatePromptSnippetPromptSnippetsPromptConfig$Outbound;
  metadata: UpdatePromptSnippetPromptSnippetsMetadata$Outbound;
  created_by_id: string;
  updated_by_id: string;
  created?: string | undefined;
  updated: string;
  type: string;
  versions: Array<UpdatePromptSnippetVersions$Outbound>;
};

/** @internal */
export const UpdatePromptSnippetResponseBody$outboundSchema: z.ZodType<
  UpdatePromptSnippetResponseBody$Outbound,
  z.ZodTypeDef,
  UpdatePromptSnippetResponseBody
> = z.object({
  id: z.string(),
  owner: z.union([z.string(), UpdatePromptSnippetOwner2$outboundSchema]),
  domainId: z.string(),
  key: z.string(),
  description: z.nullable(z.string()).optional(),
  promptConfig: z.lazy(() =>
    UpdatePromptSnippetPromptSnippetsPromptConfig$outboundSchema
  ),
  metadata: z.lazy(() =>
    UpdatePromptSnippetPromptSnippetsMetadata$outboundSchema
  ),
  createdById: z.string(),
  updatedById: z.string(),
  created: z.date().transform(v => v.toISOString()).optional(),
  updated: z.date().default(() => new Date("2025-02-10T14:13:16.580Z"))
    .transform(v => v.toISOString()),
  type: UpdatePromptSnippetPromptSnippetsType$outboundSchema,
  versions: z.array(z.lazy(() => UpdatePromptSnippetVersions$outboundSchema)),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    domainId: "domain_id",
    promptConfig: "prompt_config",
    createdById: "created_by_id",
    updatedById: "updated_by_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatePromptSnippetResponseBody$ {
  /** @deprecated use `UpdatePromptSnippetResponseBody$inboundSchema` instead. */
  export const inboundSchema = UpdatePromptSnippetResponseBody$inboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseBody$outboundSchema` instead. */
  export const outboundSchema = UpdatePromptSnippetResponseBody$outboundSchema;
  /** @deprecated use `UpdatePromptSnippetResponseBody$Outbound` instead. */
  export type Outbound = UpdatePromptSnippetResponseBody$Outbound;
}

export function updatePromptSnippetResponseBodyToJSON(
  updatePromptSnippetResponseBody: UpdatePromptSnippetResponseBody,
): string {
  return JSON.stringify(
    UpdatePromptSnippetResponseBody$outboundSchema.parse(
      updatePromptSnippetResponseBody,
    ),
  );
}

export function updatePromptSnippetResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdatePromptSnippetResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdatePromptSnippetResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdatePromptSnippetResponseBody' from JSON`,
  );
}
