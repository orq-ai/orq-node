/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type FindOneByKeyPromptSnippetGlobals = {
  contactId?: string | undefined;
};

export type FindOneByKeyPromptSnippetRequest = {
  /**
   * Prompt Key
   */
  key: string;
};

export const FindOneByKeyPromptSnippetOwner2 = {
  Vendor: "vendor",
} as const;
export type FindOneByKeyPromptSnippetOwner2 = ClosedEnum<
  typeof FindOneByKeyPromptSnippetOwner2
>;

export type FindOneByKeyPromptSnippetOwner =
  | string
  | FindOneByKeyPromptSnippetOwner2;

/**
 * The type of the model
 */
export const FindOneByKeyPromptSnippetModelType = {
  Chat: "chat",
  Completion: "completion",
  Embedding: "embedding",
  Vision: "vision",
  Image: "image",
  Tts: "tts",
  Stt: "stt",
  Rerank: "rerank",
  Moderations: "moderations",
} as const;
/**
 * The type of the model
 */
export type FindOneByKeyPromptSnippetModelType = ClosedEnum<
  typeof FindOneByKeyPromptSnippetModelType
>;

/**
 * Only supported on `image` models.
 */
export const FindOneByKeyPromptSnippetFormat = {
  Url: "url",
  B64Json: "b64_json",
  Text: "text",
  JsonObject: "json_object",
} as const;
/**
 * Only supported on `image` models.
 */
export type FindOneByKeyPromptSnippetFormat = ClosedEnum<
  typeof FindOneByKeyPromptSnippetFormat
>;

/**
 * Only supported on `image` models.
 */
export const FindOneByKeyPromptSnippetQuality = {
  Standard: "standard",
  Hd: "hd",
} as const;
/**
 * Only supported on `image` models.
 */
export type FindOneByKeyPromptSnippetQuality = ClosedEnum<
  typeof FindOneByKeyPromptSnippetQuality
>;

export const FindOneByKeyPromptSnippetResponseFormatPromptSnippetsType = {
  JsonObject: "json_object",
} as const;
export type FindOneByKeyPromptSnippetResponseFormatPromptSnippetsType =
  ClosedEnum<typeof FindOneByKeyPromptSnippetResponseFormatPromptSnippetsType>;

export type FindOneByKeyPromptSnippetResponseFormat2 = {
  type: FindOneByKeyPromptSnippetResponseFormatPromptSnippetsType;
};

export const FindOneByKeyPromptSnippetResponseFormatType = {
  JsonSchema: "json_schema",
} as const;
export type FindOneByKeyPromptSnippetResponseFormatType = ClosedEnum<
  typeof FindOneByKeyPromptSnippetResponseFormatType
>;

export type FindOneByKeyPromptSnippetResponseFormatJsonSchema = {
  name: string;
  strict: boolean;
  schema: { [k: string]: any };
};

export type FindOneByKeyPromptSnippetResponseFormat1 = {
  type: FindOneByKeyPromptSnippetResponseFormatType;
  jsonSchema: FindOneByKeyPromptSnippetResponseFormatJsonSchema;
};

/**
 * An object specifying the format that the model must output.
 *
 * @remarks
 *
 *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
 *
 *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
 *
 * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
 */
export type FindOneByKeyPromptSnippetResponseFormat =
  | FindOneByKeyPromptSnippetResponseFormat2
  | FindOneByKeyPromptSnippetResponseFormat1;

/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export const FindOneByKeyPromptSnippetPhotoRealVersion = {
  V1: "v1",
  V2: "v2",
} as const;
/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export type FindOneByKeyPromptSnippetPhotoRealVersion = ClosedEnum<
  typeof FindOneByKeyPromptSnippetPhotoRealVersion
>;

/**
 * The format to return the embeddings
 */
export const FindOneByKeyPromptSnippetEncodingFormat = {
  Float: "float",
  Base64: "base64",
} as const;
/**
 * The format to return the embeddings
 */
export type FindOneByKeyPromptSnippetEncodingFormat = ClosedEnum<
  typeof FindOneByKeyPromptSnippetEncodingFormat
>;

/**
 * Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
 */
export const FindOneByKeyPromptSnippetReasoningEffort = {
  Low: "low",
  Medium: "medium",
  High: "high",
} as const;
/**
 * Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
 */
export type FindOneByKeyPromptSnippetReasoningEffort = ClosedEnum<
  typeof FindOneByKeyPromptSnippetReasoningEffort
>;

/**
 * Model Parameters: Not all parameters apply to every model
 */
export type FindOneByKeyPromptSnippetModelParameters = {
  /**
   * Only supported on `chat` and `completion` models.
   */
  temperature?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  maxTokens?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topK?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topP?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  frequencyPenalty?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  presencePenalty?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  numImages?: number | undefined;
  /**
   * Best effort deterministic seed for the model. Currently only OpenAI models support these
   */
  seed?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  format?: FindOneByKeyPromptSnippetFormat | undefined;
  /**
   * Only supported on `image` models.
   */
  dimensions?: string | undefined;
  /**
   * Only supported on `image` models.
   */
  quality?: FindOneByKeyPromptSnippetQuality | undefined;
  /**
   * Only supported on `image` models.
   */
  style?: string | undefined;
  /**
   * An object specifying the format that the model must output.
   *
   * @remarks
   *
   *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
   *
   *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
   *
   * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
   */
  responseFormat?:
    | FindOneByKeyPromptSnippetResponseFormat2
    | FindOneByKeyPromptSnippetResponseFormat1
    | null
    | undefined;
  /**
   * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
   */
  photoRealVersion?: FindOneByKeyPromptSnippetPhotoRealVersion | undefined;
  /**
   * The format to return the embeddings
   */
  encodingFormat?: FindOneByKeyPromptSnippetEncodingFormat | undefined;
  /**
   * Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
   */
  reasoningEffort?: FindOneByKeyPromptSnippetReasoningEffort | undefined;
};

export const FindOneByKeyPromptSnippetProvider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
  Jina: "jina",
  Togetherai: "togetherai",
  Elevenlabs: "elevenlabs",
} as const;
export type FindOneByKeyPromptSnippetProvider = ClosedEnum<
  typeof FindOneByKeyPromptSnippetProvider
>;

/**
 * The role of the prompt message
 */
export const FindOneByKeyPromptSnippetRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type FindOneByKeyPromptSnippetRole = ClosedEnum<
  typeof FindOneByKeyPromptSnippetRole
>;

export const FindOneByKeyPromptSnippet2PromptSnippetsType = {
  ImageUrl: "image_url",
} as const;
export type FindOneByKeyPromptSnippet2PromptSnippetsType = ClosedEnum<
  typeof FindOneByKeyPromptSnippet2PromptSnippetsType
>;

export type FindOneByKeyPromptSnippet2ImageUrl = {
  /**
   * The orq.ai id of the image
   */
  id?: string | undefined;
  /**
   * Either a URL of the image or the base64 encoded data URI.
   */
  url: string;
  /**
   * Specifies the detail level of the image. Currently only supported with OpenAI models
   */
  detail?: string | undefined;
};

/**
 * The image part of the prompt message. Only supported with vision models.
 */
export type FindOneByKeyPromptSnippet22 = {
  type: FindOneByKeyPromptSnippet2PromptSnippetsType;
  imageUrl: FindOneByKeyPromptSnippet2ImageUrl;
};

export const FindOneByKeyPromptSnippet2Type = {
  Text: "text",
} as const;
export type FindOneByKeyPromptSnippet2Type = ClosedEnum<
  typeof FindOneByKeyPromptSnippet2Type
>;

/**
 * Text content part of a prompt message
 */
export type FindOneByKeyPromptSnippet21 = {
  type: FindOneByKeyPromptSnippet2Type;
  text: string;
};

export type FindOneByKeyPromptSnippetContent2 =
  | FindOneByKeyPromptSnippet21
  | FindOneByKeyPromptSnippet22;

/**
 * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
 */
export type FindOneByKeyPromptSnippetContent =
  | string
  | Array<FindOneByKeyPromptSnippet21 | FindOneByKeyPromptSnippet22>;

export const FindOneByKeyPromptSnippetPromptSnippetsType = {
  Function: "function",
} as const;
export type FindOneByKeyPromptSnippetPromptSnippetsType = ClosedEnum<
  typeof FindOneByKeyPromptSnippetPromptSnippetsType
>;

export type FindOneByKeyPromptSnippetFunction = {
  name: string;
  /**
   * JSON string arguments for the functions
   */
  arguments: string;
};

export type FindOneByKeyPromptSnippetToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type: FindOneByKeyPromptSnippetPromptSnippetsType;
  function: FindOneByKeyPromptSnippetFunction;
};

export type FindOneByKeyPromptSnippetMessages = {
  /**
   * The role of the prompt message
   */
  role: FindOneByKeyPromptSnippetRole;
  /**
   * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
   */
  content:
    | string
    | Array<FindOneByKeyPromptSnippet21 | FindOneByKeyPromptSnippet22>;
  toolCalls?: Array<FindOneByKeyPromptSnippetToolCalls> | undefined;
};

/**
 * A list of messages compatible with the openAI schema
 */
export type FindOneByKeyPromptSnippetPromptConfig = {
  stream?: boolean | undefined;
  model?: string | undefined;
  /**
   * The id of the resource
   */
  modelDbId?: string | undefined;
  /**
   * The type of the model
   */
  modelType?: FindOneByKeyPromptSnippetModelType | undefined;
  /**
   * Model Parameters: Not all parameters apply to every model
   */
  modelParameters?: FindOneByKeyPromptSnippetModelParameters | undefined;
  provider?: FindOneByKeyPromptSnippetProvider | undefined;
  /**
   * The id of the resource
   */
  integrationId?: string | null | undefined;
  version?: string | undefined;
  messages: Array<FindOneByKeyPromptSnippetMessages>;
};

export const FindOneByKeyPromptSnippetUseCases = {
  Agents: "Agents",
  AgentsSimulations: "Agents simulations",
  APIInteraction: "API interaction",
  AutonomousAgents: "Autonomous Agents",
  Chatbots: "Chatbots",
  Classification: "Classification",
  CodeUnderstanding: "Code understanding",
  CodeWriting: "Code writing",
  DocumentsQA: "Documents QA",
  Conversation: "Conversation",
  Extraction: "Extraction",
  MultiModal: "Multi-modal",
  SelfChecking: "Self-checking",
  Sql: "SQL",
  Summarization: "Summarization",
  Tagging: "Tagging",
} as const;
export type FindOneByKeyPromptSnippetUseCases = ClosedEnum<
  typeof FindOneByKeyPromptSnippetUseCases
>;

/**
 * The language that the prompt is written in. Use this field to categorize the prompt for your own purpose
 */
export const FindOneByKeyPromptSnippetLanguage = {
  Chinese: "Chinese",
  Dutch: "Dutch",
  English: "English",
  French: "French",
  German: "German",
  Russian: "Russian",
  Spanish: "Spanish",
} as const;
/**
 * The language that the prompt is written in. Use this field to categorize the prompt for your own purpose
 */
export type FindOneByKeyPromptSnippetLanguage = ClosedEnum<
  typeof FindOneByKeyPromptSnippetLanguage
>;

export type FindOneByKeyPromptSnippetMetadata = {
  /**
   * A list of use cases that the prompt is meant to be used for. Use this field to categorize the prompt for your own purpose
   */
  useCases?: Array<FindOneByKeyPromptSnippetUseCases> | undefined;
  /**
   * The language that the prompt is written in. Use this field to categorize the prompt for your own purpose
   */
  language?: FindOneByKeyPromptSnippetLanguage | undefined;
};

export const FindOneByKeyPromptSnippetType = {
  Snippet: "snippet",
} as const;
export type FindOneByKeyPromptSnippetType = ClosedEnum<
  typeof FindOneByKeyPromptSnippetType
>;

/**
 * The type of the model
 */
export const FindOneByKeyPromptSnippetPromptSnippetsModelType = {
  Chat: "chat",
  Completion: "completion",
  Embedding: "embedding",
  Vision: "vision",
  Image: "image",
  Tts: "tts",
  Stt: "stt",
  Rerank: "rerank",
  Moderations: "moderations",
} as const;
/**
 * The type of the model
 */
export type FindOneByKeyPromptSnippetPromptSnippetsModelType = ClosedEnum<
  typeof FindOneByKeyPromptSnippetPromptSnippetsModelType
>;

/**
 * Only supported on `image` models.
 */
export const FindOneByKeyPromptSnippetPromptSnippetsFormat = {
  Url: "url",
  B64Json: "b64_json",
  Text: "text",
  JsonObject: "json_object",
} as const;
/**
 * Only supported on `image` models.
 */
export type FindOneByKeyPromptSnippetPromptSnippetsFormat = ClosedEnum<
  typeof FindOneByKeyPromptSnippetPromptSnippetsFormat
>;

/**
 * Only supported on `image` models.
 */
export const FindOneByKeyPromptSnippetPromptSnippetsQuality = {
  Standard: "standard",
  Hd: "hd",
} as const;
/**
 * Only supported on `image` models.
 */
export type FindOneByKeyPromptSnippetPromptSnippetsQuality = ClosedEnum<
  typeof FindOneByKeyPromptSnippetPromptSnippetsQuality
>;

export const FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponse200Type =
  {
    JsonObject: "json_object",
  } as const;
export type FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponse200Type =
  ClosedEnum<
    typeof FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponse200Type
  >;

export type FindOneByKeyPromptSnippetResponseFormatPromptSnippets2 = {
  type: FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponse200Type;
};

export const FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponseType =
  {
    JsonSchema: "json_schema",
  } as const;
export type FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponseType =
  ClosedEnum<
    typeof FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponseType
  >;

export type FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema = {
  name: string;
  strict: boolean;
  schema: { [k: string]: any };
};

export type FindOneByKeyPromptSnippetResponseFormatPromptSnippets1 = {
  type: FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponseType;
  jsonSchema: FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema;
};

/**
 * An object specifying the format that the model must output.
 *
 * @remarks
 *
 *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
 *
 *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
 *
 * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
 */
export type FindOneByKeyPromptSnippetPromptSnippetsResponseFormat =
  | FindOneByKeyPromptSnippetResponseFormatPromptSnippets2
  | FindOneByKeyPromptSnippetResponseFormatPromptSnippets1;

/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export const FindOneByKeyPromptSnippetPromptSnippetsPhotoRealVersion = {
  V1: "v1",
  V2: "v2",
} as const;
/**
 * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
 */
export type FindOneByKeyPromptSnippetPromptSnippetsPhotoRealVersion =
  ClosedEnum<typeof FindOneByKeyPromptSnippetPromptSnippetsPhotoRealVersion>;

/**
 * The format to return the embeddings
 */
export const FindOneByKeyPromptSnippetPromptSnippetsEncodingFormat = {
  Float: "float",
  Base64: "base64",
} as const;
/**
 * The format to return the embeddings
 */
export type FindOneByKeyPromptSnippetPromptSnippetsEncodingFormat = ClosedEnum<
  typeof FindOneByKeyPromptSnippetPromptSnippetsEncodingFormat
>;

/**
 * Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
 */
export const FindOneByKeyPromptSnippetPromptSnippetsReasoningEffort = {
  Low: "low",
  Medium: "medium",
  High: "high",
} as const;
/**
 * Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
 */
export type FindOneByKeyPromptSnippetPromptSnippetsReasoningEffort = ClosedEnum<
  typeof FindOneByKeyPromptSnippetPromptSnippetsReasoningEffort
>;

/**
 * Model Parameters: Not all parameters apply to every model
 */
export type FindOneByKeyPromptSnippetPromptSnippetsModelParameters = {
  /**
   * Only supported on `chat` and `completion` models.
   */
  temperature?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  maxTokens?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topK?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  topP?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  frequencyPenalty?: number | undefined;
  /**
   * Only supported on `chat` and `completion` models.
   */
  presencePenalty?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  numImages?: number | undefined;
  /**
   * Best effort deterministic seed for the model. Currently only OpenAI models support these
   */
  seed?: number | undefined;
  /**
   * Only supported on `image` models.
   */
  format?: FindOneByKeyPromptSnippetPromptSnippetsFormat | undefined;
  /**
   * Only supported on `image` models.
   */
  dimensions?: string | undefined;
  /**
   * Only supported on `image` models.
   */
  quality?: FindOneByKeyPromptSnippetPromptSnippetsQuality | undefined;
  /**
   * Only supported on `image` models.
   */
  style?: string | undefined;
  /**
   * An object specifying the format that the model must output.
   *
   * @remarks
   *
   *  Setting to `{ "type": "json_schema", "json_schema": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema
   *
   *  Setting to `{ "type": "json_object" }` enables JSON mode, which ensures the message the model generates is valid JSON.
   *
   * Important: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if finish_reason="length", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.
   */
  responseFormat?:
    | FindOneByKeyPromptSnippetResponseFormatPromptSnippets2
    | FindOneByKeyPromptSnippetResponseFormatPromptSnippets1
    | null
    | undefined;
  /**
   * The version of photoReal to use. Must be v1 or v2. Only available for `leonardoai` provider
   */
  photoRealVersion?:
    | FindOneByKeyPromptSnippetPromptSnippetsPhotoRealVersion
    | undefined;
  /**
   * The format to return the embeddings
   */
  encodingFormat?:
    | FindOneByKeyPromptSnippetPromptSnippetsEncodingFormat
    | undefined;
  /**
   * Constrains effort on reasoning for reasoning models. Reducing reasoning effort can result in faster responses and fewer tokens used on reasoning in a response.
   */
  reasoningEffort?:
    | FindOneByKeyPromptSnippetPromptSnippetsReasoningEffort
    | undefined;
};

export const FindOneByKeyPromptSnippetPromptSnippetsProvider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
  Jina: "jina",
  Togetherai: "togetherai",
  Elevenlabs: "elevenlabs",
} as const;
export type FindOneByKeyPromptSnippetPromptSnippetsProvider = ClosedEnum<
  typeof FindOneByKeyPromptSnippetPromptSnippetsProvider
>;

/**
 * The role of the prompt message
 */
export const FindOneByKeyPromptSnippetPromptSnippetsRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type FindOneByKeyPromptSnippetPromptSnippetsRole = ClosedEnum<
  typeof FindOneByKeyPromptSnippetPromptSnippetsRole
>;

export const FindOneByKeyPromptSnippet2PromptSnippetsResponse200Type = {
  ImageUrl: "image_url",
} as const;
export type FindOneByKeyPromptSnippet2PromptSnippetsResponse200Type =
  ClosedEnum<typeof FindOneByKeyPromptSnippet2PromptSnippetsResponse200Type>;

export type FindOneByKeyPromptSnippet2PromptSnippetsImageUrl = {
  /**
   * The orq.ai id of the image
   */
  id?: string | undefined;
  /**
   * Either a URL of the image or the base64 encoded data URI.
   */
  url: string;
  /**
   * Specifies the detail level of the image. Currently only supported with OpenAI models
   */
  detail?: string | undefined;
};

/**
 * The image part of the prompt message. Only supported with vision models.
 */
export type FindOneByKeyPromptSnippet2PromptSnippets2 = {
  type: FindOneByKeyPromptSnippet2PromptSnippetsResponse200Type;
  imageUrl: FindOneByKeyPromptSnippet2PromptSnippetsImageUrl;
};

export const FindOneByKeyPromptSnippet2PromptSnippetsResponseType = {
  Text: "text",
} as const;
export type FindOneByKeyPromptSnippet2PromptSnippetsResponseType = ClosedEnum<
  typeof FindOneByKeyPromptSnippet2PromptSnippetsResponseType
>;

/**
 * Text content part of a prompt message
 */
export type FindOneByKeyPromptSnippet2PromptSnippets1 = {
  type: FindOneByKeyPromptSnippet2PromptSnippetsResponseType;
  text: string;
};

export type FindOneByKeyPromptSnippetContentPromptSnippets2 =
  | FindOneByKeyPromptSnippet2PromptSnippets1
  | FindOneByKeyPromptSnippet2PromptSnippets2;

/**
 * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
 */
export type FindOneByKeyPromptSnippetPromptSnippetsContent =
  | string
  | Array<
    | FindOneByKeyPromptSnippet2PromptSnippets1
    | FindOneByKeyPromptSnippet2PromptSnippets2
  >;

export const FindOneByKeyPromptSnippetPromptSnippetsResponseType = {
  Function: "function",
} as const;
export type FindOneByKeyPromptSnippetPromptSnippetsResponseType = ClosedEnum<
  typeof FindOneByKeyPromptSnippetPromptSnippetsResponseType
>;

export type FindOneByKeyPromptSnippetPromptSnippetsFunction = {
  name: string;
  /**
   * JSON string arguments for the functions
   */
  arguments: string;
};

export type FindOneByKeyPromptSnippetPromptSnippetsToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type: FindOneByKeyPromptSnippetPromptSnippetsResponseType;
  function: FindOneByKeyPromptSnippetPromptSnippetsFunction;
};

export type FindOneByKeyPromptSnippetPromptSnippetsMessages = {
  /**
   * The role of the prompt message
   */
  role: FindOneByKeyPromptSnippetPromptSnippetsRole;
  /**
   * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
   */
  content:
    | string
    | Array<
      | FindOneByKeyPromptSnippet2PromptSnippets1
      | FindOneByKeyPromptSnippet2PromptSnippets2
    >;
  toolCalls?:
    | Array<FindOneByKeyPromptSnippetPromptSnippetsToolCalls>
    | undefined;
};

/**
 * A list of messages compatible with the openAI schema
 */
export type FindOneByKeyPromptSnippetPromptSnippetsPromptConfig = {
  stream?: boolean | undefined;
  model?: string | undefined;
  /**
   * The id of the resource
   */
  modelDbId?: string | undefined;
  /**
   * The type of the model
   */
  modelType?: FindOneByKeyPromptSnippetPromptSnippetsModelType | undefined;
  /**
   * Model Parameters: Not all parameters apply to every model
   */
  modelParameters?:
    | FindOneByKeyPromptSnippetPromptSnippetsModelParameters
    | undefined;
  provider?: FindOneByKeyPromptSnippetPromptSnippetsProvider | undefined;
  /**
   * The id of the resource
   */
  integrationId?: string | null | undefined;
  version?: string | undefined;
  messages: Array<FindOneByKeyPromptSnippetPromptSnippetsMessages>;
};

export const FindOneByKeyPromptSnippetPromptSnippetsUseCases = {
  Agents: "Agents",
  AgentsSimulations: "Agents simulations",
  APIInteraction: "API interaction",
  AutonomousAgents: "Autonomous Agents",
  Chatbots: "Chatbots",
  Classification: "Classification",
  CodeUnderstanding: "Code understanding",
  CodeWriting: "Code writing",
  DocumentsQA: "Documents QA",
  Conversation: "Conversation",
  Extraction: "Extraction",
  MultiModal: "Multi-modal",
  SelfChecking: "Self-checking",
  Sql: "SQL",
  Summarization: "Summarization",
  Tagging: "Tagging",
} as const;
export type FindOneByKeyPromptSnippetPromptSnippetsUseCases = ClosedEnum<
  typeof FindOneByKeyPromptSnippetPromptSnippetsUseCases
>;

/**
 * The language that the prompt is written in. Use this field to categorize the prompt for your own purpose
 */
export const FindOneByKeyPromptSnippetPromptSnippetsLanguage = {
  Chinese: "Chinese",
  Dutch: "Dutch",
  English: "English",
  French: "French",
  German: "German",
  Russian: "Russian",
  Spanish: "Spanish",
} as const;
/**
 * The language that the prompt is written in. Use this field to categorize the prompt for your own purpose
 */
export type FindOneByKeyPromptSnippetPromptSnippetsLanguage = ClosedEnum<
  typeof FindOneByKeyPromptSnippetPromptSnippetsLanguage
>;

export type FindOneByKeyPromptSnippetPromptSnippetsMetadata = {
  /**
   * A list of use cases that the prompt is meant to be used for. Use this field to categorize the prompt for your own purpose
   */
  useCases?: Array<FindOneByKeyPromptSnippetPromptSnippetsUseCases> | undefined;
  /**
   * The language that the prompt is written in. Use this field to categorize the prompt for your own purpose
   */
  language?: FindOneByKeyPromptSnippetPromptSnippetsLanguage | undefined;
};

/**
 * Prompt version model returned from the API
 */
export type FindOneByKeyPromptSnippetVersions = {
  id: string;
  /**
   * The prompt snippet’s description, meant to be displayable in the UI. Use this field to optionally store a long form explanation of the prompt for your own purpose
   */
  description?: string | null | undefined;
  /**
   * A list of messages compatible with the openAI schema
   */
  promptConfig: FindOneByKeyPromptSnippetPromptSnippetsPromptConfig;
  metadata: FindOneByKeyPromptSnippetPromptSnippetsMetadata;
  createdById: string;
  updatedById: string;
  timestamp: string;
};

/**
 * Prompt snippet model returned from the API
 */
export type FindOneByKeyPromptSnippetResponseBody = {
  id: string;
  owner: string | FindOneByKeyPromptSnippetOwner2;
  domainId: string;
  key: string;
  /**
   * The prompt snippet’s description, meant to be displayable in the UI. Use this field to optionally store a long form explanation of the prompt for your own purpose
   */
  description?: string | null | undefined;
  /**
   * A list of messages compatible with the openAI schema
   */
  promptConfig: FindOneByKeyPromptSnippetPromptConfig;
  metadata: FindOneByKeyPromptSnippetMetadata;
  createdById: string;
  updatedById: string;
  /**
   * The date and time the resource was created
   */
  created?: Date | undefined;
  /**
   * The date and time the resource was last updated
   */
  updated?: Date | undefined;
  type: FindOneByKeyPromptSnippetType;
  versions: Array<FindOneByKeyPromptSnippetVersions>;
};

/** @internal */
export const FindOneByKeyPromptSnippetGlobals$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  contactId: z.string().optional(),
});

/** @internal */
export type FindOneByKeyPromptSnippetGlobals$Outbound = {
  contactId?: string | undefined;
};

/** @internal */
export const FindOneByKeyPromptSnippetGlobals$outboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetGlobals$Outbound,
  z.ZodTypeDef,
  FindOneByKeyPromptSnippetGlobals
> = z.object({
  contactId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetGlobals$ {
  /** @deprecated use `FindOneByKeyPromptSnippetGlobals$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippetGlobals$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetGlobals$outboundSchema` instead. */
  export const outboundSchema = FindOneByKeyPromptSnippetGlobals$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetGlobals$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippetGlobals$Outbound;
}

export function findOneByKeyPromptSnippetGlobalsToJSON(
  findOneByKeyPromptSnippetGlobals: FindOneByKeyPromptSnippetGlobals,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetGlobals$outboundSchema.parse(
      findOneByKeyPromptSnippetGlobals,
    ),
  );
}

export function findOneByKeyPromptSnippetGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<FindOneByKeyPromptSnippetGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FindOneByKeyPromptSnippetGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FindOneByKeyPromptSnippetGlobals' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetRequest$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.string(),
});

/** @internal */
export type FindOneByKeyPromptSnippetRequest$Outbound = {
  key: string;
};

/** @internal */
export const FindOneByKeyPromptSnippetRequest$outboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetRequest$Outbound,
  z.ZodTypeDef,
  FindOneByKeyPromptSnippetRequest
> = z.object({
  key: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetRequest$ {
  /** @deprecated use `FindOneByKeyPromptSnippetRequest$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippetRequest$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetRequest$outboundSchema` instead. */
  export const outboundSchema = FindOneByKeyPromptSnippetRequest$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetRequest$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippetRequest$Outbound;
}

export function findOneByKeyPromptSnippetRequestToJSON(
  findOneByKeyPromptSnippetRequest: FindOneByKeyPromptSnippetRequest,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetRequest$outboundSchema.parse(
      findOneByKeyPromptSnippetRequest,
    ),
  );
}

export function findOneByKeyPromptSnippetRequestFromJSON(
  jsonString: string,
): SafeParseResult<FindOneByKeyPromptSnippetRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FindOneByKeyPromptSnippetRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FindOneByKeyPromptSnippetRequest' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetOwner2$inboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippetOwner2
> = z.nativeEnum(FindOneByKeyPromptSnippetOwner2);

/** @internal */
export const FindOneByKeyPromptSnippetOwner2$outboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippetOwner2
> = FindOneByKeyPromptSnippetOwner2$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetOwner2$ {
  /** @deprecated use `FindOneByKeyPromptSnippetOwner2$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippetOwner2$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetOwner2$outboundSchema` instead. */
  export const outboundSchema = FindOneByKeyPromptSnippetOwner2$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetOwner$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetOwner,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), FindOneByKeyPromptSnippetOwner2$inboundSchema]);

/** @internal */
export type FindOneByKeyPromptSnippetOwner$Outbound = string | string;

/** @internal */
export const FindOneByKeyPromptSnippetOwner$outboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetOwner$Outbound,
  z.ZodTypeDef,
  FindOneByKeyPromptSnippetOwner
> = z.union([z.string(), FindOneByKeyPromptSnippetOwner2$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetOwner$ {
  /** @deprecated use `FindOneByKeyPromptSnippetOwner$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippetOwner$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetOwner$outboundSchema` instead. */
  export const outboundSchema = FindOneByKeyPromptSnippetOwner$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetOwner$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippetOwner$Outbound;
}

export function findOneByKeyPromptSnippetOwnerToJSON(
  findOneByKeyPromptSnippetOwner: FindOneByKeyPromptSnippetOwner,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetOwner$outboundSchema.parse(
      findOneByKeyPromptSnippetOwner,
    ),
  );
}

export function findOneByKeyPromptSnippetOwnerFromJSON(
  jsonString: string,
): SafeParseResult<FindOneByKeyPromptSnippetOwner, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FindOneByKeyPromptSnippetOwner$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FindOneByKeyPromptSnippetOwner' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetModelType$inboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippetModelType
> = z.nativeEnum(FindOneByKeyPromptSnippetModelType);

/** @internal */
export const FindOneByKeyPromptSnippetModelType$outboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippetModelType
> = FindOneByKeyPromptSnippetModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetModelType$ {
  /** @deprecated use `FindOneByKeyPromptSnippetModelType$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippetModelType$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetModelType$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetModelType$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetFormat$inboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippetFormat
> = z.nativeEnum(FindOneByKeyPromptSnippetFormat);

/** @internal */
export const FindOneByKeyPromptSnippetFormat$outboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippetFormat
> = FindOneByKeyPromptSnippetFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetFormat$ {
  /** @deprecated use `FindOneByKeyPromptSnippetFormat$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippetFormat$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetFormat$outboundSchema` instead. */
  export const outboundSchema = FindOneByKeyPromptSnippetFormat$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetQuality$inboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippetQuality
> = z.nativeEnum(FindOneByKeyPromptSnippetQuality);

/** @internal */
export const FindOneByKeyPromptSnippetQuality$outboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippetQuality
> = FindOneByKeyPromptSnippetQuality$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetQuality$ {
  /** @deprecated use `FindOneByKeyPromptSnippetQuality$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippetQuality$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetQuality$outboundSchema` instead. */
  export const outboundSchema = FindOneByKeyPromptSnippetQuality$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormatPromptSnippetsType$inboundSchema:
  z.ZodNativeEnum<
    typeof FindOneByKeyPromptSnippetResponseFormatPromptSnippetsType
  > = z.nativeEnum(FindOneByKeyPromptSnippetResponseFormatPromptSnippetsType);

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormatPromptSnippetsType$outboundSchema:
  z.ZodNativeEnum<
    typeof FindOneByKeyPromptSnippetResponseFormatPromptSnippetsType
  > = FindOneByKeyPromptSnippetResponseFormatPromptSnippetsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetResponseFormatPromptSnippetsType$ {
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatPromptSnippetsType$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsType$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatPromptSnippetsType$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsType$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormat2$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetResponseFormat2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FindOneByKeyPromptSnippetResponseFormatPromptSnippetsType$inboundSchema,
});

/** @internal */
export type FindOneByKeyPromptSnippetResponseFormat2$Outbound = {
  type: string;
};

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormat2$outboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetResponseFormat2$Outbound,
  z.ZodTypeDef,
  FindOneByKeyPromptSnippetResponseFormat2
> = z.object({
  type:
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetResponseFormat2$ {
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormat2$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetResponseFormat2$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormat2$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetResponseFormat2$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormat2$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippetResponseFormat2$Outbound;
}

export function findOneByKeyPromptSnippetResponseFormat2ToJSON(
  findOneByKeyPromptSnippetResponseFormat2:
    FindOneByKeyPromptSnippetResponseFormat2,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetResponseFormat2$outboundSchema.parse(
      findOneByKeyPromptSnippetResponseFormat2,
    ),
  );
}

export function findOneByKeyPromptSnippetResponseFormat2FromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippetResponseFormat2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetResponseFormat2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FindOneByKeyPromptSnippetResponseFormat2' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormatType$inboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetResponseFormatType> = z
    .nativeEnum(FindOneByKeyPromptSnippetResponseFormatType);

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormatType$outboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetResponseFormatType> =
    FindOneByKeyPromptSnippetResponseFormatType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetResponseFormatType$ {
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatType$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetResponseFormatType$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatType$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetResponseFormatType$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormatJsonSchema$inboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetResponseFormatJsonSchema,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/** @internal */
export type FindOneByKeyPromptSnippetResponseFormatJsonSchema$Outbound = {
  name: string;
  strict: boolean;
  schema: { [k: string]: any };
};

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormatJsonSchema$outboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetResponseFormatJsonSchema$Outbound,
    z.ZodTypeDef,
    FindOneByKeyPromptSnippetResponseFormatJsonSchema
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetResponseFormatJsonSchema$ {
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatJsonSchema$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetResponseFormatJsonSchema$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatJsonSchema$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetResponseFormatJsonSchema$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatJsonSchema$Outbound` instead. */
  export type Outbound =
    FindOneByKeyPromptSnippetResponseFormatJsonSchema$Outbound;
}

export function findOneByKeyPromptSnippetResponseFormatJsonSchemaToJSON(
  findOneByKeyPromptSnippetResponseFormatJsonSchema:
    FindOneByKeyPromptSnippetResponseFormatJsonSchema,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetResponseFormatJsonSchema$outboundSchema.parse(
      findOneByKeyPromptSnippetResponseFormatJsonSchema,
    ),
  );
}

export function findOneByKeyPromptSnippetResponseFormatJsonSchemaFromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippetResponseFormatJsonSchema,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetResponseFormatJsonSchema$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FindOneByKeyPromptSnippetResponseFormatJsonSchema' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormat1$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetResponseFormat1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FindOneByKeyPromptSnippetResponseFormatType$inboundSchema,
  json_schema: z.lazy(() =>
    FindOneByKeyPromptSnippetResponseFormatJsonSchema$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "json_schema": "jsonSchema",
  });
});

/** @internal */
export type FindOneByKeyPromptSnippetResponseFormat1$Outbound = {
  type: string;
  json_schema: FindOneByKeyPromptSnippetResponseFormatJsonSchema$Outbound;
};

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormat1$outboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetResponseFormat1$Outbound,
  z.ZodTypeDef,
  FindOneByKeyPromptSnippetResponseFormat1
> = z.object({
  type: FindOneByKeyPromptSnippetResponseFormatType$outboundSchema,
  jsonSchema: z.lazy(() =>
    FindOneByKeyPromptSnippetResponseFormatJsonSchema$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    jsonSchema: "json_schema",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetResponseFormat1$ {
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormat1$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetResponseFormat1$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormat1$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetResponseFormat1$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormat1$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippetResponseFormat1$Outbound;
}

export function findOneByKeyPromptSnippetResponseFormat1ToJSON(
  findOneByKeyPromptSnippetResponseFormat1:
    FindOneByKeyPromptSnippetResponseFormat1,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetResponseFormat1$outboundSchema.parse(
      findOneByKeyPromptSnippetResponseFormat1,
    ),
  );
}

export function findOneByKeyPromptSnippetResponseFormat1FromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippetResponseFormat1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetResponseFormat1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FindOneByKeyPromptSnippetResponseFormat1' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormat$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetResponseFormat,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => FindOneByKeyPromptSnippetResponseFormat2$inboundSchema),
  z.lazy(() => FindOneByKeyPromptSnippetResponseFormat1$inboundSchema),
]);

/** @internal */
export type FindOneByKeyPromptSnippetResponseFormat$Outbound =
  | FindOneByKeyPromptSnippetResponseFormat2$Outbound
  | FindOneByKeyPromptSnippetResponseFormat1$Outbound;

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormat$outboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetResponseFormat$Outbound,
  z.ZodTypeDef,
  FindOneByKeyPromptSnippetResponseFormat
> = z.union([
  z.lazy(() => FindOneByKeyPromptSnippetResponseFormat2$outboundSchema),
  z.lazy(() => FindOneByKeyPromptSnippetResponseFormat1$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetResponseFormat$ {
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormat$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetResponseFormat$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormat$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetResponseFormat$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormat$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippetResponseFormat$Outbound;
}

export function findOneByKeyPromptSnippetResponseFormatToJSON(
  findOneByKeyPromptSnippetResponseFormat:
    FindOneByKeyPromptSnippetResponseFormat,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetResponseFormat$outboundSchema.parse(
      findOneByKeyPromptSnippetResponseFormat,
    ),
  );
}

export function findOneByKeyPromptSnippetResponseFormatFromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippetResponseFormat,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetResponseFormat$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FindOneByKeyPromptSnippetResponseFormat' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetPhotoRealVersion$inboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPhotoRealVersion> = z
    .nativeEnum(FindOneByKeyPromptSnippetPhotoRealVersion);

/** @internal */
export const FindOneByKeyPromptSnippetPhotoRealVersion$outboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPhotoRealVersion> =
    FindOneByKeyPromptSnippetPhotoRealVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPhotoRealVersion$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPhotoRealVersion$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPhotoRealVersion$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPhotoRealVersion$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPhotoRealVersion$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetEncodingFormat$inboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetEncodingFormat> = z
    .nativeEnum(FindOneByKeyPromptSnippetEncodingFormat);

/** @internal */
export const FindOneByKeyPromptSnippetEncodingFormat$outboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetEncodingFormat> =
    FindOneByKeyPromptSnippetEncodingFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetEncodingFormat$ {
  /** @deprecated use `FindOneByKeyPromptSnippetEncodingFormat$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetEncodingFormat$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetEncodingFormat$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetEncodingFormat$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetReasoningEffort$inboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetReasoningEffort> = z
    .nativeEnum(FindOneByKeyPromptSnippetReasoningEffort);

/** @internal */
export const FindOneByKeyPromptSnippetReasoningEffort$outboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetReasoningEffort> =
    FindOneByKeyPromptSnippetReasoningEffort$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetReasoningEffort$ {
  /** @deprecated use `FindOneByKeyPromptSnippetReasoningEffort$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetReasoningEffort$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetReasoningEffort$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetReasoningEffort$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetModelParameters$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetModelParameters,
  z.ZodTypeDef,
  unknown
> = z.object({
  temperature: z.number().optional(),
  maxTokens: z.number().optional(),
  topK: z.number().optional(),
  topP: z.number().optional(),
  frequencyPenalty: z.number().optional(),
  presencePenalty: z.number().optional(),
  numImages: z.number().optional(),
  seed: z.number().optional(),
  format: FindOneByKeyPromptSnippetFormat$inboundSchema.optional(),
  dimensions: z.string().optional(),
  quality: FindOneByKeyPromptSnippetQuality$inboundSchema.optional(),
  style: z.string().optional(),
  responseFormat: z.nullable(
    z.union([
      z.lazy(() => FindOneByKeyPromptSnippetResponseFormat2$inboundSchema),
      z.lazy(() => FindOneByKeyPromptSnippetResponseFormat1$inboundSchema),
    ]),
  ).optional(),
  photoRealVersion: FindOneByKeyPromptSnippetPhotoRealVersion$inboundSchema
    .optional(),
  encoding_format: FindOneByKeyPromptSnippetEncodingFormat$inboundSchema
    .optional(),
  reasoningEffort: FindOneByKeyPromptSnippetReasoningEffort$inboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "encoding_format": "encodingFormat",
  });
});

/** @internal */
export type FindOneByKeyPromptSnippetModelParameters$Outbound = {
  temperature?: number | undefined;
  maxTokens?: number | undefined;
  topK?: number | undefined;
  topP?: number | undefined;
  frequencyPenalty?: number | undefined;
  presencePenalty?: number | undefined;
  numImages?: number | undefined;
  seed?: number | undefined;
  format?: string | undefined;
  dimensions?: string | undefined;
  quality?: string | undefined;
  style?: string | undefined;
  responseFormat?:
    | FindOneByKeyPromptSnippetResponseFormat2$Outbound
    | FindOneByKeyPromptSnippetResponseFormat1$Outbound
    | null
    | undefined;
  photoRealVersion?: string | undefined;
  encoding_format?: string | undefined;
  reasoningEffort?: string | undefined;
};

/** @internal */
export const FindOneByKeyPromptSnippetModelParameters$outboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetModelParameters$Outbound,
  z.ZodTypeDef,
  FindOneByKeyPromptSnippetModelParameters
> = z.object({
  temperature: z.number().optional(),
  maxTokens: z.number().optional(),
  topK: z.number().optional(),
  topP: z.number().optional(),
  frequencyPenalty: z.number().optional(),
  presencePenalty: z.number().optional(),
  numImages: z.number().optional(),
  seed: z.number().optional(),
  format: FindOneByKeyPromptSnippetFormat$outboundSchema.optional(),
  dimensions: z.string().optional(),
  quality: FindOneByKeyPromptSnippetQuality$outboundSchema.optional(),
  style: z.string().optional(),
  responseFormat: z.nullable(
    z.union([
      z.lazy(() => FindOneByKeyPromptSnippetResponseFormat2$outboundSchema),
      z.lazy(() => FindOneByKeyPromptSnippetResponseFormat1$outboundSchema),
    ]),
  ).optional(),
  photoRealVersion: FindOneByKeyPromptSnippetPhotoRealVersion$outboundSchema
    .optional(),
  encodingFormat: FindOneByKeyPromptSnippetEncodingFormat$outboundSchema
    .optional(),
  reasoningEffort: FindOneByKeyPromptSnippetReasoningEffort$outboundSchema
    .optional(),
}).transform((v) => {
  return remap$(v, {
    encodingFormat: "encoding_format",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetModelParameters$ {
  /** @deprecated use `FindOneByKeyPromptSnippetModelParameters$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetModelParameters$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetModelParameters$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetModelParameters$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippetModelParameters$Outbound;
}

export function findOneByKeyPromptSnippetModelParametersToJSON(
  findOneByKeyPromptSnippetModelParameters:
    FindOneByKeyPromptSnippetModelParameters,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetModelParameters$outboundSchema.parse(
      findOneByKeyPromptSnippetModelParameters,
    ),
  );
}

export function findOneByKeyPromptSnippetModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippetModelParameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetModelParameters$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FindOneByKeyPromptSnippetModelParameters' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetProvider$inboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippetProvider
> = z.nativeEnum(FindOneByKeyPromptSnippetProvider);

/** @internal */
export const FindOneByKeyPromptSnippetProvider$outboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippetProvider
> = FindOneByKeyPromptSnippetProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetProvider$ {
  /** @deprecated use `FindOneByKeyPromptSnippetProvider$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippetProvider$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetProvider$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetProvider$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetRole$inboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippetRole
> = z.nativeEnum(FindOneByKeyPromptSnippetRole);

/** @internal */
export const FindOneByKeyPromptSnippetRole$outboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippetRole
> = FindOneByKeyPromptSnippetRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetRole$ {
  /** @deprecated use `FindOneByKeyPromptSnippetRole$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippetRole$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetRole$outboundSchema` instead. */
  export const outboundSchema = FindOneByKeyPromptSnippetRole$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippet2PromptSnippetsType$inboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippet2PromptSnippetsType> = z
    .nativeEnum(FindOneByKeyPromptSnippet2PromptSnippetsType);

/** @internal */
export const FindOneByKeyPromptSnippet2PromptSnippetsType$outboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippet2PromptSnippetsType> =
    FindOneByKeyPromptSnippet2PromptSnippetsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippet2PromptSnippetsType$ {
  /** @deprecated use `FindOneByKeyPromptSnippet2PromptSnippetsType$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippet2PromptSnippetsType$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippet2PromptSnippetsType$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippet2PromptSnippetsType$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippet2ImageUrl$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippet2ImageUrl,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  url: z.string(),
  detail: z.string().optional(),
});

/** @internal */
export type FindOneByKeyPromptSnippet2ImageUrl$Outbound = {
  id?: string | undefined;
  url: string;
  detail?: string | undefined;
};

/** @internal */
export const FindOneByKeyPromptSnippet2ImageUrl$outboundSchema: z.ZodType<
  FindOneByKeyPromptSnippet2ImageUrl$Outbound,
  z.ZodTypeDef,
  FindOneByKeyPromptSnippet2ImageUrl
> = z.object({
  id: z.string().optional(),
  url: z.string(),
  detail: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippet2ImageUrl$ {
  /** @deprecated use `FindOneByKeyPromptSnippet2ImageUrl$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippet2ImageUrl$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippet2ImageUrl$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippet2ImageUrl$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippet2ImageUrl$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippet2ImageUrl$Outbound;
}

export function findOneByKeyPromptSnippet2ImageUrlToJSON(
  findOneByKeyPromptSnippet2ImageUrl: FindOneByKeyPromptSnippet2ImageUrl,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippet2ImageUrl$outboundSchema.parse(
      findOneByKeyPromptSnippet2ImageUrl,
    ),
  );
}

export function findOneByKeyPromptSnippet2ImageUrlFromJSON(
  jsonString: string,
): SafeParseResult<FindOneByKeyPromptSnippet2ImageUrl, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippet2ImageUrl$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FindOneByKeyPromptSnippet2ImageUrl' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippet22$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippet22,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FindOneByKeyPromptSnippet2PromptSnippetsType$inboundSchema,
  image_url: z.lazy(() => FindOneByKeyPromptSnippet2ImageUrl$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "image_url": "imageUrl",
  });
});

/** @internal */
export type FindOneByKeyPromptSnippet22$Outbound = {
  type: string;
  image_url: FindOneByKeyPromptSnippet2ImageUrl$Outbound;
};

/** @internal */
export const FindOneByKeyPromptSnippet22$outboundSchema: z.ZodType<
  FindOneByKeyPromptSnippet22$Outbound,
  z.ZodTypeDef,
  FindOneByKeyPromptSnippet22
> = z.object({
  type: FindOneByKeyPromptSnippet2PromptSnippetsType$outboundSchema,
  imageUrl: z.lazy(() => FindOneByKeyPromptSnippet2ImageUrl$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    imageUrl: "image_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippet22$ {
  /** @deprecated use `FindOneByKeyPromptSnippet22$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippet22$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippet22$outboundSchema` instead. */
  export const outboundSchema = FindOneByKeyPromptSnippet22$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippet22$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippet22$Outbound;
}

export function findOneByKeyPromptSnippet22ToJSON(
  findOneByKeyPromptSnippet22: FindOneByKeyPromptSnippet22,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippet22$outboundSchema.parse(
      findOneByKeyPromptSnippet22,
    ),
  );
}

export function findOneByKeyPromptSnippet22FromJSON(
  jsonString: string,
): SafeParseResult<FindOneByKeyPromptSnippet22, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FindOneByKeyPromptSnippet22$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FindOneByKeyPromptSnippet22' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippet2Type$inboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippet2Type
> = z.nativeEnum(FindOneByKeyPromptSnippet2Type);

/** @internal */
export const FindOneByKeyPromptSnippet2Type$outboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippet2Type
> = FindOneByKeyPromptSnippet2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippet2Type$ {
  /** @deprecated use `FindOneByKeyPromptSnippet2Type$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippet2Type$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippet2Type$outboundSchema` instead. */
  export const outboundSchema = FindOneByKeyPromptSnippet2Type$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippet21$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippet21,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FindOneByKeyPromptSnippet2Type$inboundSchema,
  text: z.string(),
});

/** @internal */
export type FindOneByKeyPromptSnippet21$Outbound = {
  type: string;
  text: string;
};

/** @internal */
export const FindOneByKeyPromptSnippet21$outboundSchema: z.ZodType<
  FindOneByKeyPromptSnippet21$Outbound,
  z.ZodTypeDef,
  FindOneByKeyPromptSnippet21
> = z.object({
  type: FindOneByKeyPromptSnippet2Type$outboundSchema,
  text: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippet21$ {
  /** @deprecated use `FindOneByKeyPromptSnippet21$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippet21$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippet21$outboundSchema` instead. */
  export const outboundSchema = FindOneByKeyPromptSnippet21$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippet21$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippet21$Outbound;
}

export function findOneByKeyPromptSnippet21ToJSON(
  findOneByKeyPromptSnippet21: FindOneByKeyPromptSnippet21,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippet21$outboundSchema.parse(
      findOneByKeyPromptSnippet21,
    ),
  );
}

export function findOneByKeyPromptSnippet21FromJSON(
  jsonString: string,
): SafeParseResult<FindOneByKeyPromptSnippet21, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FindOneByKeyPromptSnippet21$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FindOneByKeyPromptSnippet21' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetContent2$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetContent2,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => FindOneByKeyPromptSnippet21$inboundSchema),
  z.lazy(() => FindOneByKeyPromptSnippet22$inboundSchema),
]);

/** @internal */
export type FindOneByKeyPromptSnippetContent2$Outbound =
  | FindOneByKeyPromptSnippet21$Outbound
  | FindOneByKeyPromptSnippet22$Outbound;

/** @internal */
export const FindOneByKeyPromptSnippetContent2$outboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetContent2$Outbound,
  z.ZodTypeDef,
  FindOneByKeyPromptSnippetContent2
> = z.union([
  z.lazy(() => FindOneByKeyPromptSnippet21$outboundSchema),
  z.lazy(() => FindOneByKeyPromptSnippet22$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetContent2$ {
  /** @deprecated use `FindOneByKeyPromptSnippetContent2$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippetContent2$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetContent2$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetContent2$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetContent2$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippetContent2$Outbound;
}

export function findOneByKeyPromptSnippetContent2ToJSON(
  findOneByKeyPromptSnippetContent2: FindOneByKeyPromptSnippetContent2,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetContent2$outboundSchema.parse(
      findOneByKeyPromptSnippetContent2,
    ),
  );
}

export function findOneByKeyPromptSnippetContent2FromJSON(
  jsonString: string,
): SafeParseResult<FindOneByKeyPromptSnippetContent2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FindOneByKeyPromptSnippetContent2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FindOneByKeyPromptSnippetContent2' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetContent$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetContent,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => FindOneByKeyPromptSnippet21$inboundSchema),
    z.lazy(() => FindOneByKeyPromptSnippet22$inboundSchema),
  ])),
]);

/** @internal */
export type FindOneByKeyPromptSnippetContent$Outbound =
  | string
  | Array<
    FindOneByKeyPromptSnippet21$Outbound | FindOneByKeyPromptSnippet22$Outbound
  >;

/** @internal */
export const FindOneByKeyPromptSnippetContent$outboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetContent$Outbound,
  z.ZodTypeDef,
  FindOneByKeyPromptSnippetContent
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => FindOneByKeyPromptSnippet21$outboundSchema),
    z.lazy(() => FindOneByKeyPromptSnippet22$outboundSchema),
  ])),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetContent$ {
  /** @deprecated use `FindOneByKeyPromptSnippetContent$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippetContent$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetContent$outboundSchema` instead. */
  export const outboundSchema = FindOneByKeyPromptSnippetContent$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetContent$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippetContent$Outbound;
}

export function findOneByKeyPromptSnippetContentToJSON(
  findOneByKeyPromptSnippetContent: FindOneByKeyPromptSnippetContent,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetContent$outboundSchema.parse(
      findOneByKeyPromptSnippetContent,
    ),
  );
}

export function findOneByKeyPromptSnippetContentFromJSON(
  jsonString: string,
): SafeParseResult<FindOneByKeyPromptSnippetContent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FindOneByKeyPromptSnippetContent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FindOneByKeyPromptSnippetContent' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsType$inboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPromptSnippetsType> = z
    .nativeEnum(FindOneByKeyPromptSnippetPromptSnippetsType);

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsType$outboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPromptSnippetsType> =
    FindOneByKeyPromptSnippetPromptSnippetsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsType$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsType$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsType$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsType$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsType$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetFunction$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/** @internal */
export type FindOneByKeyPromptSnippetFunction$Outbound = {
  name: string;
  arguments: string;
};

/** @internal */
export const FindOneByKeyPromptSnippetFunction$outboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetFunction$Outbound,
  z.ZodTypeDef,
  FindOneByKeyPromptSnippetFunction
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetFunction$ {
  /** @deprecated use `FindOneByKeyPromptSnippetFunction$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippetFunction$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetFunction$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetFunction$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetFunction$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippetFunction$Outbound;
}

export function findOneByKeyPromptSnippetFunctionToJSON(
  findOneByKeyPromptSnippetFunction: FindOneByKeyPromptSnippetFunction,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetFunction$outboundSchema.parse(
      findOneByKeyPromptSnippetFunction,
    ),
  );
}

export function findOneByKeyPromptSnippetFunctionFromJSON(
  jsonString: string,
): SafeParseResult<FindOneByKeyPromptSnippetFunction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FindOneByKeyPromptSnippetFunction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FindOneByKeyPromptSnippetFunction' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetToolCalls$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetToolCalls,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: FindOneByKeyPromptSnippetPromptSnippetsType$inboundSchema,
  function: z.lazy(() => FindOneByKeyPromptSnippetFunction$inboundSchema),
});

/** @internal */
export type FindOneByKeyPromptSnippetToolCalls$Outbound = {
  id?: string | undefined;
  index?: number | undefined;
  type: string;
  function: FindOneByKeyPromptSnippetFunction$Outbound;
};

/** @internal */
export const FindOneByKeyPromptSnippetToolCalls$outboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetToolCalls$Outbound,
  z.ZodTypeDef,
  FindOneByKeyPromptSnippetToolCalls
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: FindOneByKeyPromptSnippetPromptSnippetsType$outboundSchema,
  function: z.lazy(() => FindOneByKeyPromptSnippetFunction$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetToolCalls$ {
  /** @deprecated use `FindOneByKeyPromptSnippetToolCalls$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippetToolCalls$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetToolCalls$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetToolCalls$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetToolCalls$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippetToolCalls$Outbound;
}

export function findOneByKeyPromptSnippetToolCallsToJSON(
  findOneByKeyPromptSnippetToolCalls: FindOneByKeyPromptSnippetToolCalls,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetToolCalls$outboundSchema.parse(
      findOneByKeyPromptSnippetToolCalls,
    ),
  );
}

export function findOneByKeyPromptSnippetToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<FindOneByKeyPromptSnippetToolCalls, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetToolCalls$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FindOneByKeyPromptSnippetToolCalls' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetMessages$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetMessages,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: FindOneByKeyPromptSnippetRole$inboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => FindOneByKeyPromptSnippet21$inboundSchema),
      z.lazy(() => FindOneByKeyPromptSnippet22$inboundSchema),
    ])),
  ]),
  tool_calls: z.array(
    z.lazy(() => FindOneByKeyPromptSnippetToolCalls$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "tool_calls": "toolCalls",
  });
});

/** @internal */
export type FindOneByKeyPromptSnippetMessages$Outbound = {
  role: string;
  content:
    | string
    | Array<
      | FindOneByKeyPromptSnippet21$Outbound
      | FindOneByKeyPromptSnippet22$Outbound
    >;
  tool_calls?: Array<FindOneByKeyPromptSnippetToolCalls$Outbound> | undefined;
};

/** @internal */
export const FindOneByKeyPromptSnippetMessages$outboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetMessages$Outbound,
  z.ZodTypeDef,
  FindOneByKeyPromptSnippetMessages
> = z.object({
  role: FindOneByKeyPromptSnippetRole$outboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => FindOneByKeyPromptSnippet21$outboundSchema),
      z.lazy(() => FindOneByKeyPromptSnippet22$outboundSchema),
    ])),
  ]),
  toolCalls: z.array(
    z.lazy(() => FindOneByKeyPromptSnippetToolCalls$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    toolCalls: "tool_calls",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetMessages$ {
  /** @deprecated use `FindOneByKeyPromptSnippetMessages$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippetMessages$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetMessages$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetMessages$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetMessages$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippetMessages$Outbound;
}

export function findOneByKeyPromptSnippetMessagesToJSON(
  findOneByKeyPromptSnippetMessages: FindOneByKeyPromptSnippetMessages,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetMessages$outboundSchema.parse(
      findOneByKeyPromptSnippetMessages,
    ),
  );
}

export function findOneByKeyPromptSnippetMessagesFromJSON(
  jsonString: string,
): SafeParseResult<FindOneByKeyPromptSnippetMessages, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FindOneByKeyPromptSnippetMessages$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FindOneByKeyPromptSnippetMessages' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptConfig$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetPromptConfig,
  z.ZodTypeDef,
  unknown
> = z.object({
  stream: z.boolean().optional(),
  model: z.string().optional(),
  model_db_id: z.string().optional(),
  model_type: FindOneByKeyPromptSnippetModelType$inboundSchema.optional(),
  model_parameters: z.lazy(() =>
    FindOneByKeyPromptSnippetModelParameters$inboundSchema
  ).optional(),
  provider: FindOneByKeyPromptSnippetProvider$inboundSchema.optional(),
  integration_id: z.nullable(z.string()).optional(),
  version: z.string().optional(),
  messages: z.array(
    z.lazy(() => FindOneByKeyPromptSnippetMessages$inboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    "model_db_id": "modelDbId",
    "model_type": "modelType",
    "model_parameters": "modelParameters",
    "integration_id": "integrationId",
  });
});

/** @internal */
export type FindOneByKeyPromptSnippetPromptConfig$Outbound = {
  stream?: boolean | undefined;
  model?: string | undefined;
  model_db_id?: string | undefined;
  model_type?: string | undefined;
  model_parameters?:
    | FindOneByKeyPromptSnippetModelParameters$Outbound
    | undefined;
  provider?: string | undefined;
  integration_id?: string | null | undefined;
  version?: string | undefined;
  messages: Array<FindOneByKeyPromptSnippetMessages$Outbound>;
};

/** @internal */
export const FindOneByKeyPromptSnippetPromptConfig$outboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetPromptConfig$Outbound,
  z.ZodTypeDef,
  FindOneByKeyPromptSnippetPromptConfig
> = z.object({
  stream: z.boolean().optional(),
  model: z.string().optional(),
  modelDbId: z.string().optional(),
  modelType: FindOneByKeyPromptSnippetModelType$outboundSchema.optional(),
  modelParameters: z.lazy(() =>
    FindOneByKeyPromptSnippetModelParameters$outboundSchema
  ).optional(),
  provider: FindOneByKeyPromptSnippetProvider$outboundSchema.optional(),
  integrationId: z.nullable(z.string()).optional(),
  version: z.string().optional(),
  messages: z.array(
    z.lazy(() => FindOneByKeyPromptSnippetMessages$outboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    modelDbId: "model_db_id",
    modelType: "model_type",
    modelParameters: "model_parameters",
    integrationId: "integration_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptConfig$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptConfig$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptConfig$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptConfig$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptConfig$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptConfig$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippetPromptConfig$Outbound;
}

export function findOneByKeyPromptSnippetPromptConfigToJSON(
  findOneByKeyPromptSnippetPromptConfig: FindOneByKeyPromptSnippetPromptConfig,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetPromptConfig$outboundSchema.parse(
      findOneByKeyPromptSnippetPromptConfig,
    ),
  );
}

export function findOneByKeyPromptSnippetPromptConfigFromJSON(
  jsonString: string,
): SafeParseResult<FindOneByKeyPromptSnippetPromptConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetPromptConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FindOneByKeyPromptSnippetPromptConfig' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetUseCases$inboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippetUseCases
> = z.nativeEnum(FindOneByKeyPromptSnippetUseCases);

/** @internal */
export const FindOneByKeyPromptSnippetUseCases$outboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippetUseCases
> = FindOneByKeyPromptSnippetUseCases$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetUseCases$ {
  /** @deprecated use `FindOneByKeyPromptSnippetUseCases$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippetUseCases$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetUseCases$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetUseCases$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetLanguage$inboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippetLanguage
> = z.nativeEnum(FindOneByKeyPromptSnippetLanguage);

/** @internal */
export const FindOneByKeyPromptSnippetLanguage$outboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippetLanguage
> = FindOneByKeyPromptSnippetLanguage$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetLanguage$ {
  /** @deprecated use `FindOneByKeyPromptSnippetLanguage$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippetLanguage$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetLanguage$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetLanguage$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetMetadata$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({
  use_cases: z.array(FindOneByKeyPromptSnippetUseCases$inboundSchema)
    .optional(),
  language: FindOneByKeyPromptSnippetLanguage$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "use_cases": "useCases",
  });
});

/** @internal */
export type FindOneByKeyPromptSnippetMetadata$Outbound = {
  use_cases?: Array<string> | undefined;
  language?: string | undefined;
};

/** @internal */
export const FindOneByKeyPromptSnippetMetadata$outboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetMetadata$Outbound,
  z.ZodTypeDef,
  FindOneByKeyPromptSnippetMetadata
> = z.object({
  useCases: z.array(FindOneByKeyPromptSnippetUseCases$outboundSchema)
    .optional(),
  language: FindOneByKeyPromptSnippetLanguage$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    useCases: "use_cases",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetMetadata$ {
  /** @deprecated use `FindOneByKeyPromptSnippetMetadata$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippetMetadata$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetMetadata$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetMetadata$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetMetadata$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippetMetadata$Outbound;
}

export function findOneByKeyPromptSnippetMetadataToJSON(
  findOneByKeyPromptSnippetMetadata: FindOneByKeyPromptSnippetMetadata,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetMetadata$outboundSchema.parse(
      findOneByKeyPromptSnippetMetadata,
    ),
  );
}

export function findOneByKeyPromptSnippetMetadataFromJSON(
  jsonString: string,
): SafeParseResult<FindOneByKeyPromptSnippetMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FindOneByKeyPromptSnippetMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FindOneByKeyPromptSnippetMetadata' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetType$inboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippetType
> = z.nativeEnum(FindOneByKeyPromptSnippetType);

/** @internal */
export const FindOneByKeyPromptSnippetType$outboundSchema: z.ZodNativeEnum<
  typeof FindOneByKeyPromptSnippetType
> = FindOneByKeyPromptSnippetType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetType$ {
  /** @deprecated use `FindOneByKeyPromptSnippetType$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippetType$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetType$outboundSchema` instead. */
  export const outboundSchema = FindOneByKeyPromptSnippetType$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsModelType$inboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPromptSnippetsModelType> = z
    .nativeEnum(FindOneByKeyPromptSnippetPromptSnippetsModelType);

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsModelType$outboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPromptSnippetsModelType> =
    FindOneByKeyPromptSnippetPromptSnippetsModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsModelType$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsModelType$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsModelType$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsModelType$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsModelType$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsFormat$inboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPromptSnippetsFormat> = z
    .nativeEnum(FindOneByKeyPromptSnippetPromptSnippetsFormat);

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsFormat$outboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPromptSnippetsFormat> =
    FindOneByKeyPromptSnippetPromptSnippetsFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsFormat$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsFormat$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsFormat$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsFormat$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsFormat$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsQuality$inboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPromptSnippetsQuality> = z
    .nativeEnum(FindOneByKeyPromptSnippetPromptSnippetsQuality);

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsQuality$outboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPromptSnippetsQuality> =
    FindOneByKeyPromptSnippetPromptSnippetsQuality$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsQuality$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsQuality$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsQuality$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsQuality$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsQuality$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponse200Type
  > = z.nativeEnum(
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponse200Type,
  );

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponse200Type
  > =
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponse200Type$ {
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponse200Type$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponse200Type$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormatPromptSnippets2$inboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetResponseFormatPromptSnippets2,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponse200Type$inboundSchema,
  });

/** @internal */
export type FindOneByKeyPromptSnippetResponseFormatPromptSnippets2$Outbound = {
  type: string;
};

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormatPromptSnippets2$outboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetResponseFormatPromptSnippets2$Outbound,
    z.ZodTypeDef,
    FindOneByKeyPromptSnippetResponseFormatPromptSnippets2
  > = z.object({
    type:
      FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponse200Type$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetResponseFormatPromptSnippets2$ {
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatPromptSnippets2$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetResponseFormatPromptSnippets2$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatPromptSnippets2$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetResponseFormatPromptSnippets2$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatPromptSnippets2$Outbound` instead. */
  export type Outbound =
    FindOneByKeyPromptSnippetResponseFormatPromptSnippets2$Outbound;
}

export function findOneByKeyPromptSnippetResponseFormatPromptSnippets2ToJSON(
  findOneByKeyPromptSnippetResponseFormatPromptSnippets2:
    FindOneByKeyPromptSnippetResponseFormatPromptSnippets2,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetResponseFormatPromptSnippets2$outboundSchema.parse(
      findOneByKeyPromptSnippetResponseFormatPromptSnippets2,
    ),
  );
}

export function findOneByKeyPromptSnippetResponseFormatPromptSnippets2FromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippetResponseFormatPromptSnippets2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetResponseFormatPromptSnippets2$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FindOneByKeyPromptSnippetResponseFormatPromptSnippets2' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponseType$inboundSchema:
  z.ZodNativeEnum<
    typeof FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponseType
  > = z.nativeEnum(
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponseType,
  );

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponseType$outboundSchema:
  z.ZodNativeEnum<
    typeof FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponseType
  > =
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponseType$ {
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponseType$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponseType$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema$inboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/** @internal */
export type FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema$Outbound =
  {
    name: string;
    strict: boolean;
    schema: { [k: string]: any };
  };

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema$outboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema$Outbound,
    z.ZodTypeDef,
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema
  > = z.object({
    name: z.string(),
    strict: z.boolean(),
    schema: z.record(z.any()),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema$ {
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema$Outbound` instead. */
  export type Outbound =
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema$Outbound;
}

export function findOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchemaToJSON(
  findOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema:
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema$outboundSchema
      .parse(findOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema),
  );
}

export function findOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchemaFromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormatPromptSnippets1$inboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetResponseFormatPromptSnippets1,
    z.ZodTypeDef,
    unknown
  > = z.object({
    type:
      FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponseType$inboundSchema,
    json_schema: z.lazy(() =>
      FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema$inboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      "json_schema": "jsonSchema",
    });
  });

/** @internal */
export type FindOneByKeyPromptSnippetResponseFormatPromptSnippets1$Outbound = {
  type: string;
  json_schema:
    FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema$Outbound;
};

/** @internal */
export const FindOneByKeyPromptSnippetResponseFormatPromptSnippets1$outboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetResponseFormatPromptSnippets1$Outbound,
    z.ZodTypeDef,
    FindOneByKeyPromptSnippetResponseFormatPromptSnippets1
  > = z.object({
    type:
      FindOneByKeyPromptSnippetResponseFormatPromptSnippetsResponseType$outboundSchema,
    jsonSchema: z.lazy(() =>
      FindOneByKeyPromptSnippetResponseFormatPromptSnippetsJsonSchema$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      jsonSchema: "json_schema",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetResponseFormatPromptSnippets1$ {
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatPromptSnippets1$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetResponseFormatPromptSnippets1$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatPromptSnippets1$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetResponseFormatPromptSnippets1$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseFormatPromptSnippets1$Outbound` instead. */
  export type Outbound =
    FindOneByKeyPromptSnippetResponseFormatPromptSnippets1$Outbound;
}

export function findOneByKeyPromptSnippetResponseFormatPromptSnippets1ToJSON(
  findOneByKeyPromptSnippetResponseFormatPromptSnippets1:
    FindOneByKeyPromptSnippetResponseFormatPromptSnippets1,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetResponseFormatPromptSnippets1$outboundSchema.parse(
      findOneByKeyPromptSnippetResponseFormatPromptSnippets1,
    ),
  );
}

export function findOneByKeyPromptSnippetResponseFormatPromptSnippets1FromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippetResponseFormatPromptSnippets1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetResponseFormatPromptSnippets1$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FindOneByKeyPromptSnippetResponseFormatPromptSnippets1' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsResponseFormat$inboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetPromptSnippetsResponseFormat,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      FindOneByKeyPromptSnippetResponseFormatPromptSnippets2$inboundSchema
    ),
    z.lazy(() =>
      FindOneByKeyPromptSnippetResponseFormatPromptSnippets1$inboundSchema
    ),
  ]);

/** @internal */
export type FindOneByKeyPromptSnippetPromptSnippetsResponseFormat$Outbound =
  | FindOneByKeyPromptSnippetResponseFormatPromptSnippets2$Outbound
  | FindOneByKeyPromptSnippetResponseFormatPromptSnippets1$Outbound;

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsResponseFormat$outboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetPromptSnippetsResponseFormat$Outbound,
    z.ZodTypeDef,
    FindOneByKeyPromptSnippetPromptSnippetsResponseFormat
  > = z.union([
    z.lazy(() =>
      FindOneByKeyPromptSnippetResponseFormatPromptSnippets2$outboundSchema
    ),
    z.lazy(() =>
      FindOneByKeyPromptSnippetResponseFormatPromptSnippets1$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsResponseFormat$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsResponseFormat$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsResponseFormat$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsResponseFormat$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsResponseFormat$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsResponseFormat$Outbound` instead. */
  export type Outbound =
    FindOneByKeyPromptSnippetPromptSnippetsResponseFormat$Outbound;
}

export function findOneByKeyPromptSnippetPromptSnippetsResponseFormatToJSON(
  findOneByKeyPromptSnippetPromptSnippetsResponseFormat:
    FindOneByKeyPromptSnippetPromptSnippetsResponseFormat,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetPromptSnippetsResponseFormat$outboundSchema.parse(
      findOneByKeyPromptSnippetPromptSnippetsResponseFormat,
    ),
  );
}

export function findOneByKeyPromptSnippetPromptSnippetsResponseFormatFromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippetPromptSnippetsResponseFormat,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetPromptSnippetsResponseFormat$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FindOneByKeyPromptSnippetPromptSnippetsResponseFormat' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsPhotoRealVersion$inboundSchema:
  z.ZodNativeEnum<
    typeof FindOneByKeyPromptSnippetPromptSnippetsPhotoRealVersion
  > = z.nativeEnum(FindOneByKeyPromptSnippetPromptSnippetsPhotoRealVersion);

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsPhotoRealVersion$outboundSchema:
  z.ZodNativeEnum<
    typeof FindOneByKeyPromptSnippetPromptSnippetsPhotoRealVersion
  > = FindOneByKeyPromptSnippetPromptSnippetsPhotoRealVersion$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsPhotoRealVersion$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsPhotoRealVersion$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsPhotoRealVersion$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsPhotoRealVersion$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsPhotoRealVersion$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsEncodingFormat$inboundSchema:
  z.ZodNativeEnum<
    typeof FindOneByKeyPromptSnippetPromptSnippetsEncodingFormat
  > = z.nativeEnum(FindOneByKeyPromptSnippetPromptSnippetsEncodingFormat);

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsEncodingFormat$outboundSchema:
  z.ZodNativeEnum<
    typeof FindOneByKeyPromptSnippetPromptSnippetsEncodingFormat
  > = FindOneByKeyPromptSnippetPromptSnippetsEncodingFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsEncodingFormat$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsEncodingFormat$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsEncodingFormat$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsEncodingFormat$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsEncodingFormat$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsReasoningEffort$inboundSchema:
  z.ZodNativeEnum<
    typeof FindOneByKeyPromptSnippetPromptSnippetsReasoningEffort
  > = z.nativeEnum(FindOneByKeyPromptSnippetPromptSnippetsReasoningEffort);

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsReasoningEffort$outboundSchema:
  z.ZodNativeEnum<
    typeof FindOneByKeyPromptSnippetPromptSnippetsReasoningEffort
  > = FindOneByKeyPromptSnippetPromptSnippetsReasoningEffort$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsReasoningEffort$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsReasoningEffort$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsReasoningEffort$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsReasoningEffort$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsReasoningEffort$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsModelParameters$inboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetPromptSnippetsModelParameters,
    z.ZodTypeDef,
    unknown
  > = z.object({
    temperature: z.number().optional(),
    maxTokens: z.number().optional(),
    topK: z.number().optional(),
    topP: z.number().optional(),
    frequencyPenalty: z.number().optional(),
    presencePenalty: z.number().optional(),
    numImages: z.number().optional(),
    seed: z.number().optional(),
    format: FindOneByKeyPromptSnippetPromptSnippetsFormat$inboundSchema
      .optional(),
    dimensions: z.string().optional(),
    quality: FindOneByKeyPromptSnippetPromptSnippetsQuality$inboundSchema
      .optional(),
    style: z.string().optional(),
    responseFormat: z.nullable(
      z.union([
        z.lazy(() =>
          FindOneByKeyPromptSnippetResponseFormatPromptSnippets2$inboundSchema
        ),
        z.lazy(() =>
          FindOneByKeyPromptSnippetResponseFormatPromptSnippets1$inboundSchema
        ),
      ]),
    ).optional(),
    photoRealVersion:
      FindOneByKeyPromptSnippetPromptSnippetsPhotoRealVersion$inboundSchema
        .optional(),
    encoding_format:
      FindOneByKeyPromptSnippetPromptSnippetsEncodingFormat$inboundSchema
        .optional(),
    reasoningEffort:
      FindOneByKeyPromptSnippetPromptSnippetsReasoningEffort$inboundSchema
        .optional(),
  }).transform((v) => {
    return remap$(v, {
      "encoding_format": "encodingFormat",
    });
  });

/** @internal */
export type FindOneByKeyPromptSnippetPromptSnippetsModelParameters$Outbound = {
  temperature?: number | undefined;
  maxTokens?: number | undefined;
  topK?: number | undefined;
  topP?: number | undefined;
  frequencyPenalty?: number | undefined;
  presencePenalty?: number | undefined;
  numImages?: number | undefined;
  seed?: number | undefined;
  format?: string | undefined;
  dimensions?: string | undefined;
  quality?: string | undefined;
  style?: string | undefined;
  responseFormat?:
    | FindOneByKeyPromptSnippetResponseFormatPromptSnippets2$Outbound
    | FindOneByKeyPromptSnippetResponseFormatPromptSnippets1$Outbound
    | null
    | undefined;
  photoRealVersion?: string | undefined;
  encoding_format?: string | undefined;
  reasoningEffort?: string | undefined;
};

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsModelParameters$outboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetPromptSnippetsModelParameters$Outbound,
    z.ZodTypeDef,
    FindOneByKeyPromptSnippetPromptSnippetsModelParameters
  > = z.object({
    temperature: z.number().optional(),
    maxTokens: z.number().optional(),
    topK: z.number().optional(),
    topP: z.number().optional(),
    frequencyPenalty: z.number().optional(),
    presencePenalty: z.number().optional(),
    numImages: z.number().optional(),
    seed: z.number().optional(),
    format: FindOneByKeyPromptSnippetPromptSnippetsFormat$outboundSchema
      .optional(),
    dimensions: z.string().optional(),
    quality: FindOneByKeyPromptSnippetPromptSnippetsQuality$outboundSchema
      .optional(),
    style: z.string().optional(),
    responseFormat: z.nullable(
      z.union([
        z.lazy(() =>
          FindOneByKeyPromptSnippetResponseFormatPromptSnippets2$outboundSchema
        ),
        z.lazy(() =>
          FindOneByKeyPromptSnippetResponseFormatPromptSnippets1$outboundSchema
        ),
      ]),
    ).optional(),
    photoRealVersion:
      FindOneByKeyPromptSnippetPromptSnippetsPhotoRealVersion$outboundSchema
        .optional(),
    encodingFormat:
      FindOneByKeyPromptSnippetPromptSnippetsEncodingFormat$outboundSchema
        .optional(),
    reasoningEffort:
      FindOneByKeyPromptSnippetPromptSnippetsReasoningEffort$outboundSchema
        .optional(),
  }).transform((v) => {
    return remap$(v, {
      encodingFormat: "encoding_format",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsModelParameters$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsModelParameters$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsModelParameters$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsModelParameters$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsModelParameters$Outbound` instead. */
  export type Outbound =
    FindOneByKeyPromptSnippetPromptSnippetsModelParameters$Outbound;
}

export function findOneByKeyPromptSnippetPromptSnippetsModelParametersToJSON(
  findOneByKeyPromptSnippetPromptSnippetsModelParameters:
    FindOneByKeyPromptSnippetPromptSnippetsModelParameters,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetPromptSnippetsModelParameters$outboundSchema.parse(
      findOneByKeyPromptSnippetPromptSnippetsModelParameters,
    ),
  );
}

export function findOneByKeyPromptSnippetPromptSnippetsModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippetPromptSnippetsModelParameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetPromptSnippetsModelParameters$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'FindOneByKeyPromptSnippetPromptSnippetsModelParameters' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsProvider$inboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPromptSnippetsProvider> = z
    .nativeEnum(FindOneByKeyPromptSnippetPromptSnippetsProvider);

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsProvider$outboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPromptSnippetsProvider> =
    FindOneByKeyPromptSnippetPromptSnippetsProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsProvider$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsProvider$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsProvider$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsProvider$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsProvider$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsRole$inboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPromptSnippetsRole> = z
    .nativeEnum(FindOneByKeyPromptSnippetPromptSnippetsRole);

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsRole$outboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPromptSnippetsRole> =
    FindOneByKeyPromptSnippetPromptSnippetsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsRole$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsRole$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsRole$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsRole$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsRole$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippet2PromptSnippetsResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof FindOneByKeyPromptSnippet2PromptSnippetsResponse200Type
  > = z.nativeEnum(FindOneByKeyPromptSnippet2PromptSnippetsResponse200Type);

/** @internal */
export const FindOneByKeyPromptSnippet2PromptSnippetsResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof FindOneByKeyPromptSnippet2PromptSnippetsResponse200Type
  > = FindOneByKeyPromptSnippet2PromptSnippetsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippet2PromptSnippetsResponse200Type$ {
  /** @deprecated use `FindOneByKeyPromptSnippet2PromptSnippetsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippet2PromptSnippetsResponse200Type$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippet2PromptSnippetsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippet2PromptSnippetsResponse200Type$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippet2PromptSnippetsImageUrl$inboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippet2PromptSnippetsImageUrl,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    url: z.string(),
    detail: z.string().optional(),
  });

/** @internal */
export type FindOneByKeyPromptSnippet2PromptSnippetsImageUrl$Outbound = {
  id?: string | undefined;
  url: string;
  detail?: string | undefined;
};

/** @internal */
export const FindOneByKeyPromptSnippet2PromptSnippetsImageUrl$outboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippet2PromptSnippetsImageUrl$Outbound,
    z.ZodTypeDef,
    FindOneByKeyPromptSnippet2PromptSnippetsImageUrl
  > = z.object({
    id: z.string().optional(),
    url: z.string(),
    detail: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippet2PromptSnippetsImageUrl$ {
  /** @deprecated use `FindOneByKeyPromptSnippet2PromptSnippetsImageUrl$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippet2PromptSnippetsImageUrl$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippet2PromptSnippetsImageUrl$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippet2PromptSnippetsImageUrl$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippet2PromptSnippetsImageUrl$Outbound` instead. */
  export type Outbound =
    FindOneByKeyPromptSnippet2PromptSnippetsImageUrl$Outbound;
}

export function findOneByKeyPromptSnippet2PromptSnippetsImageUrlToJSON(
  findOneByKeyPromptSnippet2PromptSnippetsImageUrl:
    FindOneByKeyPromptSnippet2PromptSnippetsImageUrl,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippet2PromptSnippetsImageUrl$outboundSchema.parse(
      findOneByKeyPromptSnippet2PromptSnippetsImageUrl,
    ),
  );
}

export function findOneByKeyPromptSnippet2PromptSnippetsImageUrlFromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippet2PromptSnippetsImageUrl,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippet2PromptSnippetsImageUrl$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FindOneByKeyPromptSnippet2PromptSnippetsImageUrl' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippet2PromptSnippets2$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippet2PromptSnippets2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FindOneByKeyPromptSnippet2PromptSnippetsResponse200Type$inboundSchema,
  image_url: z.lazy(() =>
    FindOneByKeyPromptSnippet2PromptSnippetsImageUrl$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "image_url": "imageUrl",
  });
});

/** @internal */
export type FindOneByKeyPromptSnippet2PromptSnippets2$Outbound = {
  type: string;
  image_url: FindOneByKeyPromptSnippet2PromptSnippetsImageUrl$Outbound;
};

/** @internal */
export const FindOneByKeyPromptSnippet2PromptSnippets2$outboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippet2PromptSnippets2$Outbound,
    z.ZodTypeDef,
    FindOneByKeyPromptSnippet2PromptSnippets2
  > = z.object({
    type:
      FindOneByKeyPromptSnippet2PromptSnippetsResponse200Type$outboundSchema,
    imageUrl: z.lazy(() =>
      FindOneByKeyPromptSnippet2PromptSnippetsImageUrl$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      imageUrl: "image_url",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippet2PromptSnippets2$ {
  /** @deprecated use `FindOneByKeyPromptSnippet2PromptSnippets2$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippet2PromptSnippets2$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippet2PromptSnippets2$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippet2PromptSnippets2$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippet2PromptSnippets2$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippet2PromptSnippets2$Outbound;
}

export function findOneByKeyPromptSnippet2PromptSnippets2ToJSON(
  findOneByKeyPromptSnippet2PromptSnippets2:
    FindOneByKeyPromptSnippet2PromptSnippets2,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippet2PromptSnippets2$outboundSchema.parse(
      findOneByKeyPromptSnippet2PromptSnippets2,
    ),
  );
}

export function findOneByKeyPromptSnippet2PromptSnippets2FromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippet2PromptSnippets2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippet2PromptSnippets2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FindOneByKeyPromptSnippet2PromptSnippets2' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippet2PromptSnippetsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippet2PromptSnippetsResponseType> =
    z.nativeEnum(FindOneByKeyPromptSnippet2PromptSnippetsResponseType);

/** @internal */
export const FindOneByKeyPromptSnippet2PromptSnippetsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippet2PromptSnippetsResponseType> =
    FindOneByKeyPromptSnippet2PromptSnippetsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippet2PromptSnippetsResponseType$ {
  /** @deprecated use `FindOneByKeyPromptSnippet2PromptSnippetsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippet2PromptSnippetsResponseType$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippet2PromptSnippetsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippet2PromptSnippetsResponseType$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippet2PromptSnippets1$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippet2PromptSnippets1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FindOneByKeyPromptSnippet2PromptSnippetsResponseType$inboundSchema,
  text: z.string(),
});

/** @internal */
export type FindOneByKeyPromptSnippet2PromptSnippets1$Outbound = {
  type: string;
  text: string;
};

/** @internal */
export const FindOneByKeyPromptSnippet2PromptSnippets1$outboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippet2PromptSnippets1$Outbound,
    z.ZodTypeDef,
    FindOneByKeyPromptSnippet2PromptSnippets1
  > = z.object({
    type: FindOneByKeyPromptSnippet2PromptSnippetsResponseType$outboundSchema,
    text: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippet2PromptSnippets1$ {
  /** @deprecated use `FindOneByKeyPromptSnippet2PromptSnippets1$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippet2PromptSnippets1$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippet2PromptSnippets1$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippet2PromptSnippets1$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippet2PromptSnippets1$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippet2PromptSnippets1$Outbound;
}

export function findOneByKeyPromptSnippet2PromptSnippets1ToJSON(
  findOneByKeyPromptSnippet2PromptSnippets1:
    FindOneByKeyPromptSnippet2PromptSnippets1,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippet2PromptSnippets1$outboundSchema.parse(
      findOneByKeyPromptSnippet2PromptSnippets1,
    ),
  );
}

export function findOneByKeyPromptSnippet2PromptSnippets1FromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippet2PromptSnippets1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippet2PromptSnippets1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FindOneByKeyPromptSnippet2PromptSnippets1' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetContentPromptSnippets2$inboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetContentPromptSnippets2,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => FindOneByKeyPromptSnippet2PromptSnippets1$inboundSchema),
    z.lazy(() => FindOneByKeyPromptSnippet2PromptSnippets2$inboundSchema),
  ]);

/** @internal */
export type FindOneByKeyPromptSnippetContentPromptSnippets2$Outbound =
  | FindOneByKeyPromptSnippet2PromptSnippets1$Outbound
  | FindOneByKeyPromptSnippet2PromptSnippets2$Outbound;

/** @internal */
export const FindOneByKeyPromptSnippetContentPromptSnippets2$outboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetContentPromptSnippets2$Outbound,
    z.ZodTypeDef,
    FindOneByKeyPromptSnippetContentPromptSnippets2
  > = z.union([
    z.lazy(() => FindOneByKeyPromptSnippet2PromptSnippets1$outboundSchema),
    z.lazy(() => FindOneByKeyPromptSnippet2PromptSnippets2$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetContentPromptSnippets2$ {
  /** @deprecated use `FindOneByKeyPromptSnippetContentPromptSnippets2$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetContentPromptSnippets2$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetContentPromptSnippets2$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetContentPromptSnippets2$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetContentPromptSnippets2$Outbound` instead. */
  export type Outbound =
    FindOneByKeyPromptSnippetContentPromptSnippets2$Outbound;
}

export function findOneByKeyPromptSnippetContentPromptSnippets2ToJSON(
  findOneByKeyPromptSnippetContentPromptSnippets2:
    FindOneByKeyPromptSnippetContentPromptSnippets2,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetContentPromptSnippets2$outboundSchema.parse(
      findOneByKeyPromptSnippetContentPromptSnippets2,
    ),
  );
}

export function findOneByKeyPromptSnippetContentPromptSnippets2FromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippetContentPromptSnippets2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetContentPromptSnippets2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FindOneByKeyPromptSnippetContentPromptSnippets2' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsContent$inboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetPromptSnippetsContent,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => FindOneByKeyPromptSnippet2PromptSnippets1$inboundSchema),
      z.lazy(() => FindOneByKeyPromptSnippet2PromptSnippets2$inboundSchema),
    ])),
  ]);

/** @internal */
export type FindOneByKeyPromptSnippetPromptSnippetsContent$Outbound =
  | string
  | Array<
    | FindOneByKeyPromptSnippet2PromptSnippets1$Outbound
    | FindOneByKeyPromptSnippet2PromptSnippets2$Outbound
  >;

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsContent$outboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetPromptSnippetsContent$Outbound,
    z.ZodTypeDef,
    FindOneByKeyPromptSnippetPromptSnippetsContent
  > = z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => FindOneByKeyPromptSnippet2PromptSnippets1$outboundSchema),
      z.lazy(() => FindOneByKeyPromptSnippet2PromptSnippets2$outboundSchema),
    ])),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsContent$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsContent$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsContent$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsContent$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsContent$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsContent$Outbound` instead. */
  export type Outbound =
    FindOneByKeyPromptSnippetPromptSnippetsContent$Outbound;
}

export function findOneByKeyPromptSnippetPromptSnippetsContentToJSON(
  findOneByKeyPromptSnippetPromptSnippetsContent:
    FindOneByKeyPromptSnippetPromptSnippetsContent,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetPromptSnippetsContent$outboundSchema.parse(
      findOneByKeyPromptSnippetPromptSnippetsContent,
    ),
  );
}

export function findOneByKeyPromptSnippetPromptSnippetsContentFromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippetPromptSnippetsContent,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetPromptSnippetsContent$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FindOneByKeyPromptSnippetPromptSnippetsContent' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPromptSnippetsResponseType> =
    z.nativeEnum(FindOneByKeyPromptSnippetPromptSnippetsResponseType);

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPromptSnippetsResponseType> =
    FindOneByKeyPromptSnippetPromptSnippetsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsResponseType$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsResponseType$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsResponseType$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsFunction$inboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetPromptSnippetsFunction,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/** @internal */
export type FindOneByKeyPromptSnippetPromptSnippetsFunction$Outbound = {
  name: string;
  arguments: string;
};

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsFunction$outboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetPromptSnippetsFunction$Outbound,
    z.ZodTypeDef,
    FindOneByKeyPromptSnippetPromptSnippetsFunction
  > = z.object({
    name: z.string(),
    arguments: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsFunction$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsFunction$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsFunction$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsFunction$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsFunction$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsFunction$Outbound` instead. */
  export type Outbound =
    FindOneByKeyPromptSnippetPromptSnippetsFunction$Outbound;
}

export function findOneByKeyPromptSnippetPromptSnippetsFunctionToJSON(
  findOneByKeyPromptSnippetPromptSnippetsFunction:
    FindOneByKeyPromptSnippetPromptSnippetsFunction,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetPromptSnippetsFunction$outboundSchema.parse(
      findOneByKeyPromptSnippetPromptSnippetsFunction,
    ),
  );
}

export function findOneByKeyPromptSnippetPromptSnippetsFunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippetPromptSnippetsFunction,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetPromptSnippetsFunction$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FindOneByKeyPromptSnippetPromptSnippetsFunction' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsToolCalls$inboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetPromptSnippetsToolCalls,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string().optional(),
    index: z.number().optional(),
    type: FindOneByKeyPromptSnippetPromptSnippetsResponseType$inboundSchema,
    function: z.lazy(() =>
      FindOneByKeyPromptSnippetPromptSnippetsFunction$inboundSchema
    ),
  });

/** @internal */
export type FindOneByKeyPromptSnippetPromptSnippetsToolCalls$Outbound = {
  id?: string | undefined;
  index?: number | undefined;
  type: string;
  function: FindOneByKeyPromptSnippetPromptSnippetsFunction$Outbound;
};

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsToolCalls$outboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetPromptSnippetsToolCalls$Outbound,
    z.ZodTypeDef,
    FindOneByKeyPromptSnippetPromptSnippetsToolCalls
  > = z.object({
    id: z.string().optional(),
    index: z.number().optional(),
    type: FindOneByKeyPromptSnippetPromptSnippetsResponseType$outboundSchema,
    function: z.lazy(() =>
      FindOneByKeyPromptSnippetPromptSnippetsFunction$outboundSchema
    ),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsToolCalls$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsToolCalls$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsToolCalls$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsToolCalls$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsToolCalls$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsToolCalls$Outbound` instead. */
  export type Outbound =
    FindOneByKeyPromptSnippetPromptSnippetsToolCalls$Outbound;
}

export function findOneByKeyPromptSnippetPromptSnippetsToolCallsToJSON(
  findOneByKeyPromptSnippetPromptSnippetsToolCalls:
    FindOneByKeyPromptSnippetPromptSnippetsToolCalls,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetPromptSnippetsToolCalls$outboundSchema.parse(
      findOneByKeyPromptSnippetPromptSnippetsToolCalls,
    ),
  );
}

export function findOneByKeyPromptSnippetPromptSnippetsToolCallsFromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippetPromptSnippetsToolCalls,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetPromptSnippetsToolCalls$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FindOneByKeyPromptSnippetPromptSnippetsToolCalls' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsMessages$inboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetPromptSnippetsMessages,
    z.ZodTypeDef,
    unknown
  > = z.object({
    role: FindOneByKeyPromptSnippetPromptSnippetsRole$inboundSchema,
    content: z.union([
      z.string(),
      z.array(z.union([
        z.lazy(() => FindOneByKeyPromptSnippet2PromptSnippets1$inboundSchema),
        z.lazy(() => FindOneByKeyPromptSnippet2PromptSnippets2$inboundSchema),
      ])),
    ]),
    tool_calls: z.array(
      z.lazy(() =>
        FindOneByKeyPromptSnippetPromptSnippetsToolCalls$inboundSchema
      ),
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "tool_calls": "toolCalls",
    });
  });

/** @internal */
export type FindOneByKeyPromptSnippetPromptSnippetsMessages$Outbound = {
  role: string;
  content:
    | string
    | Array<
      | FindOneByKeyPromptSnippet2PromptSnippets1$Outbound
      | FindOneByKeyPromptSnippet2PromptSnippets2$Outbound
    >;
  tool_calls?:
    | Array<FindOneByKeyPromptSnippetPromptSnippetsToolCalls$Outbound>
    | undefined;
};

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsMessages$outboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetPromptSnippetsMessages$Outbound,
    z.ZodTypeDef,
    FindOneByKeyPromptSnippetPromptSnippetsMessages
  > = z.object({
    role: FindOneByKeyPromptSnippetPromptSnippetsRole$outboundSchema,
    content: z.union([
      z.string(),
      z.array(z.union([
        z.lazy(() => FindOneByKeyPromptSnippet2PromptSnippets1$outboundSchema),
        z.lazy(() =>
          FindOneByKeyPromptSnippet2PromptSnippets2$outboundSchema
        ),
      ])),
    ]),
    toolCalls: z.array(
      z.lazy(() =>
        FindOneByKeyPromptSnippetPromptSnippetsToolCalls$outboundSchema
      ),
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      toolCalls: "tool_calls",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsMessages$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsMessages$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsMessages$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsMessages$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsMessages$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsMessages$Outbound` instead. */
  export type Outbound =
    FindOneByKeyPromptSnippetPromptSnippetsMessages$Outbound;
}

export function findOneByKeyPromptSnippetPromptSnippetsMessagesToJSON(
  findOneByKeyPromptSnippetPromptSnippetsMessages:
    FindOneByKeyPromptSnippetPromptSnippetsMessages,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetPromptSnippetsMessages$outboundSchema.parse(
      findOneByKeyPromptSnippetPromptSnippetsMessages,
    ),
  );
}

export function findOneByKeyPromptSnippetPromptSnippetsMessagesFromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippetPromptSnippetsMessages,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetPromptSnippetsMessages$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FindOneByKeyPromptSnippetPromptSnippetsMessages' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsPromptConfig$inboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetPromptSnippetsPromptConfig,
    z.ZodTypeDef,
    unknown
  > = z.object({
    stream: z.boolean().optional(),
    model: z.string().optional(),
    model_db_id: z.string().optional(),
    model_type: FindOneByKeyPromptSnippetPromptSnippetsModelType$inboundSchema
      .optional(),
    model_parameters: z.lazy(() =>
      FindOneByKeyPromptSnippetPromptSnippetsModelParameters$inboundSchema
    ).optional(),
    provider: FindOneByKeyPromptSnippetPromptSnippetsProvider$inboundSchema
      .optional(),
    integration_id: z.nullable(z.string()).optional(),
    version: z.string().optional(),
    messages: z.array(
      z.lazy(() =>
        FindOneByKeyPromptSnippetPromptSnippetsMessages$inboundSchema
      ),
    ),
  }).transform((v) => {
    return remap$(v, {
      "model_db_id": "modelDbId",
      "model_type": "modelType",
      "model_parameters": "modelParameters",
      "integration_id": "integrationId",
    });
  });

/** @internal */
export type FindOneByKeyPromptSnippetPromptSnippetsPromptConfig$Outbound = {
  stream?: boolean | undefined;
  model?: string | undefined;
  model_db_id?: string | undefined;
  model_type?: string | undefined;
  model_parameters?:
    | FindOneByKeyPromptSnippetPromptSnippetsModelParameters$Outbound
    | undefined;
  provider?: string | undefined;
  integration_id?: string | null | undefined;
  version?: string | undefined;
  messages: Array<FindOneByKeyPromptSnippetPromptSnippetsMessages$Outbound>;
};

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsPromptConfig$outboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetPromptSnippetsPromptConfig$Outbound,
    z.ZodTypeDef,
    FindOneByKeyPromptSnippetPromptSnippetsPromptConfig
  > = z.object({
    stream: z.boolean().optional(),
    model: z.string().optional(),
    modelDbId: z.string().optional(),
    modelType: FindOneByKeyPromptSnippetPromptSnippetsModelType$outboundSchema
      .optional(),
    modelParameters: z.lazy(() =>
      FindOneByKeyPromptSnippetPromptSnippetsModelParameters$outboundSchema
    ).optional(),
    provider: FindOneByKeyPromptSnippetPromptSnippetsProvider$outboundSchema
      .optional(),
    integrationId: z.nullable(z.string()).optional(),
    version: z.string().optional(),
    messages: z.array(
      z.lazy(() =>
        FindOneByKeyPromptSnippetPromptSnippetsMessages$outboundSchema
      ),
    ),
  }).transform((v) => {
    return remap$(v, {
      modelDbId: "model_db_id",
      modelType: "model_type",
      modelParameters: "model_parameters",
      integrationId: "integration_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsPromptConfig$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsPromptConfig$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsPromptConfig$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsPromptConfig$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsPromptConfig$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsPromptConfig$Outbound` instead. */
  export type Outbound =
    FindOneByKeyPromptSnippetPromptSnippetsPromptConfig$Outbound;
}

export function findOneByKeyPromptSnippetPromptSnippetsPromptConfigToJSON(
  findOneByKeyPromptSnippetPromptSnippetsPromptConfig:
    FindOneByKeyPromptSnippetPromptSnippetsPromptConfig,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetPromptSnippetsPromptConfig$outboundSchema.parse(
      findOneByKeyPromptSnippetPromptSnippetsPromptConfig,
    ),
  );
}

export function findOneByKeyPromptSnippetPromptSnippetsPromptConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippetPromptSnippetsPromptConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetPromptSnippetsPromptConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FindOneByKeyPromptSnippetPromptSnippetsPromptConfig' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsUseCases$inboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPromptSnippetsUseCases> = z
    .nativeEnum(FindOneByKeyPromptSnippetPromptSnippetsUseCases);

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsUseCases$outboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPromptSnippetsUseCases> =
    FindOneByKeyPromptSnippetPromptSnippetsUseCases$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsUseCases$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsUseCases$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsUseCases$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsUseCases$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsUseCases$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsLanguage$inboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPromptSnippetsLanguage> = z
    .nativeEnum(FindOneByKeyPromptSnippetPromptSnippetsLanguage);

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsLanguage$outboundSchema:
  z.ZodNativeEnum<typeof FindOneByKeyPromptSnippetPromptSnippetsLanguage> =
    FindOneByKeyPromptSnippetPromptSnippetsLanguage$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsLanguage$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsLanguage$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsLanguage$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsLanguage$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsLanguage$outboundSchema;
}

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsMetadata$inboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetPromptSnippetsMetadata,
    z.ZodTypeDef,
    unknown
  > = z.object({
    use_cases: z.array(
      FindOneByKeyPromptSnippetPromptSnippetsUseCases$inboundSchema,
    ).optional(),
    language: FindOneByKeyPromptSnippetPromptSnippetsLanguage$inboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      "use_cases": "useCases",
    });
  });

/** @internal */
export type FindOneByKeyPromptSnippetPromptSnippetsMetadata$Outbound = {
  use_cases?: Array<string> | undefined;
  language?: string | undefined;
};

/** @internal */
export const FindOneByKeyPromptSnippetPromptSnippetsMetadata$outboundSchema:
  z.ZodType<
    FindOneByKeyPromptSnippetPromptSnippetsMetadata$Outbound,
    z.ZodTypeDef,
    FindOneByKeyPromptSnippetPromptSnippetsMetadata
  > = z.object({
    useCases: z.array(
      FindOneByKeyPromptSnippetPromptSnippetsUseCases$outboundSchema,
    ).optional(),
    language: FindOneByKeyPromptSnippetPromptSnippetsLanguage$outboundSchema
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      useCases: "use_cases",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetPromptSnippetsMetadata$ {
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsMetadata$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsMetadata$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsMetadata$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetPromptSnippetsMetadata$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetPromptSnippetsMetadata$Outbound` instead. */
  export type Outbound =
    FindOneByKeyPromptSnippetPromptSnippetsMetadata$Outbound;
}

export function findOneByKeyPromptSnippetPromptSnippetsMetadataToJSON(
  findOneByKeyPromptSnippetPromptSnippetsMetadata:
    FindOneByKeyPromptSnippetPromptSnippetsMetadata,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetPromptSnippetsMetadata$outboundSchema.parse(
      findOneByKeyPromptSnippetPromptSnippetsMetadata,
    ),
  );
}

export function findOneByKeyPromptSnippetPromptSnippetsMetadataFromJSON(
  jsonString: string,
): SafeParseResult<
  FindOneByKeyPromptSnippetPromptSnippetsMetadata,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetPromptSnippetsMetadata$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'FindOneByKeyPromptSnippetPromptSnippetsMetadata' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetVersions$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetVersions,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  description: z.nullable(z.string()).optional(),
  prompt_config: z.lazy(() =>
    FindOneByKeyPromptSnippetPromptSnippetsPromptConfig$inboundSchema
  ),
  metadata: z.lazy(() =>
    FindOneByKeyPromptSnippetPromptSnippetsMetadata$inboundSchema
  ),
  created_by_id: z.string(),
  updated_by_id: z.string(),
  timestamp: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "prompt_config": "promptConfig",
    "created_by_id": "createdById",
    "updated_by_id": "updatedById",
  });
});

/** @internal */
export type FindOneByKeyPromptSnippetVersions$Outbound = {
  _id: string;
  description?: string | null | undefined;
  prompt_config: FindOneByKeyPromptSnippetPromptSnippetsPromptConfig$Outbound;
  metadata: FindOneByKeyPromptSnippetPromptSnippetsMetadata$Outbound;
  created_by_id: string;
  updated_by_id: string;
  timestamp: string;
};

/** @internal */
export const FindOneByKeyPromptSnippetVersions$outboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetVersions$Outbound,
  z.ZodTypeDef,
  FindOneByKeyPromptSnippetVersions
> = z.object({
  id: z.string(),
  description: z.nullable(z.string()).optional(),
  promptConfig: z.lazy(() =>
    FindOneByKeyPromptSnippetPromptSnippetsPromptConfig$outboundSchema
  ),
  metadata: z.lazy(() =>
    FindOneByKeyPromptSnippetPromptSnippetsMetadata$outboundSchema
  ),
  createdById: z.string(),
  updatedById: z.string(),
  timestamp: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    promptConfig: "prompt_config",
    createdById: "created_by_id",
    updatedById: "updated_by_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetVersions$ {
  /** @deprecated use `FindOneByKeyPromptSnippetVersions$inboundSchema` instead. */
  export const inboundSchema = FindOneByKeyPromptSnippetVersions$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetVersions$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetVersions$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetVersions$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippetVersions$Outbound;
}

export function findOneByKeyPromptSnippetVersionsToJSON(
  findOneByKeyPromptSnippetVersions: FindOneByKeyPromptSnippetVersions,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetVersions$outboundSchema.parse(
      findOneByKeyPromptSnippetVersions,
    ),
  );
}

export function findOneByKeyPromptSnippetVersionsFromJSON(
  jsonString: string,
): SafeParseResult<FindOneByKeyPromptSnippetVersions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FindOneByKeyPromptSnippetVersions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FindOneByKeyPromptSnippetVersions' from JSON`,
  );
}

/** @internal */
export const FindOneByKeyPromptSnippetResponseBody$inboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  owner: z.union([z.string(), FindOneByKeyPromptSnippetOwner2$inboundSchema]),
  domain_id: z.string(),
  key: z.string(),
  description: z.nullable(z.string()).optional(),
  prompt_config: z.lazy(() =>
    FindOneByKeyPromptSnippetPromptConfig$inboundSchema
  ),
  metadata: z.lazy(() => FindOneByKeyPromptSnippetMetadata$inboundSchema),
  created_by_id: z.string(),
  updated_by_id: z.string(),
  created: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  updated: z.string().datetime({ offset: true }).default(
    "2025-02-07T11:55:48.683Z",
  ).transform(v => new Date(v)),
  type: FindOneByKeyPromptSnippetType$inboundSchema,
  versions: z.array(
    z.lazy(() => FindOneByKeyPromptSnippetVersions$inboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "domain_id": "domainId",
    "prompt_config": "promptConfig",
    "created_by_id": "createdById",
    "updated_by_id": "updatedById",
  });
});

/** @internal */
export type FindOneByKeyPromptSnippetResponseBody$Outbound = {
  _id: string;
  owner: string | string;
  domain_id: string;
  key: string;
  description?: string | null | undefined;
  prompt_config: FindOneByKeyPromptSnippetPromptConfig$Outbound;
  metadata: FindOneByKeyPromptSnippetMetadata$Outbound;
  created_by_id: string;
  updated_by_id: string;
  created?: string | undefined;
  updated: string;
  type: string;
  versions: Array<FindOneByKeyPromptSnippetVersions$Outbound>;
};

/** @internal */
export const FindOneByKeyPromptSnippetResponseBody$outboundSchema: z.ZodType<
  FindOneByKeyPromptSnippetResponseBody$Outbound,
  z.ZodTypeDef,
  FindOneByKeyPromptSnippetResponseBody
> = z.object({
  id: z.string(),
  owner: z.union([z.string(), FindOneByKeyPromptSnippetOwner2$outboundSchema]),
  domainId: z.string(),
  key: z.string(),
  description: z.nullable(z.string()).optional(),
  promptConfig: z.lazy(() =>
    FindOneByKeyPromptSnippetPromptConfig$outboundSchema
  ),
  metadata: z.lazy(() => FindOneByKeyPromptSnippetMetadata$outboundSchema),
  createdById: z.string(),
  updatedById: z.string(),
  created: z.date().transform(v => v.toISOString()).optional(),
  updated: z.date().default(() => new Date("2025-02-07T11:55:48.683Z"))
    .transform(v => v.toISOString()),
  type: FindOneByKeyPromptSnippetType$outboundSchema,
  versions: z.array(
    z.lazy(() => FindOneByKeyPromptSnippetVersions$outboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    domainId: "domain_id",
    promptConfig: "prompt_config",
    createdById: "created_by_id",
    updatedById: "updated_by_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindOneByKeyPromptSnippetResponseBody$ {
  /** @deprecated use `FindOneByKeyPromptSnippetResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    FindOneByKeyPromptSnippetResponseBody$inboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    FindOneByKeyPromptSnippetResponseBody$outboundSchema;
  /** @deprecated use `FindOneByKeyPromptSnippetResponseBody$Outbound` instead. */
  export type Outbound = FindOneByKeyPromptSnippetResponseBody$Outbound;
}

export function findOneByKeyPromptSnippetResponseBodyToJSON(
  findOneByKeyPromptSnippetResponseBody: FindOneByKeyPromptSnippetResponseBody,
): string {
  return JSON.stringify(
    FindOneByKeyPromptSnippetResponseBody$outboundSchema.parse(
      findOneByKeyPromptSnippetResponseBody,
    ),
  );
}

export function findOneByKeyPromptSnippetResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<FindOneByKeyPromptSnippetResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      FindOneByKeyPromptSnippetResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FindOneByKeyPromptSnippetResponseBody' from JSON`,
  );
}
