/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type EvalsRagasFaithfulnessRequestBody = {
  /**
   * Latest user message
   */
  query: string;
  /**
   * The generated response from the model
   */
  output: string;
  model: string;
  /**
   * Knowledge base retrievals
   */
  retrievals?: Array<string> | undefined;
};

/**
 * Returns the faithfulness evaluation result
 */
export type EvalsRagasFaithfulnessResponseBody = {
  value: number | null;
};

/** @internal */
export const EvalsRagasFaithfulnessRequestBody$inboundSchema: z.ZodType<
  EvalsRagasFaithfulnessRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  query: z.string(),
  output: z.string(),
  model: z.string(),
  retrievals: z.array(z.string()).optional(),
});

/** @internal */
export type EvalsRagasFaithfulnessRequestBody$Outbound = {
  query: string;
  output: string;
  model: string;
  retrievals?: Array<string> | undefined;
};

/** @internal */
export const EvalsRagasFaithfulnessRequestBody$outboundSchema: z.ZodType<
  EvalsRagasFaithfulnessRequestBody$Outbound,
  z.ZodTypeDef,
  EvalsRagasFaithfulnessRequestBody
> = z.object({
  query: z.string(),
  output: z.string(),
  model: z.string(),
  retrievals: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsRagasFaithfulnessRequestBody$ {
  /** @deprecated use `EvalsRagasFaithfulnessRequestBody$inboundSchema` instead. */
  export const inboundSchema = EvalsRagasFaithfulnessRequestBody$inboundSchema;
  /** @deprecated use `EvalsRagasFaithfulnessRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsRagasFaithfulnessRequestBody$outboundSchema;
  /** @deprecated use `EvalsRagasFaithfulnessRequestBody$Outbound` instead. */
  export type Outbound = EvalsRagasFaithfulnessRequestBody$Outbound;
}

export function evalsRagasFaithfulnessRequestBodyToJSON(
  evalsRagasFaithfulnessRequestBody: EvalsRagasFaithfulnessRequestBody,
): string {
  return JSON.stringify(
    EvalsRagasFaithfulnessRequestBody$outboundSchema.parse(
      evalsRagasFaithfulnessRequestBody,
    ),
  );
}

export function evalsRagasFaithfulnessRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<EvalsRagasFaithfulnessRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EvalsRagasFaithfulnessRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EvalsRagasFaithfulnessRequestBody' from JSON`,
  );
}

/** @internal */
export const EvalsRagasFaithfulnessResponseBody$inboundSchema: z.ZodType<
  EvalsRagasFaithfulnessResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.nullable(z.number()),
});

/** @internal */
export type EvalsRagasFaithfulnessResponseBody$Outbound = {
  value: number | null;
};

/** @internal */
export const EvalsRagasFaithfulnessResponseBody$outboundSchema: z.ZodType<
  EvalsRagasFaithfulnessResponseBody$Outbound,
  z.ZodTypeDef,
  EvalsRagasFaithfulnessResponseBody
> = z.object({
  value: z.nullable(z.number()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsRagasFaithfulnessResponseBody$ {
  /** @deprecated use `EvalsRagasFaithfulnessResponseBody$inboundSchema` instead. */
  export const inboundSchema = EvalsRagasFaithfulnessResponseBody$inboundSchema;
  /** @deprecated use `EvalsRagasFaithfulnessResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsRagasFaithfulnessResponseBody$outboundSchema;
  /** @deprecated use `EvalsRagasFaithfulnessResponseBody$Outbound` instead. */
  export type Outbound = EvalsRagasFaithfulnessResponseBody$Outbound;
}

export function evalsRagasFaithfulnessResponseBodyToJSON(
  evalsRagasFaithfulnessResponseBody: EvalsRagasFaithfulnessResponseBody,
): string {
  return JSON.stringify(
    EvalsRagasFaithfulnessResponseBody$outboundSchema.parse(
      evalsRagasFaithfulnessResponseBody,
    ),
  );
}

export function evalsRagasFaithfulnessResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<EvalsRagasFaithfulnessResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      EvalsRagasFaithfulnessResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EvalsRagasFaithfulnessResponseBody' from JSON`,
  );
}
