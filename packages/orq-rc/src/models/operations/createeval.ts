/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const CreateEvalGuardrailConfigEvalsRequestRequestBody42Type = {
  Number: "number",
} as const;
export type CreateEvalGuardrailConfigEvalsRequestRequestBody42Type = ClosedEnum<
  typeof CreateEvalGuardrailConfigEvalsRequestRequestBody42Type
>;

export const CreateEvalGuardrailConfigEvalsOperator = {
  Eq: "eq",
  Ne: "ne",
  Gt: "gt",
  Gte: "gte",
  Lt: "lt",
  Lte: "lte",
} as const;
export type CreateEvalGuardrailConfigEvalsOperator = ClosedEnum<
  typeof CreateEvalGuardrailConfigEvalsOperator
>;

export type CreateEvalGuardrailConfigEvalsNumber = {
  enabled: boolean;
  type: CreateEvalGuardrailConfigEvalsRequestRequestBody42Type;
  value: number;
  operator: CreateEvalGuardrailConfigEvalsOperator;
};

export const CreateEvalGuardrailConfigEvalsRequestRequestBody4Type = {
  Boolean: "boolean",
} as const;
export type CreateEvalGuardrailConfigEvalsRequestRequestBody4Type = ClosedEnum<
  typeof CreateEvalGuardrailConfigEvalsRequestRequestBody4Type
>;

export type CreateEvalGuardrailConfigEvalsBoolean = {
  enabled: boolean;
  type: CreateEvalGuardrailConfigEvalsRequestRequestBody4Type;
  value: boolean;
};

export type CreateEvalRequestBodyEvalsGuardrailConfig =
  | CreateEvalGuardrailConfigEvalsNumber
  | CreateEvalGuardrailConfigEvalsBoolean;

export const CreateEvalRequestBodyEvalsOutputType = {
  Boolean: "boolean",
  Number: "number",
} as const;
export type CreateEvalRequestBodyEvalsOutputType = ClosedEnum<
  typeof CreateEvalRequestBodyEvalsOutputType
>;

export const CreateEvalRequestBodyEvalsType = {
  PythonEval: "python_eval",
} as const;
export type CreateEvalRequestBodyEvalsType = ClosedEnum<
  typeof CreateEvalRequestBodyEvalsType
>;

export type Python = {
  guardrailConfig?:
    | CreateEvalGuardrailConfigEvalsNumber
    | CreateEvalGuardrailConfigEvalsBoolean
    | undefined;
  outputType?: CreateEvalRequestBodyEvalsOutputType | undefined;
  code: string;
  type: CreateEvalRequestBodyEvalsType;
  /**
   * Entity storage path in the format: `project/folder/subfolder/...`
   *
   * @remarks
   *
   * The first element identifies the project, followed by nested folders (auto-created as needed).
   *
   * With project-based API keys, the first element is treated as a folder name, as the project is predetermined by the API key.
   */
  path: string;
  description?: string | undefined;
  key: string;
};

export const CreateEvalGuardrailConfigEvalsRequestRequestBody3Type = {
  Number: "number",
} as const;
export type CreateEvalGuardrailConfigEvalsRequestRequestBody3Type = ClosedEnum<
  typeof CreateEvalGuardrailConfigEvalsRequestRequestBody3Type
>;

export const CreateEvalGuardrailConfigOperator = {
  Eq: "eq",
  Ne: "ne",
  Gt: "gt",
  Gte: "gte",
  Lt: "lt",
  Lte: "lte",
} as const;
export type CreateEvalGuardrailConfigOperator = ClosedEnum<
  typeof CreateEvalGuardrailConfigOperator
>;

export type CreateEvalGuardrailConfigNumber = {
  enabled: boolean;
  type: CreateEvalGuardrailConfigEvalsRequestRequestBody3Type;
  value: number;
  operator: CreateEvalGuardrailConfigOperator;
};

export const CreateEvalGuardrailConfigEvalsRequestRequestBodyType = {
  Boolean: "boolean",
} as const;
export type CreateEvalGuardrailConfigEvalsRequestRequestBodyType = ClosedEnum<
  typeof CreateEvalGuardrailConfigEvalsRequestRequestBodyType
>;

export type CreateEvalGuardrailConfigBoolean = {
  enabled: boolean;
  type: CreateEvalGuardrailConfigEvalsRequestRequestBodyType;
  value: boolean;
};

export type CreateEvalRequestBodyGuardrailConfig =
  | CreateEvalGuardrailConfigNumber
  | CreateEvalGuardrailConfigBoolean;

/**
 * The type of output expected from the evaluator
 */
export const CreateEvalRequestBodyOutputType = {
  Boolean: "boolean",
  Number: "number",
  String: "string",
} as const;
/**
 * The type of output expected from the evaluator
 */
export type CreateEvalRequestBodyOutputType = ClosedEnum<
  typeof CreateEvalRequestBodyOutputType
>;

export const CreateEvalRequestBodyType = {
  HttpEval: "http_eval",
} as const;
export type CreateEvalRequestBodyType = ClosedEnum<
  typeof CreateEvalRequestBodyType
>;

export const CreateEvalRequestBodyMethod = {
  Get: "GET",
  Post: "POST",
} as const;
export type CreateEvalRequestBodyMethod = ClosedEnum<
  typeof CreateEvalRequestBodyMethod
>;

export type CreateEvalRequestBodyHTTP = {
  guardrailConfig?:
    | CreateEvalGuardrailConfigNumber
    | CreateEvalGuardrailConfigBoolean
    | undefined;
  /**
   * The type of output expected from the evaluator
   */
  outputType?: CreateEvalRequestBodyOutputType | undefined;
  type: CreateEvalRequestBodyType;
  url: string;
  method: CreateEvalRequestBodyMethod;
  headers: { [k: string]: string };
  payload: { [k: string]: any };
  /**
   * Entity storage path in the format: `project/folder/subfolder/...`
   *
   * @remarks
   *
   * The first element identifies the project, followed by nested folders (auto-created as needed).
   *
   * With project-based API keys, the first element is treated as a folder name, as the project is predetermined by the API key.
   */
  path: string;
  description?: string | undefined;
  key: string;
};

export const CreateEvalGuardrailConfigEvalsRequestType = {
  Number: "number",
} as const;
export type CreateEvalGuardrailConfigEvalsRequestType = ClosedEnum<
  typeof CreateEvalGuardrailConfigEvalsRequestType
>;

export const GuardrailConfigOperator = {
  Eq: "eq",
  Ne: "ne",
  Gt: "gt",
  Gte: "gte",
  Lt: "lt",
  Lte: "lte",
} as const;
export type GuardrailConfigOperator = ClosedEnum<
  typeof GuardrailConfigOperator
>;

export type GuardrailConfigNumber = {
  enabled: boolean;
  type: CreateEvalGuardrailConfigEvalsRequestType;
  value: number;
  operator: GuardrailConfigOperator;
};

export const CreateEvalGuardrailConfigEvalsType = {
  Boolean: "boolean",
} as const;
export type CreateEvalGuardrailConfigEvalsType = ClosedEnum<
  typeof CreateEvalGuardrailConfigEvalsType
>;

export type GuardrailConfigBoolean = {
  enabled: boolean;
  type: CreateEvalGuardrailConfigEvalsType;
  value: boolean;
};

export type RequestBodyGuardrailConfig =
  | GuardrailConfigNumber
  | GuardrailConfigBoolean;

export const RequestBodyOutputType = {
  Boolean: "boolean",
} as const;
export type RequestBodyOutputType = ClosedEnum<typeof RequestBodyOutputType>;

export const RequestBodyType = {
  JsonSchema: "json_schema",
} as const;
export type RequestBodyType = ClosedEnum<typeof RequestBodyType>;

export type Json = {
  guardrailConfig?: GuardrailConfigNumber | GuardrailConfigBoolean | undefined;
  outputType?: RequestBodyOutputType | undefined;
  type: RequestBodyType;
  schema: string;
  /**
   * Entity storage path in the format: `project/folder/subfolder/...`
   *
   * @remarks
   *
   * The first element identifies the project, followed by nested folders (auto-created as needed).
   *
   * With project-based API keys, the first element is treated as a folder name, as the project is predetermined by the API key.
   */
  path: string;
  description?: string | undefined;
  key: string;
};

export const GuardrailConfigType = {
  Number: "number",
} as const;
export type GuardrailConfigType = ClosedEnum<typeof GuardrailConfigType>;

export const Operator = {
  Eq: "eq",
  Ne: "ne",
  Gt: "gt",
  Gte: "gte",
  Lt: "lt",
  Lte: "lte",
} as const;
export type Operator = ClosedEnum<typeof Operator>;

export type NumberT = {
  enabled: boolean;
  type: GuardrailConfigType;
  value: number;
  operator: Operator;
};

export const CreateEvalGuardrailConfigType = {
  Boolean: "boolean",
} as const;
export type CreateEvalGuardrailConfigType = ClosedEnum<
  typeof CreateEvalGuardrailConfigType
>;

export type Boolean = {
  enabled: boolean;
  type: CreateEvalGuardrailConfigType;
  value: boolean;
};

export type GuardrailConfig = NumberT | Boolean;

/**
 * The type of output expected from the evaluator
 */
export const OutputType = {
  Boolean: "boolean",
  Number: "number",
  String: "string",
} as const;
/**
 * The type of output expected from the evaluator
 */
export type OutputType = ClosedEnum<typeof OutputType>;

export const CreateEvalRequestBodyEvalsRequestType = {
  LlmEval: "llm_eval",
} as const;
export type CreateEvalRequestBodyEvalsRequestType = ClosedEnum<
  typeof CreateEvalRequestBodyEvalsRequestType
>;

export type Llm = {
  guardrailConfig?: NumberT | Boolean | undefined;
  /**
   * The type of output expected from the evaluator
   */
  outputType?: OutputType | undefined;
  type: CreateEvalRequestBodyEvalsRequestType;
  prompt: string;
  /**
   * Entity storage path in the format: `project/folder/subfolder/...`
   *
   * @remarks
   *
   * The first element identifies the project, followed by nested folders (auto-created as needed).
   *
   * With project-based API keys, the first element is treated as a folder name, as the project is predetermined by the API key.
   */
  path: string;
  description?: string | undefined;
  model: string;
  key: string;
};

export type CreateEvalRequestBody =
  | CreateEvalRequestBodyHTTP
  | Llm
  | Json
  | Python;

export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody72Type =
  {
    Number: "number",
  } as const;
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody72Type =
  ClosedEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody72Type
  >;

export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Operator =
  {
    Eq: "eq",
    Ne: "ne",
    Gt: "gt",
    Gte: "gte",
    Lt: "lt",
    Lte: "lte",
  } as const;
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Operator =
  ClosedEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Operator
  >;

export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number =
  {
    enabled: boolean;
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody72Type;
    value: number;
    operator:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Operator;
  };

export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Type =
  {
    Boolean: "boolean",
  } as const;
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Type =
  ClosedEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Type
  >;

export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean =
  {
    enabled: boolean;
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Type;
    value: boolean;
  };

export type CreateEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig =
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean;

export const CreateEvalResponseBodyEvalsResponse200ApplicationJson7Type = {
  TypescriptEval: "typescript_eval",
} as const;
export type CreateEvalResponseBodyEvalsResponse200ApplicationJson7Type =
  ClosedEnum<typeof CreateEvalResponseBodyEvalsResponse200ApplicationJson7Type>;

export type Typescript = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean
    | undefined;
  code: string;
  type: CreateEvalResponseBodyEvalsResponse200ApplicationJson7Type;
  key: string;
};

export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody62Type =
  {
    Number: "number",
  } as const;
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody62Type =
  ClosedEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody62Type
  >;

export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Operator =
  {
    Eq: "eq",
    Ne: "ne",
    Gt: "gt",
    Gte: "gte",
    Lt: "lt",
    Lte: "lte",
  } as const;
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Operator =
  ClosedEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Operator
  >;

export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number =
  {
    enabled: boolean;
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody62Type;
    value: number;
    operator:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Operator;
  };

export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Type =
  {
    Boolean: "boolean",
  } as const;
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Type =
  ClosedEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Type
  >;

export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean =
  {
    enabled: boolean;
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Type;
    value: boolean;
  };

export type CreateEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig =
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean;

export const CreateEvalResponseBodyEvalsResponse200ApplicationJSONType = {
  Ragas: "ragas",
} as const;
export type CreateEvalResponseBodyEvalsResponse200ApplicationJSONType =
  ClosedEnum<typeof CreateEvalResponseBodyEvalsResponse200ApplicationJSONType>;

export const RagasMetric = {
  ContextPrecision: "context_precision",
  ContextRecall: "context_recall",
  ContextEntitiesRecall: "context_entities_recall",
  Harmfulness: "harmfulness",
  Maliciousness: "maliciousness",
  Coherence: "coherence",
  Correctness: "correctness",
  Conciseness: "conciseness",
  ResponseRelevancy: "response_relevancy",
  Faithfulness: "faithfulness",
  Summarization: "summarization",
  NoiseSensitivity: "noise_sensitivity",
} as const;
export type RagasMetric = ClosedEnum<typeof RagasMetric>;

export type Ragas = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean
    | undefined;
  type: CreateEvalResponseBodyEvalsResponse200ApplicationJSONType;
  ragasMetric: RagasMetric;
  key: string;
  model: string;
};

export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody52Type =
  {
    Number: "number",
  } as const;
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody52Type =
  ClosedEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody52Type
  >;

export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Operator =
  {
    Eq: "eq",
    Ne: "ne",
    Gt: "gt",
    Gte: "gte",
    Lt: "lt",
    Lte: "lte",
  } as const;
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Operator =
  ClosedEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Operator
  >;

export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number =
  {
    enabled: boolean;
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody52Type;
    value: number;
    operator:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Operator;
  };

export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Type =
  {
    Boolean: "boolean",
  } as const;
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Type =
  ClosedEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Type
  >;

export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean =
  {
    enabled: boolean;
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Type;
    value: boolean;
  };

export type CreateEvalResponseBodyEvalsResponse200GuardrailConfig =
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean;

export const CreateEvalResponseBodyEvalsResponse200Type = {
  FunctionEval: "function_eval",
} as const;
export type CreateEvalResponseBodyEvalsResponse200Type = ClosedEnum<
  typeof CreateEvalResponseBodyEvalsResponse200Type
>;

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody535Type =
  {
    BertCoherence: "bert_coherence",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody535Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody535Type
  >;

export type ThirtyFive = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody535Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody534Type =
  {
    GrammarDiversity: "grammar_diversity",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody534Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody534Type
  >;

export type ThirtyFour = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody534Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody533Type =
  {
    SemanticRepetition: "semantic_repetition",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody533Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody533Type
  >;

export type ThirtyThree = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody533Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody532Type =
  {
    LexicalRepetition: "lexical_repetition",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody532Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody532Type
  >;

export type ThirtyTwo = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody532Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody531Type =
  {
    SentencesCount: "sentences_count",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody531Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody531Type
  >;

export type ThirtyOne = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody531Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody530Type =
  {
    WordsCount: "words_count",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody530Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody530Type
  >;

export type Thirty = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody530Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody529Type =
  {
    GseEnglishLevel: "gse_english_level",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody529Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody529Type
  >;

export type TwentyNine = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody529Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody528Type =
  {
    FleschReadingEase: "flesch_reading_ease",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody528Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody528Type
  >;

export type TwentyEight = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody528Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody527Type =
  {
    MostRepeatedWords: "most_repeated_words",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody527Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody527Type
  >;

export type TwentySeven = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody527Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody526Type =
  {
    KeywordsMatch: "keywords_match",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody526Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody526Type
  >;

export type TwentySix = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody526Type;
  keywords: Array<string>;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody525Type =
  {
    TopicMatch: "topic_match",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody525Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody525Type
  >;

export type TwentyFive = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody525Type;
  topic: string;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody524Type =
  {
    LevenshteinDistance: "levenshtein_distance",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody524Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody524Type
  >;

export type TwentyFour = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody524Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody523Type =
  {
    CosineSimilarity: "cosine_similarity",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody523Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody523Type
  >;

export type CreateEvalFunctionParams23 = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody523Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody522Type =
  {
    MeteorScore: "meteor_score",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody522Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody522Type
  >;

export type CreateEvalFunctionParams22 = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody522Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody521Type =
  {
    RougeN: "rouge_n",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody521Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody521Type
  >;

export type CreateEvalFunctionParams21 = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody521Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody520Type =
  {
    BleuScore: "bleu_score",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody520Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody520Type
  >;

export type CreateEvalFunctionParams20 = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody520Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody519Type =
  {
    BertScore: "bert_score",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody519Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody519Type
  >;

export type CreateEvalFunctionParams19 = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody519Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody518Type =
  {
    ModerationsGoogle: "moderations_google",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody518Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody518Type
  >;

export type CreateEvalFunctionParams18 = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody518Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody517Type =
  {
    ModerationsOpenai: "moderations_openai",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody517Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody517Type
  >;

export type CreateEvalFunctionParams17 = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody517Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody516Type =
  {
    IsValidJson: "is_valid_json",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody516Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody516Type
  >;

export type CreateEvalFunctionParams16 = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody516Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody515Type =
  {
    Regex: "regex",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody515Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody515Type
  >;

export type CreateEvalFunctionParams15 = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody515Type;
  pattern: string;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody514Type =
  {
    OneLine: "one_line",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody514Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody514Type
  >;

export type CreateEvalFunctionParams14 = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody514Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody513Type =
  {
    LengthGreaterThan: "length_greater_than",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody513Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody513Type
  >;

export type CreateEvalFunctionParams13 = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody513Type;
  value: number;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody512Type =
  {
    LengthBetween: "length_between",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody512Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody512Type
  >;

export type CreateEvalFunctionParams12 = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody512Type;
  min: number;
  max: number;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody511Type =
  {
    LengthLessThan: "length_less_than",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody511Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody511Type
  >;

export type CreateEvalFunctionParams11 = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody511Type;
  value: number;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody510Type =
  {
    ExactMatch: "exact_match",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody510Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody510Type
  >;

export type CreateEvalFunctionParams10 = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody510Type;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody59Type =
  {
    EndsWith: "ends_with",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody59Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody59Type
  >;

export type CreateEvalFunctionParams9 = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody59Type;
  value: string;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody5Type =
  {
    StartWith: "start_with",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody5Type =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody5Type
  >;

export type CreateEvalFunctionParams8 = {
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody5Type;
  value: string;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType =
  {
    ContainsValidLink: "contains_valid_link",
  } as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType
  >;

export type CreateEvalFunctionParams7 = {
  type: CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType;
};

export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONType = {
  ContainsUrl: "contains_url",
} as const;
export type CreateEvalFunctionParamsEvalsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONType
  >;

export type CreateEvalFunctionParams6 = {
  type: CreateEvalFunctionParamsEvalsResponse200ApplicationJSONType;
};

export const CreateEvalFunctionParamsEvalsResponse200Type = {
  ContainsEmail: "contains_email",
} as const;
export type CreateEvalFunctionParamsEvalsResponse200Type = ClosedEnum<
  typeof CreateEvalFunctionParamsEvalsResponse200Type
>;

export type CreateEvalFunctionParams5 = {
  type: CreateEvalFunctionParamsEvalsResponse200Type;
};

export const CreateEvalFunctionParamsEvalsResponseType = {
  ContainsAny: "contains_any",
} as const;
export type CreateEvalFunctionParamsEvalsResponseType = ClosedEnum<
  typeof CreateEvalFunctionParamsEvalsResponseType
>;

export type CreateEvalFunctionParams4 = {
  type: CreateEvalFunctionParamsEvalsResponseType;
  keywords: Array<string>;
};

export const CreateEvalFunctionParamsEvalsType = {
  ContainsAll: "contains_all",
} as const;
export type CreateEvalFunctionParamsEvalsType = ClosedEnum<
  typeof CreateEvalFunctionParamsEvalsType
>;

export type CreateEvalFunctionParams3 = {
  type: CreateEvalFunctionParamsEvalsType;
  keywords: Array<string>;
};

export const CreateEvalFunctionParamsType = {
  ContainsNone: "contains_none",
} as const;
export type CreateEvalFunctionParamsType = ClosedEnum<
  typeof CreateEvalFunctionParamsType
>;

export type CreateEvalFunctionParams2 = {
  type: CreateEvalFunctionParamsType;
  keywords: Array<string>;
};

export const FunctionParamsType = {
  Contains: "contains",
} as const;
export type FunctionParamsType = ClosedEnum<typeof FunctionParamsType>;

export type CreateEvalFunctionParams1 = {
  type: FunctionParamsType;
  value: string;
};

export type CreateEvalResponseBodyFunctionParams =
  | CreateEvalFunctionParams12
  | CreateEvalFunctionParams1
  | CreateEvalFunctionParams2
  | CreateEvalFunctionParams3
  | CreateEvalFunctionParams4
  | CreateEvalFunctionParams8
  | CreateEvalFunctionParams9
  | CreateEvalFunctionParams11
  | CreateEvalFunctionParams13
  | CreateEvalFunctionParams15
  | TwentyFive
  | TwentySix
  | CreateEvalFunctionParams5
  | CreateEvalFunctionParams6
  | CreateEvalFunctionParams7
  | CreateEvalFunctionParams10
  | CreateEvalFunctionParams14
  | CreateEvalFunctionParams16
  | CreateEvalFunctionParams17
  | CreateEvalFunctionParams18
  | CreateEvalFunctionParams19
  | CreateEvalFunctionParams20
  | CreateEvalFunctionParams21
  | CreateEvalFunctionParams22
  | CreateEvalFunctionParams23
  | TwentyFour
  | TwentySeven
  | TwentyEight
  | TwentyNine
  | Thirty
  | ThirtyOne
  | ThirtyTwo
  | ThirtyThree
  | ThirtyFour
  | ThirtyFive;

export type CreateEvalResponseBodyFunction = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean
    | undefined;
  type: CreateEvalResponseBodyEvalsResponse200Type;
  functionParams:
    | CreateEvalFunctionParams12
    | CreateEvalFunctionParams1
    | CreateEvalFunctionParams2
    | CreateEvalFunctionParams3
    | CreateEvalFunctionParams4
    | CreateEvalFunctionParams8
    | CreateEvalFunctionParams9
    | CreateEvalFunctionParams11
    | CreateEvalFunctionParams13
    | CreateEvalFunctionParams15
    | TwentyFive
    | TwentySix
    | CreateEvalFunctionParams5
    | CreateEvalFunctionParams6
    | CreateEvalFunctionParams7
    | CreateEvalFunctionParams10
    | CreateEvalFunctionParams14
    | CreateEvalFunctionParams16
    | CreateEvalFunctionParams17
    | CreateEvalFunctionParams18
    | CreateEvalFunctionParams19
    | CreateEvalFunctionParams20
    | CreateEvalFunctionParams21
    | CreateEvalFunctionParams22
    | CreateEvalFunctionParams23
    | TwentyFour
    | TwentySeven
    | TwentyEight
    | TwentyNine
    | Thirty
    | ThirtyOne
    | ThirtyTwo
    | ThirtyThree
    | ThirtyFour
    | ThirtyFive;
  key: string;
};

export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody42Type =
  {
    Number: "number",
  } as const;
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody42Type =
  ClosedEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody42Type
  >;

export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator =
  {
    Eq: "eq",
    Ne: "ne",
    Gt: "gt",
    Gte: "gte",
    Lt: "lt",
    Lte: "lte",
  } as const;
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator =
  ClosedEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator
  >;

export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber =
  {
    enabled: boolean;
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody42Type;
    value: number;
    operator:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator;
  };

export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody4Type =
  {
    Boolean: "boolean",
  } as const;
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody4Type =
  ClosedEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody4Type
  >;

export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean =
  {
    enabled: boolean;
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody4Type;
    value: boolean;
  };

export type CreateEvalResponseBodyEvalsResponseGuardrailConfig =
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean;

export const CreateEvalResponseBodyEvalsResponseType = {
  PythonEval: "python_eval",
} as const;
export type CreateEvalResponseBodyEvalsResponseType = ClosedEnum<
  typeof CreateEvalResponseBodyEvalsResponseType
>;

export type ResponseBodyPython = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean
    | undefined;
  code: string;
  type: CreateEvalResponseBodyEvalsResponseType;
  key: string;
};

export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody32Type =
  {
    Number: "number",
  } as const;
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody32Type =
  ClosedEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody32Type
  >;

export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONOperator =
  {
    Eq: "eq",
    Ne: "ne",
    Gt: "gt",
    Gte: "gte",
    Lt: "lt",
    Lte: "lte",
  } as const;
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONOperator =
  ClosedEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONOperator
  >;

export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber = {
  enabled: boolean;
  type:
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody32Type;
  value: number;
  operator: CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONOperator;
};

export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody3Type =
  {
    Boolean: "boolean",
  } as const;
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody3Type =
  ClosedEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody3Type
  >;

export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean = {
  enabled: boolean;
  type:
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody3Type;
  value: boolean;
};

export type CreateEvalResponseBodyEvalsGuardrailConfig =
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean;

export const CreateEvalResponseBodyEvalsType = {
  HttpEval: "http_eval",
} as const;
export type CreateEvalResponseBodyEvalsType = ClosedEnum<
  typeof CreateEvalResponseBodyEvalsType
>;

export const ResponseBodyMethod = {
  Get: "GET",
  Post: "POST",
} as const;
export type ResponseBodyMethod = ClosedEnum<typeof ResponseBodyMethod>;

export type ResponseBodyHTTP = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean
    | undefined;
  type: CreateEvalResponseBodyEvalsType;
  url: string;
  method: ResponseBodyMethod;
  headers: { [k: string]: string };
  payload: { [k: string]: any };
  key: string;
};

export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType =
  {
    Number: "number",
  } as const;
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType
  >;

export const CreateEvalGuardrailConfigEvalsResponse200Operator = {
  Eq: "eq",
  Ne: "ne",
  Gt: "gt",
  Gte: "gte",
  Lt: "lt",
  Lte: "lte",
} as const;
export type CreateEvalGuardrailConfigEvalsResponse200Operator = ClosedEnum<
  typeof CreateEvalGuardrailConfigEvalsResponse200Operator
>;

export type CreateEvalGuardrailConfigEvalsResponse200Number = {
  enabled: boolean;
  type:
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType;
  value: number;
  operator: CreateEvalGuardrailConfigEvalsResponse200Operator;
};

export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONType = {
  Boolean: "boolean",
} as const;
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONType =
  ClosedEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONType
  >;

export type CreateEvalGuardrailConfigEvalsResponse200Boolean = {
  enabled: boolean;
  type: CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONType;
  value: boolean;
};

export type CreateEvalResponseBodyGuardrailConfig =
  | CreateEvalGuardrailConfigEvalsResponse200Number
  | CreateEvalGuardrailConfigEvalsResponse200Boolean;

export const CreateEvalResponseBodyType = {
  JsonSchema: "json_schema",
} as const;
export type CreateEvalResponseBodyType = ClosedEnum<
  typeof CreateEvalResponseBodyType
>;

export type ResponseBodyJSON = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | CreateEvalGuardrailConfigEvalsResponse200Number
    | CreateEvalGuardrailConfigEvalsResponse200Boolean
    | undefined;
  type: CreateEvalResponseBodyType;
  schema: string;
  key: string;
};

export const CreateEvalGuardrailConfigEvalsResponse200Type = {
  Number: "number",
} as const;
export type CreateEvalGuardrailConfigEvalsResponse200Type = ClosedEnum<
  typeof CreateEvalGuardrailConfigEvalsResponse200Type
>;

export const CreateEvalGuardrailConfigEvalsResponseOperator = {
  Eq: "eq",
  Ne: "ne",
  Gt: "gt",
  Gte: "gte",
  Lt: "lt",
  Lte: "lte",
} as const;
export type CreateEvalGuardrailConfigEvalsResponseOperator = ClosedEnum<
  typeof CreateEvalGuardrailConfigEvalsResponseOperator
>;

export type CreateEvalGuardrailConfigEvalsResponseNumber = {
  enabled: boolean;
  type: CreateEvalGuardrailConfigEvalsResponse200Type;
  value: number;
  operator: CreateEvalGuardrailConfigEvalsResponseOperator;
};

export const CreateEvalGuardrailConfigEvalsResponseType = {
  Boolean: "boolean",
} as const;
export type CreateEvalGuardrailConfigEvalsResponseType = ClosedEnum<
  typeof CreateEvalGuardrailConfigEvalsResponseType
>;

export type CreateEvalGuardrailConfigEvalsResponseBoolean = {
  enabled: boolean;
  type: CreateEvalGuardrailConfigEvalsResponseType;
  value: boolean;
};

export type ResponseBodyGuardrailConfig =
  | CreateEvalGuardrailConfigEvalsResponseNumber
  | CreateEvalGuardrailConfigEvalsResponseBoolean;

export const ResponseBodyType = {
  LlmEval: "llm_eval",
} as const;
export type ResponseBodyType = ClosedEnum<typeof ResponseBodyType>;

export type ResponseBodyLLM = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | CreateEvalGuardrailConfigEvalsResponseNumber
    | CreateEvalGuardrailConfigEvalsResponseBoolean
    | undefined;
  type: ResponseBodyType;
  prompt: string;
  key: string;
  model: string;
};

/**
 * Successfully created an evaluator
 */
export type CreateEvalResponseBody =
  | ResponseBodyHTTP
  | ResponseBodyLLM
  | Ragas
  | ResponseBodyJSON
  | ResponseBodyPython
  | CreateEvalResponseBodyFunction
  | Typescript;

/** @internal */
export const CreateEvalGuardrailConfigEvalsRequestRequestBody42Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsRequestRequestBody42Type
  > = z.nativeEnum(CreateEvalGuardrailConfigEvalsRequestRequestBody42Type);

/** @internal */
export const CreateEvalGuardrailConfigEvalsRequestRequestBody42Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsRequestRequestBody42Type
  > = CreateEvalGuardrailConfigEvalsRequestRequestBody42Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsRequestRequestBody42Type$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsRequestRequestBody42Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsRequestRequestBody42Type$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsRequestRequestBody42Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsRequestRequestBody42Type$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsOperator$inboundSchema:
  z.ZodNativeEnum<typeof CreateEvalGuardrailConfigEvalsOperator> = z.nativeEnum(
    CreateEvalGuardrailConfigEvalsOperator,
  );

/** @internal */
export const CreateEvalGuardrailConfigEvalsOperator$outboundSchema:
  z.ZodNativeEnum<typeof CreateEvalGuardrailConfigEvalsOperator> =
    CreateEvalGuardrailConfigEvalsOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsOperator$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsOperator$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsOperator$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsOperator$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsOperator$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsNumber$inboundSchema: z.ZodType<
  CreateEvalGuardrailConfigEvalsNumber,
  z.ZodTypeDef,
  unknown
> = z.object({
  enabled: z.boolean(),
  type: CreateEvalGuardrailConfigEvalsRequestRequestBody42Type$inboundSchema,
  value: z.number(),
  operator: CreateEvalGuardrailConfigEvalsOperator$inboundSchema,
});

/** @internal */
export type CreateEvalGuardrailConfigEvalsNumber$Outbound = {
  enabled: boolean;
  type: string;
  value: number;
  operator: string;
};

/** @internal */
export const CreateEvalGuardrailConfigEvalsNumber$outboundSchema: z.ZodType<
  CreateEvalGuardrailConfigEvalsNumber$Outbound,
  z.ZodTypeDef,
  CreateEvalGuardrailConfigEvalsNumber
> = z.object({
  enabled: z.boolean(),
  type: CreateEvalGuardrailConfigEvalsRequestRequestBody42Type$outboundSchema,
  value: z.number(),
  operator: CreateEvalGuardrailConfigEvalsOperator$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsNumber$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsNumber$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsNumber$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsNumber$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsNumber$outboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsNumber$Outbound` instead. */
  export type Outbound = CreateEvalGuardrailConfigEvalsNumber$Outbound;
}

export function createEvalGuardrailConfigEvalsNumberToJSON(
  createEvalGuardrailConfigEvalsNumber: CreateEvalGuardrailConfigEvalsNumber,
): string {
  return JSON.stringify(
    CreateEvalGuardrailConfigEvalsNumber$outboundSchema.parse(
      createEvalGuardrailConfigEvalsNumber,
    ),
  );
}

export function createEvalGuardrailConfigEvalsNumberFromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalGuardrailConfigEvalsNumber, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalGuardrailConfigEvalsNumber$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalGuardrailConfigEvalsNumber' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsRequestRequestBody4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsRequestRequestBody4Type
  > = z.nativeEnum(CreateEvalGuardrailConfigEvalsRequestRequestBody4Type);

/** @internal */
export const CreateEvalGuardrailConfigEvalsRequestRequestBody4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsRequestRequestBody4Type
  > = CreateEvalGuardrailConfigEvalsRequestRequestBody4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsRequestRequestBody4Type$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsRequestRequestBody4Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsRequestRequestBody4Type$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsRequestRequestBody4Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsRequestRequestBody4Type$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsBoolean$inboundSchema: z.ZodType<
  CreateEvalGuardrailConfigEvalsBoolean,
  z.ZodTypeDef,
  unknown
> = z.object({
  enabled: z.boolean(),
  type: CreateEvalGuardrailConfigEvalsRequestRequestBody4Type$inboundSchema,
  value: z.boolean(),
});

/** @internal */
export type CreateEvalGuardrailConfigEvalsBoolean$Outbound = {
  enabled: boolean;
  type: string;
  value: boolean;
};

/** @internal */
export const CreateEvalGuardrailConfigEvalsBoolean$outboundSchema: z.ZodType<
  CreateEvalGuardrailConfigEvalsBoolean$Outbound,
  z.ZodTypeDef,
  CreateEvalGuardrailConfigEvalsBoolean
> = z.object({
  enabled: z.boolean(),
  type: CreateEvalGuardrailConfigEvalsRequestRequestBody4Type$outboundSchema,
  value: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsBoolean$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsBoolean$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsBoolean$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsBoolean$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsBoolean$outboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsBoolean$Outbound` instead. */
  export type Outbound = CreateEvalGuardrailConfigEvalsBoolean$Outbound;
}

export function createEvalGuardrailConfigEvalsBooleanToJSON(
  createEvalGuardrailConfigEvalsBoolean: CreateEvalGuardrailConfigEvalsBoolean,
): string {
  return JSON.stringify(
    CreateEvalGuardrailConfigEvalsBoolean$outboundSchema.parse(
      createEvalGuardrailConfigEvalsBoolean,
    ),
  );
}

export function createEvalGuardrailConfigEvalsBooleanFromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalGuardrailConfigEvalsBoolean, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalGuardrailConfigEvalsBoolean$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalGuardrailConfigEvalsBoolean' from JSON`,
  );
}

/** @internal */
export const CreateEvalRequestBodyEvalsGuardrailConfig$inboundSchema: z.ZodType<
  CreateEvalRequestBodyEvalsGuardrailConfig,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => CreateEvalGuardrailConfigEvalsNumber$inboundSchema),
  z.lazy(() => CreateEvalGuardrailConfigEvalsBoolean$inboundSchema),
]);

/** @internal */
export type CreateEvalRequestBodyEvalsGuardrailConfig$Outbound =
  | CreateEvalGuardrailConfigEvalsNumber$Outbound
  | CreateEvalGuardrailConfigEvalsBoolean$Outbound;

/** @internal */
export const CreateEvalRequestBodyEvalsGuardrailConfig$outboundSchema:
  z.ZodType<
    CreateEvalRequestBodyEvalsGuardrailConfig$Outbound,
    z.ZodTypeDef,
    CreateEvalRequestBodyEvalsGuardrailConfig
  > = z.union([
    z.lazy(() => CreateEvalGuardrailConfigEvalsNumber$outboundSchema),
    z.lazy(() => CreateEvalGuardrailConfigEvalsBoolean$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalRequestBodyEvalsGuardrailConfig$ {
  /** @deprecated use `CreateEvalRequestBodyEvalsGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalRequestBodyEvalsGuardrailConfig$inboundSchema;
  /** @deprecated use `CreateEvalRequestBodyEvalsGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalRequestBodyEvalsGuardrailConfig$outboundSchema;
  /** @deprecated use `CreateEvalRequestBodyEvalsGuardrailConfig$Outbound` instead. */
  export type Outbound = CreateEvalRequestBodyEvalsGuardrailConfig$Outbound;
}

export function createEvalRequestBodyEvalsGuardrailConfigToJSON(
  createEvalRequestBodyEvalsGuardrailConfig:
    CreateEvalRequestBodyEvalsGuardrailConfig,
): string {
  return JSON.stringify(
    CreateEvalRequestBodyEvalsGuardrailConfig$outboundSchema.parse(
      createEvalRequestBodyEvalsGuardrailConfig,
    ),
  );
}

export function createEvalRequestBodyEvalsGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalRequestBodyEvalsGuardrailConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalRequestBodyEvalsGuardrailConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateEvalRequestBodyEvalsGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const CreateEvalRequestBodyEvalsOutputType$inboundSchema:
  z.ZodNativeEnum<typeof CreateEvalRequestBodyEvalsOutputType> = z.nativeEnum(
    CreateEvalRequestBodyEvalsOutputType,
  );

/** @internal */
export const CreateEvalRequestBodyEvalsOutputType$outboundSchema:
  z.ZodNativeEnum<typeof CreateEvalRequestBodyEvalsOutputType> =
    CreateEvalRequestBodyEvalsOutputType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalRequestBodyEvalsOutputType$ {
  /** @deprecated use `CreateEvalRequestBodyEvalsOutputType$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalRequestBodyEvalsOutputType$inboundSchema;
  /** @deprecated use `CreateEvalRequestBodyEvalsOutputType$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalRequestBodyEvalsOutputType$outboundSchema;
}

/** @internal */
export const CreateEvalRequestBodyEvalsType$inboundSchema: z.ZodNativeEnum<
  typeof CreateEvalRequestBodyEvalsType
> = z.nativeEnum(CreateEvalRequestBodyEvalsType);

/** @internal */
export const CreateEvalRequestBodyEvalsType$outboundSchema: z.ZodNativeEnum<
  typeof CreateEvalRequestBodyEvalsType
> = CreateEvalRequestBodyEvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalRequestBodyEvalsType$ {
  /** @deprecated use `CreateEvalRequestBodyEvalsType$inboundSchema` instead. */
  export const inboundSchema = CreateEvalRequestBodyEvalsType$inboundSchema;
  /** @deprecated use `CreateEvalRequestBodyEvalsType$outboundSchema` instead. */
  export const outboundSchema = CreateEvalRequestBodyEvalsType$outboundSchema;
}

/** @internal */
export const Python$inboundSchema: z.ZodType<Python, z.ZodTypeDef, unknown> = z
  .object({
    guardrail_config: z.union([
      z.lazy(() => CreateEvalGuardrailConfigEvalsNumber$inboundSchema),
      z.lazy(() => CreateEvalGuardrailConfigEvalsBoolean$inboundSchema),
    ]).optional(),
    output_type: CreateEvalRequestBodyEvalsOutputType$inboundSchema.optional(),
    code: z.string(),
    type: CreateEvalRequestBodyEvalsType$inboundSchema,
    path: z.string(),
    description: z.string().default(""),
    key: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "guardrail_config": "guardrailConfig",
      "output_type": "outputType",
    });
  });

/** @internal */
export type Python$Outbound = {
  guardrail_config?:
    | CreateEvalGuardrailConfigEvalsNumber$Outbound
    | CreateEvalGuardrailConfigEvalsBoolean$Outbound
    | undefined;
  output_type?: string | undefined;
  code: string;
  type: string;
  path: string;
  description: string;
  key: string;
};

/** @internal */
export const Python$outboundSchema: z.ZodType<
  Python$Outbound,
  z.ZodTypeDef,
  Python
> = z.object({
  guardrailConfig: z.union([
    z.lazy(() => CreateEvalGuardrailConfigEvalsNumber$outboundSchema),
    z.lazy(() => CreateEvalGuardrailConfigEvalsBoolean$outboundSchema),
  ]).optional(),
  outputType: CreateEvalRequestBodyEvalsOutputType$outboundSchema.optional(),
  code: z.string(),
  type: CreateEvalRequestBodyEvalsType$outboundSchema,
  path: z.string(),
  description: z.string().default(""),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    guardrailConfig: "guardrail_config",
    outputType: "output_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Python$ {
  /** @deprecated use `Python$inboundSchema` instead. */
  export const inboundSchema = Python$inboundSchema;
  /** @deprecated use `Python$outboundSchema` instead. */
  export const outboundSchema = Python$outboundSchema;
  /** @deprecated use `Python$Outbound` instead. */
  export type Outbound = Python$Outbound;
}

export function pythonToJSON(python: Python): string {
  return JSON.stringify(Python$outboundSchema.parse(python));
}

export function pythonFromJSON(
  jsonString: string,
): SafeParseResult<Python, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Python$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Python' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsRequestRequestBody3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsRequestRequestBody3Type
  > = z.nativeEnum(CreateEvalGuardrailConfigEvalsRequestRequestBody3Type);

/** @internal */
export const CreateEvalGuardrailConfigEvalsRequestRequestBody3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsRequestRequestBody3Type
  > = CreateEvalGuardrailConfigEvalsRequestRequestBody3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsRequestRequestBody3Type$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsRequestRequestBody3Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsRequestRequestBody3Type$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsRequestRequestBody3Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsRequestRequestBody3Type$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigOperator$inboundSchema: z.ZodNativeEnum<
  typeof CreateEvalGuardrailConfigOperator
> = z.nativeEnum(CreateEvalGuardrailConfigOperator);

/** @internal */
export const CreateEvalGuardrailConfigOperator$outboundSchema: z.ZodNativeEnum<
  typeof CreateEvalGuardrailConfigOperator
> = CreateEvalGuardrailConfigOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigOperator$ {
  /** @deprecated use `CreateEvalGuardrailConfigOperator$inboundSchema` instead. */
  export const inboundSchema = CreateEvalGuardrailConfigOperator$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigOperator$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigOperator$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigNumber$inboundSchema: z.ZodType<
  CreateEvalGuardrailConfigNumber,
  z.ZodTypeDef,
  unknown
> = z.object({
  enabled: z.boolean(),
  type: CreateEvalGuardrailConfigEvalsRequestRequestBody3Type$inboundSchema,
  value: z.number(),
  operator: CreateEvalGuardrailConfigOperator$inboundSchema,
});

/** @internal */
export type CreateEvalGuardrailConfigNumber$Outbound = {
  enabled: boolean;
  type: string;
  value: number;
  operator: string;
};

/** @internal */
export const CreateEvalGuardrailConfigNumber$outboundSchema: z.ZodType<
  CreateEvalGuardrailConfigNumber$Outbound,
  z.ZodTypeDef,
  CreateEvalGuardrailConfigNumber
> = z.object({
  enabled: z.boolean(),
  type: CreateEvalGuardrailConfigEvalsRequestRequestBody3Type$outboundSchema,
  value: z.number(),
  operator: CreateEvalGuardrailConfigOperator$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigNumber$ {
  /** @deprecated use `CreateEvalGuardrailConfigNumber$inboundSchema` instead. */
  export const inboundSchema = CreateEvalGuardrailConfigNumber$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigNumber$outboundSchema` instead. */
  export const outboundSchema = CreateEvalGuardrailConfigNumber$outboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigNumber$Outbound` instead. */
  export type Outbound = CreateEvalGuardrailConfigNumber$Outbound;
}

export function createEvalGuardrailConfigNumberToJSON(
  createEvalGuardrailConfigNumber: CreateEvalGuardrailConfigNumber,
): string {
  return JSON.stringify(
    CreateEvalGuardrailConfigNumber$outboundSchema.parse(
      createEvalGuardrailConfigNumber,
    ),
  );
}

export function createEvalGuardrailConfigNumberFromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalGuardrailConfigNumber, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalGuardrailConfigNumber$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalGuardrailConfigNumber' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsRequestRequestBodyType$inboundSchema:
  z.ZodNativeEnum<typeof CreateEvalGuardrailConfigEvalsRequestRequestBodyType> =
    z.nativeEnum(CreateEvalGuardrailConfigEvalsRequestRequestBodyType);

/** @internal */
export const CreateEvalGuardrailConfigEvalsRequestRequestBodyType$outboundSchema:
  z.ZodNativeEnum<typeof CreateEvalGuardrailConfigEvalsRequestRequestBodyType> =
    CreateEvalGuardrailConfigEvalsRequestRequestBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsRequestRequestBodyType$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsRequestRequestBodyType$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsRequestRequestBodyType$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsRequestRequestBodyType$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsRequestRequestBodyType$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigBoolean$inboundSchema: z.ZodType<
  CreateEvalGuardrailConfigBoolean,
  z.ZodTypeDef,
  unknown
> = z.object({
  enabled: z.boolean(),
  type: CreateEvalGuardrailConfigEvalsRequestRequestBodyType$inboundSchema,
  value: z.boolean(),
});

/** @internal */
export type CreateEvalGuardrailConfigBoolean$Outbound = {
  enabled: boolean;
  type: string;
  value: boolean;
};

/** @internal */
export const CreateEvalGuardrailConfigBoolean$outboundSchema: z.ZodType<
  CreateEvalGuardrailConfigBoolean$Outbound,
  z.ZodTypeDef,
  CreateEvalGuardrailConfigBoolean
> = z.object({
  enabled: z.boolean(),
  type: CreateEvalGuardrailConfigEvalsRequestRequestBodyType$outboundSchema,
  value: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigBoolean$ {
  /** @deprecated use `CreateEvalGuardrailConfigBoolean$inboundSchema` instead. */
  export const inboundSchema = CreateEvalGuardrailConfigBoolean$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigBoolean$outboundSchema` instead. */
  export const outboundSchema = CreateEvalGuardrailConfigBoolean$outboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigBoolean$Outbound` instead. */
  export type Outbound = CreateEvalGuardrailConfigBoolean$Outbound;
}

export function createEvalGuardrailConfigBooleanToJSON(
  createEvalGuardrailConfigBoolean: CreateEvalGuardrailConfigBoolean,
): string {
  return JSON.stringify(
    CreateEvalGuardrailConfigBoolean$outboundSchema.parse(
      createEvalGuardrailConfigBoolean,
    ),
  );
}

export function createEvalGuardrailConfigBooleanFromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalGuardrailConfigBoolean, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalGuardrailConfigBoolean$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalGuardrailConfigBoolean' from JSON`,
  );
}

/** @internal */
export const CreateEvalRequestBodyGuardrailConfig$inboundSchema: z.ZodType<
  CreateEvalRequestBodyGuardrailConfig,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => CreateEvalGuardrailConfigNumber$inboundSchema),
  z.lazy(() => CreateEvalGuardrailConfigBoolean$inboundSchema),
]);

/** @internal */
export type CreateEvalRequestBodyGuardrailConfig$Outbound =
  | CreateEvalGuardrailConfigNumber$Outbound
  | CreateEvalGuardrailConfigBoolean$Outbound;

/** @internal */
export const CreateEvalRequestBodyGuardrailConfig$outboundSchema: z.ZodType<
  CreateEvalRequestBodyGuardrailConfig$Outbound,
  z.ZodTypeDef,
  CreateEvalRequestBodyGuardrailConfig
> = z.union([
  z.lazy(() => CreateEvalGuardrailConfigNumber$outboundSchema),
  z.lazy(() => CreateEvalGuardrailConfigBoolean$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalRequestBodyGuardrailConfig$ {
  /** @deprecated use `CreateEvalRequestBodyGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalRequestBodyGuardrailConfig$inboundSchema;
  /** @deprecated use `CreateEvalRequestBodyGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalRequestBodyGuardrailConfig$outboundSchema;
  /** @deprecated use `CreateEvalRequestBodyGuardrailConfig$Outbound` instead. */
  export type Outbound = CreateEvalRequestBodyGuardrailConfig$Outbound;
}

export function createEvalRequestBodyGuardrailConfigToJSON(
  createEvalRequestBodyGuardrailConfig: CreateEvalRequestBodyGuardrailConfig,
): string {
  return JSON.stringify(
    CreateEvalRequestBodyGuardrailConfig$outboundSchema.parse(
      createEvalRequestBodyGuardrailConfig,
    ),
  );
}

export function createEvalRequestBodyGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalRequestBodyGuardrailConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalRequestBodyGuardrailConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalRequestBodyGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const CreateEvalRequestBodyOutputType$inboundSchema: z.ZodNativeEnum<
  typeof CreateEvalRequestBodyOutputType
> = z.nativeEnum(CreateEvalRequestBodyOutputType);

/** @internal */
export const CreateEvalRequestBodyOutputType$outboundSchema: z.ZodNativeEnum<
  typeof CreateEvalRequestBodyOutputType
> = CreateEvalRequestBodyOutputType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalRequestBodyOutputType$ {
  /** @deprecated use `CreateEvalRequestBodyOutputType$inboundSchema` instead. */
  export const inboundSchema = CreateEvalRequestBodyOutputType$inboundSchema;
  /** @deprecated use `CreateEvalRequestBodyOutputType$outboundSchema` instead. */
  export const outboundSchema = CreateEvalRequestBodyOutputType$outboundSchema;
}

/** @internal */
export const CreateEvalRequestBodyType$inboundSchema: z.ZodNativeEnum<
  typeof CreateEvalRequestBodyType
> = z.nativeEnum(CreateEvalRequestBodyType);

/** @internal */
export const CreateEvalRequestBodyType$outboundSchema: z.ZodNativeEnum<
  typeof CreateEvalRequestBodyType
> = CreateEvalRequestBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalRequestBodyType$ {
  /** @deprecated use `CreateEvalRequestBodyType$inboundSchema` instead. */
  export const inboundSchema = CreateEvalRequestBodyType$inboundSchema;
  /** @deprecated use `CreateEvalRequestBodyType$outboundSchema` instead. */
  export const outboundSchema = CreateEvalRequestBodyType$outboundSchema;
}

/** @internal */
export const CreateEvalRequestBodyMethod$inboundSchema: z.ZodNativeEnum<
  typeof CreateEvalRequestBodyMethod
> = z.nativeEnum(CreateEvalRequestBodyMethod);

/** @internal */
export const CreateEvalRequestBodyMethod$outboundSchema: z.ZodNativeEnum<
  typeof CreateEvalRequestBodyMethod
> = CreateEvalRequestBodyMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalRequestBodyMethod$ {
  /** @deprecated use `CreateEvalRequestBodyMethod$inboundSchema` instead. */
  export const inboundSchema = CreateEvalRequestBodyMethod$inboundSchema;
  /** @deprecated use `CreateEvalRequestBodyMethod$outboundSchema` instead. */
  export const outboundSchema = CreateEvalRequestBodyMethod$outboundSchema;
}

/** @internal */
export const CreateEvalRequestBodyHTTP$inboundSchema: z.ZodType<
  CreateEvalRequestBodyHTTP,
  z.ZodTypeDef,
  unknown
> = z.object({
  guardrail_config: z.union([
    z.lazy(() => CreateEvalGuardrailConfigNumber$inboundSchema),
    z.lazy(() => CreateEvalGuardrailConfigBoolean$inboundSchema),
  ]).optional(),
  output_type: CreateEvalRequestBodyOutputType$inboundSchema.optional(),
  type: CreateEvalRequestBodyType$inboundSchema,
  url: z.string(),
  method: CreateEvalRequestBodyMethod$inboundSchema,
  headers: z.record(z.string()),
  payload: z.record(z.any()),
  path: z.string(),
  description: z.string().default(""),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "guardrail_config": "guardrailConfig",
    "output_type": "outputType",
  });
});

/** @internal */
export type CreateEvalRequestBodyHTTP$Outbound = {
  guardrail_config?:
    | CreateEvalGuardrailConfigNumber$Outbound
    | CreateEvalGuardrailConfigBoolean$Outbound
    | undefined;
  output_type?: string | undefined;
  type: string;
  url: string;
  method: string;
  headers: { [k: string]: string };
  payload: { [k: string]: any };
  path: string;
  description: string;
  key: string;
};

/** @internal */
export const CreateEvalRequestBodyHTTP$outboundSchema: z.ZodType<
  CreateEvalRequestBodyHTTP$Outbound,
  z.ZodTypeDef,
  CreateEvalRequestBodyHTTP
> = z.object({
  guardrailConfig: z.union([
    z.lazy(() => CreateEvalGuardrailConfigNumber$outboundSchema),
    z.lazy(() => CreateEvalGuardrailConfigBoolean$outboundSchema),
  ]).optional(),
  outputType: CreateEvalRequestBodyOutputType$outboundSchema.optional(),
  type: CreateEvalRequestBodyType$outboundSchema,
  url: z.string(),
  method: CreateEvalRequestBodyMethod$outboundSchema,
  headers: z.record(z.string()),
  payload: z.record(z.any()),
  path: z.string(),
  description: z.string().default(""),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    guardrailConfig: "guardrail_config",
    outputType: "output_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalRequestBodyHTTP$ {
  /** @deprecated use `CreateEvalRequestBodyHTTP$inboundSchema` instead. */
  export const inboundSchema = CreateEvalRequestBodyHTTP$inboundSchema;
  /** @deprecated use `CreateEvalRequestBodyHTTP$outboundSchema` instead. */
  export const outboundSchema = CreateEvalRequestBodyHTTP$outboundSchema;
  /** @deprecated use `CreateEvalRequestBodyHTTP$Outbound` instead. */
  export type Outbound = CreateEvalRequestBodyHTTP$Outbound;
}

export function createEvalRequestBodyHTTPToJSON(
  createEvalRequestBodyHTTP: CreateEvalRequestBodyHTTP,
): string {
  return JSON.stringify(
    CreateEvalRequestBodyHTTP$outboundSchema.parse(createEvalRequestBodyHTTP),
  );
}

export function createEvalRequestBodyHTTPFromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalRequestBodyHTTP, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalRequestBodyHTTP$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalRequestBodyHTTP' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsRequestType$inboundSchema:
  z.ZodNativeEnum<typeof CreateEvalGuardrailConfigEvalsRequestType> = z
    .nativeEnum(CreateEvalGuardrailConfigEvalsRequestType);

/** @internal */
export const CreateEvalGuardrailConfigEvalsRequestType$outboundSchema:
  z.ZodNativeEnum<typeof CreateEvalGuardrailConfigEvalsRequestType> =
    CreateEvalGuardrailConfigEvalsRequestType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsRequestType$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsRequestType$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsRequestType$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsRequestType$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsRequestType$outboundSchema;
}

/** @internal */
export const GuardrailConfigOperator$inboundSchema: z.ZodNativeEnum<
  typeof GuardrailConfigOperator
> = z.nativeEnum(GuardrailConfigOperator);

/** @internal */
export const GuardrailConfigOperator$outboundSchema: z.ZodNativeEnum<
  typeof GuardrailConfigOperator
> = GuardrailConfigOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GuardrailConfigOperator$ {
  /** @deprecated use `GuardrailConfigOperator$inboundSchema` instead. */
  export const inboundSchema = GuardrailConfigOperator$inboundSchema;
  /** @deprecated use `GuardrailConfigOperator$outboundSchema` instead. */
  export const outboundSchema = GuardrailConfigOperator$outboundSchema;
}

/** @internal */
export const GuardrailConfigNumber$inboundSchema: z.ZodType<
  GuardrailConfigNumber,
  z.ZodTypeDef,
  unknown
> = z.object({
  enabled: z.boolean(),
  type: CreateEvalGuardrailConfigEvalsRequestType$inboundSchema,
  value: z.number(),
  operator: GuardrailConfigOperator$inboundSchema,
});

/** @internal */
export type GuardrailConfigNumber$Outbound = {
  enabled: boolean;
  type: string;
  value: number;
  operator: string;
};

/** @internal */
export const GuardrailConfigNumber$outboundSchema: z.ZodType<
  GuardrailConfigNumber$Outbound,
  z.ZodTypeDef,
  GuardrailConfigNumber
> = z.object({
  enabled: z.boolean(),
  type: CreateEvalGuardrailConfigEvalsRequestType$outboundSchema,
  value: z.number(),
  operator: GuardrailConfigOperator$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GuardrailConfigNumber$ {
  /** @deprecated use `GuardrailConfigNumber$inboundSchema` instead. */
  export const inboundSchema = GuardrailConfigNumber$inboundSchema;
  /** @deprecated use `GuardrailConfigNumber$outboundSchema` instead. */
  export const outboundSchema = GuardrailConfigNumber$outboundSchema;
  /** @deprecated use `GuardrailConfigNumber$Outbound` instead. */
  export type Outbound = GuardrailConfigNumber$Outbound;
}

export function guardrailConfigNumberToJSON(
  guardrailConfigNumber: GuardrailConfigNumber,
): string {
  return JSON.stringify(
    GuardrailConfigNumber$outboundSchema.parse(guardrailConfigNumber),
  );
}

export function guardrailConfigNumberFromJSON(
  jsonString: string,
): SafeParseResult<GuardrailConfigNumber, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GuardrailConfigNumber$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GuardrailConfigNumber' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsType$inboundSchema: z.ZodNativeEnum<
  typeof CreateEvalGuardrailConfigEvalsType
> = z.nativeEnum(CreateEvalGuardrailConfigEvalsType);

/** @internal */
export const CreateEvalGuardrailConfigEvalsType$outboundSchema: z.ZodNativeEnum<
  typeof CreateEvalGuardrailConfigEvalsType
> = CreateEvalGuardrailConfigEvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsType$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsType$inboundSchema` instead. */
  export const inboundSchema = CreateEvalGuardrailConfigEvalsType$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsType$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsType$outboundSchema;
}

/** @internal */
export const GuardrailConfigBoolean$inboundSchema: z.ZodType<
  GuardrailConfigBoolean,
  z.ZodTypeDef,
  unknown
> = z.object({
  enabled: z.boolean(),
  type: CreateEvalGuardrailConfigEvalsType$inboundSchema,
  value: z.boolean(),
});

/** @internal */
export type GuardrailConfigBoolean$Outbound = {
  enabled: boolean;
  type: string;
  value: boolean;
};

/** @internal */
export const GuardrailConfigBoolean$outboundSchema: z.ZodType<
  GuardrailConfigBoolean$Outbound,
  z.ZodTypeDef,
  GuardrailConfigBoolean
> = z.object({
  enabled: z.boolean(),
  type: CreateEvalGuardrailConfigEvalsType$outboundSchema,
  value: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GuardrailConfigBoolean$ {
  /** @deprecated use `GuardrailConfigBoolean$inboundSchema` instead. */
  export const inboundSchema = GuardrailConfigBoolean$inboundSchema;
  /** @deprecated use `GuardrailConfigBoolean$outboundSchema` instead. */
  export const outboundSchema = GuardrailConfigBoolean$outboundSchema;
  /** @deprecated use `GuardrailConfigBoolean$Outbound` instead. */
  export type Outbound = GuardrailConfigBoolean$Outbound;
}

export function guardrailConfigBooleanToJSON(
  guardrailConfigBoolean: GuardrailConfigBoolean,
): string {
  return JSON.stringify(
    GuardrailConfigBoolean$outboundSchema.parse(guardrailConfigBoolean),
  );
}

export function guardrailConfigBooleanFromJSON(
  jsonString: string,
): SafeParseResult<GuardrailConfigBoolean, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GuardrailConfigBoolean$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GuardrailConfigBoolean' from JSON`,
  );
}

/** @internal */
export const RequestBodyGuardrailConfig$inboundSchema: z.ZodType<
  RequestBodyGuardrailConfig,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GuardrailConfigNumber$inboundSchema),
  z.lazy(() => GuardrailConfigBoolean$inboundSchema),
]);

/** @internal */
export type RequestBodyGuardrailConfig$Outbound =
  | GuardrailConfigNumber$Outbound
  | GuardrailConfigBoolean$Outbound;

/** @internal */
export const RequestBodyGuardrailConfig$outboundSchema: z.ZodType<
  RequestBodyGuardrailConfig$Outbound,
  z.ZodTypeDef,
  RequestBodyGuardrailConfig
> = z.union([
  z.lazy(() => GuardrailConfigNumber$outboundSchema),
  z.lazy(() => GuardrailConfigBoolean$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyGuardrailConfig$ {
  /** @deprecated use `RequestBodyGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema = RequestBodyGuardrailConfig$inboundSchema;
  /** @deprecated use `RequestBodyGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema = RequestBodyGuardrailConfig$outboundSchema;
  /** @deprecated use `RequestBodyGuardrailConfig$Outbound` instead. */
  export type Outbound = RequestBodyGuardrailConfig$Outbound;
}

export function requestBodyGuardrailConfigToJSON(
  requestBodyGuardrailConfig: RequestBodyGuardrailConfig,
): string {
  return JSON.stringify(
    RequestBodyGuardrailConfig$outboundSchema.parse(requestBodyGuardrailConfig),
  );
}

export function requestBodyGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<RequestBodyGuardrailConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RequestBodyGuardrailConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RequestBodyGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const RequestBodyOutputType$inboundSchema: z.ZodNativeEnum<
  typeof RequestBodyOutputType
> = z.nativeEnum(RequestBodyOutputType);

/** @internal */
export const RequestBodyOutputType$outboundSchema: z.ZodNativeEnum<
  typeof RequestBodyOutputType
> = RequestBodyOutputType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyOutputType$ {
  /** @deprecated use `RequestBodyOutputType$inboundSchema` instead. */
  export const inboundSchema = RequestBodyOutputType$inboundSchema;
  /** @deprecated use `RequestBodyOutputType$outboundSchema` instead. */
  export const outboundSchema = RequestBodyOutputType$outboundSchema;
}

/** @internal */
export const RequestBodyType$inboundSchema: z.ZodNativeEnum<
  typeof RequestBodyType
> = z.nativeEnum(RequestBodyType);

/** @internal */
export const RequestBodyType$outboundSchema: z.ZodNativeEnum<
  typeof RequestBodyType
> = RequestBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RequestBodyType$ {
  /** @deprecated use `RequestBodyType$inboundSchema` instead. */
  export const inboundSchema = RequestBodyType$inboundSchema;
  /** @deprecated use `RequestBodyType$outboundSchema` instead. */
  export const outboundSchema = RequestBodyType$outboundSchema;
}

/** @internal */
export const Json$inboundSchema: z.ZodType<Json, z.ZodTypeDef, unknown> = z
  .object({
    guardrail_config: z.union([
      z.lazy(() => GuardrailConfigNumber$inboundSchema),
      z.lazy(() => GuardrailConfigBoolean$inboundSchema),
    ]).optional(),
    output_type: RequestBodyOutputType$inboundSchema.optional(),
    type: RequestBodyType$inboundSchema,
    schema: z.string(),
    path: z.string(),
    description: z.string().default(""),
    key: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "guardrail_config": "guardrailConfig",
      "output_type": "outputType",
    });
  });

/** @internal */
export type Json$Outbound = {
  guardrail_config?:
    | GuardrailConfigNumber$Outbound
    | GuardrailConfigBoolean$Outbound
    | undefined;
  output_type?: string | undefined;
  type: string;
  schema: string;
  path: string;
  description: string;
  key: string;
};

/** @internal */
export const Json$outboundSchema: z.ZodType<Json$Outbound, z.ZodTypeDef, Json> =
  z.object({
    guardrailConfig: z.union([
      z.lazy(() => GuardrailConfigNumber$outboundSchema),
      z.lazy(() => GuardrailConfigBoolean$outboundSchema),
    ]).optional(),
    outputType: RequestBodyOutputType$outboundSchema.optional(),
    type: RequestBodyType$outboundSchema,
    schema: z.string(),
    path: z.string(),
    description: z.string().default(""),
    key: z.string(),
  }).transform((v) => {
    return remap$(v, {
      guardrailConfig: "guardrail_config",
      outputType: "output_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Json$ {
  /** @deprecated use `Json$inboundSchema` instead. */
  export const inboundSchema = Json$inboundSchema;
  /** @deprecated use `Json$outboundSchema` instead. */
  export const outboundSchema = Json$outboundSchema;
  /** @deprecated use `Json$Outbound` instead. */
  export type Outbound = Json$Outbound;
}

export function jsonToJSON(json: Json): string {
  return JSON.stringify(Json$outboundSchema.parse(json));
}

export function jsonFromJSON(
  jsonString: string,
): SafeParseResult<Json, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Json$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Json' from JSON`,
  );
}

/** @internal */
export const GuardrailConfigType$inboundSchema: z.ZodNativeEnum<
  typeof GuardrailConfigType
> = z.nativeEnum(GuardrailConfigType);

/** @internal */
export const GuardrailConfigType$outboundSchema: z.ZodNativeEnum<
  typeof GuardrailConfigType
> = GuardrailConfigType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GuardrailConfigType$ {
  /** @deprecated use `GuardrailConfigType$inboundSchema` instead. */
  export const inboundSchema = GuardrailConfigType$inboundSchema;
  /** @deprecated use `GuardrailConfigType$outboundSchema` instead. */
  export const outboundSchema = GuardrailConfigType$outboundSchema;
}

/** @internal */
export const Operator$inboundSchema: z.ZodNativeEnum<typeof Operator> = z
  .nativeEnum(Operator);

/** @internal */
export const Operator$outboundSchema: z.ZodNativeEnum<typeof Operator> =
  Operator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Operator$ {
  /** @deprecated use `Operator$inboundSchema` instead. */
  export const inboundSchema = Operator$inboundSchema;
  /** @deprecated use `Operator$outboundSchema` instead. */
  export const outboundSchema = Operator$outboundSchema;
}

/** @internal */
export const NumberT$inboundSchema: z.ZodType<NumberT, z.ZodTypeDef, unknown> =
  z.object({
    enabled: z.boolean(),
    type: GuardrailConfigType$inboundSchema,
    value: z.number(),
    operator: Operator$inboundSchema,
  });

/** @internal */
export type NumberT$Outbound = {
  enabled: boolean;
  type: string;
  value: number;
  operator: string;
};

/** @internal */
export const NumberT$outboundSchema: z.ZodType<
  NumberT$Outbound,
  z.ZodTypeDef,
  NumberT
> = z.object({
  enabled: z.boolean(),
  type: GuardrailConfigType$outboundSchema,
  value: z.number(),
  operator: Operator$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NumberT$ {
  /** @deprecated use `NumberT$inboundSchema` instead. */
  export const inboundSchema = NumberT$inboundSchema;
  /** @deprecated use `NumberT$outboundSchema` instead. */
  export const outboundSchema = NumberT$outboundSchema;
  /** @deprecated use `NumberT$Outbound` instead. */
  export type Outbound = NumberT$Outbound;
}

export function numberToJSON(numberT: NumberT): string {
  return JSON.stringify(NumberT$outboundSchema.parse(numberT));
}

export function numberFromJSON(
  jsonString: string,
): SafeParseResult<NumberT, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => NumberT$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'NumberT' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigType$inboundSchema: z.ZodNativeEnum<
  typeof CreateEvalGuardrailConfigType
> = z.nativeEnum(CreateEvalGuardrailConfigType);

/** @internal */
export const CreateEvalGuardrailConfigType$outboundSchema: z.ZodNativeEnum<
  typeof CreateEvalGuardrailConfigType
> = CreateEvalGuardrailConfigType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigType$ {
  /** @deprecated use `CreateEvalGuardrailConfigType$inboundSchema` instead. */
  export const inboundSchema = CreateEvalGuardrailConfigType$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigType$outboundSchema` instead. */
  export const outboundSchema = CreateEvalGuardrailConfigType$outboundSchema;
}

/** @internal */
export const Boolean$inboundSchema: z.ZodType<Boolean, z.ZodTypeDef, unknown> =
  z.object({
    enabled: z.boolean(),
    type: CreateEvalGuardrailConfigType$inboundSchema,
    value: z.boolean(),
  });

/** @internal */
export type Boolean$Outbound = {
  enabled: boolean;
  type: string;
  value: boolean;
};

/** @internal */
export const Boolean$outboundSchema: z.ZodType<
  Boolean$Outbound,
  z.ZodTypeDef,
  Boolean
> = z.object({
  enabled: z.boolean(),
  type: CreateEvalGuardrailConfigType$outboundSchema,
  value: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Boolean$ {
  /** @deprecated use `Boolean$inboundSchema` instead. */
  export const inboundSchema = Boolean$inboundSchema;
  /** @deprecated use `Boolean$outboundSchema` instead. */
  export const outboundSchema = Boolean$outboundSchema;
  /** @deprecated use `Boolean$Outbound` instead. */
  export type Outbound = Boolean$Outbound;
}

export function booleanToJSON(value: Boolean): string {
  return JSON.stringify(Boolean$outboundSchema.parse(value));
}

export function booleanFromJSON(
  jsonString: string,
): SafeParseResult<Boolean, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Boolean$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Boolean' from JSON`,
  );
}

/** @internal */
export const GuardrailConfig$inboundSchema: z.ZodType<
  GuardrailConfig,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => NumberT$inboundSchema),
  z.lazy(() => Boolean$inboundSchema),
]);

/** @internal */
export type GuardrailConfig$Outbound = NumberT$Outbound | Boolean$Outbound;

/** @internal */
export const GuardrailConfig$outboundSchema: z.ZodType<
  GuardrailConfig$Outbound,
  z.ZodTypeDef,
  GuardrailConfig
> = z.union([
  z.lazy(() => NumberT$outboundSchema),
  z.lazy(() => Boolean$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GuardrailConfig$ {
  /** @deprecated use `GuardrailConfig$inboundSchema` instead. */
  export const inboundSchema = GuardrailConfig$inboundSchema;
  /** @deprecated use `GuardrailConfig$outboundSchema` instead. */
  export const outboundSchema = GuardrailConfig$outboundSchema;
  /** @deprecated use `GuardrailConfig$Outbound` instead. */
  export type Outbound = GuardrailConfig$Outbound;
}

export function guardrailConfigToJSON(
  guardrailConfig: GuardrailConfig,
): string {
  return JSON.stringify(GuardrailConfig$outboundSchema.parse(guardrailConfig));
}

export function guardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<GuardrailConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GuardrailConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GuardrailConfig' from JSON`,
  );
}

/** @internal */
export const OutputType$inboundSchema: z.ZodNativeEnum<typeof OutputType> = z
  .nativeEnum(OutputType);

/** @internal */
export const OutputType$outboundSchema: z.ZodNativeEnum<typeof OutputType> =
  OutputType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OutputType$ {
  /** @deprecated use `OutputType$inboundSchema` instead. */
  export const inboundSchema = OutputType$inboundSchema;
  /** @deprecated use `OutputType$outboundSchema` instead. */
  export const outboundSchema = OutputType$outboundSchema;
}

/** @internal */
export const CreateEvalRequestBodyEvalsRequestType$inboundSchema:
  z.ZodNativeEnum<typeof CreateEvalRequestBodyEvalsRequestType> = z.nativeEnum(
    CreateEvalRequestBodyEvalsRequestType,
  );

/** @internal */
export const CreateEvalRequestBodyEvalsRequestType$outboundSchema:
  z.ZodNativeEnum<typeof CreateEvalRequestBodyEvalsRequestType> =
    CreateEvalRequestBodyEvalsRequestType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalRequestBodyEvalsRequestType$ {
  /** @deprecated use `CreateEvalRequestBodyEvalsRequestType$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalRequestBodyEvalsRequestType$inboundSchema;
  /** @deprecated use `CreateEvalRequestBodyEvalsRequestType$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalRequestBodyEvalsRequestType$outboundSchema;
}

/** @internal */
export const Llm$inboundSchema: z.ZodType<Llm, z.ZodTypeDef, unknown> = z
  .object({
    guardrail_config: z.union([
      z.lazy(() => NumberT$inboundSchema),
      z.lazy(() => Boolean$inboundSchema),
    ]).optional(),
    output_type: OutputType$inboundSchema.optional(),
    type: CreateEvalRequestBodyEvalsRequestType$inboundSchema,
    prompt: z.string(),
    path: z.string(),
    description: z.string().default(""),
    model: z.string(),
    key: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "guardrail_config": "guardrailConfig",
      "output_type": "outputType",
    });
  });

/** @internal */
export type Llm$Outbound = {
  guardrail_config?: NumberT$Outbound | Boolean$Outbound | undefined;
  output_type?: string | undefined;
  type: string;
  prompt: string;
  path: string;
  description: string;
  model: string;
  key: string;
};

/** @internal */
export const Llm$outboundSchema: z.ZodType<Llm$Outbound, z.ZodTypeDef, Llm> = z
  .object({
    guardrailConfig: z.union([
      z.lazy(() => NumberT$outboundSchema),
      z.lazy(() => Boolean$outboundSchema),
    ]).optional(),
    outputType: OutputType$outboundSchema.optional(),
    type: CreateEvalRequestBodyEvalsRequestType$outboundSchema,
    prompt: z.string(),
    path: z.string(),
    description: z.string().default(""),
    model: z.string(),
    key: z.string(),
  }).transform((v) => {
    return remap$(v, {
      guardrailConfig: "guardrail_config",
      outputType: "output_type",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Llm$ {
  /** @deprecated use `Llm$inboundSchema` instead. */
  export const inboundSchema = Llm$inboundSchema;
  /** @deprecated use `Llm$outboundSchema` instead. */
  export const outboundSchema = Llm$outboundSchema;
  /** @deprecated use `Llm$Outbound` instead. */
  export type Outbound = Llm$Outbound;
}

export function llmToJSON(llm: Llm): string {
  return JSON.stringify(Llm$outboundSchema.parse(llm));
}

export function llmFromJSON(
  jsonString: string,
): SafeParseResult<Llm, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Llm$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Llm' from JSON`,
  );
}

/** @internal */
export const CreateEvalRequestBody$inboundSchema: z.ZodType<
  CreateEvalRequestBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => CreateEvalRequestBodyHTTP$inboundSchema),
  z.lazy(() => Llm$inboundSchema),
  z.lazy(() => Json$inboundSchema),
  z.lazy(() => Python$inboundSchema),
]);

/** @internal */
export type CreateEvalRequestBody$Outbound =
  | CreateEvalRequestBodyHTTP$Outbound
  | Llm$Outbound
  | Json$Outbound
  | Python$Outbound;

/** @internal */
export const CreateEvalRequestBody$outboundSchema: z.ZodType<
  CreateEvalRequestBody$Outbound,
  z.ZodTypeDef,
  CreateEvalRequestBody
> = z.union([
  z.lazy(() => CreateEvalRequestBodyHTTP$outboundSchema),
  z.lazy(() => Llm$outboundSchema),
  z.lazy(() => Json$outboundSchema),
  z.lazy(() => Python$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalRequestBody$ {
  /** @deprecated use `CreateEvalRequestBody$inboundSchema` instead. */
  export const inboundSchema = CreateEvalRequestBody$inboundSchema;
  /** @deprecated use `CreateEvalRequestBody$outboundSchema` instead. */
  export const outboundSchema = CreateEvalRequestBody$outboundSchema;
  /** @deprecated use `CreateEvalRequestBody$Outbound` instead. */
  export type Outbound = CreateEvalRequestBody$Outbound;
}

export function createEvalRequestBodyToJSON(
  createEvalRequestBody: CreateEvalRequestBody,
): string {
  return JSON.stringify(
    CreateEvalRequestBody$outboundSchema.parse(createEvalRequestBody),
  );
}

export function createEvalRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalRequestBody' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody72Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody72Type
  > = z.nativeEnum(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody72Type,
  );

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody72Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody72Type
  > =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody72Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody72Type$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody72Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody72Type$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody72Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody72Type$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Operator$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Operator
  > = z.nativeEnum(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Operator,
  );

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Operator$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Operator
  > =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Operator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Operator$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Operator$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Operator$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Operator$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Operator$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number$inboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody72Type$inboundSchema,
    value: z.number(),
    operator:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Operator$inboundSchema,
  });

/** @internal */
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number$Outbound =
  {
    enabled: boolean;
    type: string;
    value: number;
    operator: string;
  };

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number$outboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number$Outbound,
    z.ZodTypeDef,
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody72Type$outboundSchema,
    value: z.number(),
    operator:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Operator$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number$outboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number$Outbound` instead. */
  export type Outbound =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number$Outbound;
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7NumberToJSON(
  createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number:
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number,
): string {
  return JSON.stringify(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number$outboundSchema
      .parse(
        createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number,
      ),
  );
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7NumberFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Type
  > = z.nativeEnum(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Type,
  );

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Type
  > =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Type$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Type$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Type$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean$inboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Type$inboundSchema,
    value: z.boolean(),
  });

/** @internal */
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean$Outbound =
  {
    enabled: boolean;
    type: string;
    value: boolean;
  };

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean$outboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean$Outbound,
    z.ZodTypeDef,
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Type$outboundSchema,
    value: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean$outboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean$Outbound` instead. */
  export type Outbound =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean$Outbound;
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7BooleanToJSON(
  createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean:
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean,
): string {
  return JSON.stringify(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean$outboundSchema
      .parse(
        createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean,
      ),
  );
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7BooleanFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean' from JSON`,
  );
}

/** @internal */
export const CreateEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig$inboundSchema:
  z.ZodType<
    CreateEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number$inboundSchema
    ),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean$inboundSchema
    ),
  ]);

/** @internal */
export type CreateEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig$Outbound =
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number$Outbound
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean$Outbound;

/** @internal */
export const CreateEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig$outboundSchema:
  z.ZodType<
    CreateEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig$Outbound,
    z.ZodTypeDef,
    CreateEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig
  > = z.union([
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number$outboundSchema
    ),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig$ {
  /** @deprecated use `CreateEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig$inboundSchema;
  /** @deprecated use `CreateEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig$outboundSchema;
  /** @deprecated use `CreateEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig$Outbound` instead. */
  export type Outbound =
    CreateEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig$Outbound;
}

export function createEvalResponseBodyEvalsResponse200ApplicationJSON7GuardrailConfigToJSON(
  createEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig:
    CreateEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig,
): string {
  return JSON.stringify(
    CreateEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig$outboundSchema
      .parse(
        createEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig,
      ),
  );
}

export function createEvalResponseBodyEvalsResponse200ApplicationJSON7GuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalResponseBodyEvalsResponse200ApplicationJson7GuardrailConfig' from JSON`,
  );
}

/** @internal */
export const CreateEvalResponseBodyEvalsResponse200ApplicationJson7Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalResponseBodyEvalsResponse200ApplicationJson7Type
  > = z.nativeEnum(CreateEvalResponseBodyEvalsResponse200ApplicationJson7Type);

/** @internal */
export const CreateEvalResponseBodyEvalsResponse200ApplicationJson7Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalResponseBodyEvalsResponse200ApplicationJson7Type
  > = CreateEvalResponseBodyEvalsResponse200ApplicationJson7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalResponseBodyEvalsResponse200ApplicationJson7Type$ {
  /** @deprecated use `CreateEvalResponseBodyEvalsResponse200ApplicationJson7Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalResponseBodyEvalsResponse200ApplicationJson7Type$inboundSchema;
  /** @deprecated use `CreateEvalResponseBodyEvalsResponse200ApplicationJson7Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalResponseBodyEvalsResponse200ApplicationJson7Type$outboundSchema;
}

/** @internal */
export const Typescript$inboundSchema: z.ZodType<
  Typescript,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  description: z.string(),
  created: z.string().default("2025-10-27T09:34:56.432Z"),
  updated: z.string().default("2025-10-27T09:34:56.432Z"),
  guardrail_config: z.union([
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number$inboundSchema
    ),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean$inboundSchema
    ),
  ]).optional(),
  code: z.string(),
  type:
    CreateEvalResponseBodyEvalsResponse200ApplicationJson7Type$inboundSchema,
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "guardrail_config": "guardrailConfig",
  });
});

/** @internal */
export type Typescript$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number$Outbound
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean$Outbound
    | undefined;
  code: string;
  type: string;
  key: string;
};

/** @internal */
export const Typescript$outboundSchema: z.ZodType<
  Typescript$Outbound,
  z.ZodTypeDef,
  Typescript
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-10-27T09:34:56.432Z"),
  updated: z.string().default("2025-10-27T09:34:56.432Z"),
  guardrailConfig: z.union([
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Number$outboundSchema
    ),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody7Boolean$outboundSchema
    ),
  ]).optional(),
  code: z.string(),
  type:
    CreateEvalResponseBodyEvalsResponse200ApplicationJson7Type$outboundSchema,
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Typescript$ {
  /** @deprecated use `Typescript$inboundSchema` instead. */
  export const inboundSchema = Typescript$inboundSchema;
  /** @deprecated use `Typescript$outboundSchema` instead. */
  export const outboundSchema = Typescript$outboundSchema;
  /** @deprecated use `Typescript$Outbound` instead. */
  export type Outbound = Typescript$Outbound;
}

export function typescriptToJSON(typescript: Typescript): string {
  return JSON.stringify(Typescript$outboundSchema.parse(typescript));
}

export function typescriptFromJSON(
  jsonString: string,
): SafeParseResult<Typescript, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Typescript$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Typescript' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody62Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody62Type
  > = z.nativeEnum(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody62Type,
  );

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody62Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody62Type
  > =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody62Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody62Type$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody62Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody62Type$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody62Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody62Type$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Operator$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Operator
  > = z.nativeEnum(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Operator,
  );

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Operator$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Operator
  > =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Operator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Operator$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Operator$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Operator$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Operator$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Operator$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number$inboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody62Type$inboundSchema,
    value: z.number(),
    operator:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Operator$inboundSchema,
  });

/** @internal */
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number$Outbound =
  {
    enabled: boolean;
    type: string;
    value: number;
    operator: string;
  };

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number$outboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number$Outbound,
    z.ZodTypeDef,
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody62Type$outboundSchema,
    value: z.number(),
    operator:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Operator$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number$outboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number$Outbound` instead. */
  export type Outbound =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number$Outbound;
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6NumberToJSON(
  createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number:
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number,
): string {
  return JSON.stringify(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number$outboundSchema
      .parse(
        createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number,
      ),
  );
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6NumberFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Type
  > = z.nativeEnum(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Type,
  );

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Type
  > =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Type$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Type$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Type$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean$inboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Type$inboundSchema,
    value: z.boolean(),
  });

/** @internal */
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean$Outbound =
  {
    enabled: boolean;
    type: string;
    value: boolean;
  };

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean$outboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean$Outbound,
    z.ZodTypeDef,
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Type$outboundSchema,
    value: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean$outboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean$Outbound` instead. */
  export type Outbound =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean$Outbound;
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6BooleanToJSON(
  createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean:
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean,
): string {
  return JSON.stringify(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean$outboundSchema
      .parse(
        createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean,
      ),
  );
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6BooleanFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean' from JSON`,
  );
}

/** @internal */
export const CreateEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig$inboundSchema:
  z.ZodType<
    CreateEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number$inboundSchema
    ),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean$inboundSchema
    ),
  ]);

/** @internal */
export type CreateEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig$Outbound =
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number$Outbound
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean$Outbound;

/** @internal */
export const CreateEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig$outboundSchema:
  z.ZodType<
    CreateEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig$Outbound,
    z.ZodTypeDef,
    CreateEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig
  > = z.union([
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number$outboundSchema
    ),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig$ {
  /** @deprecated use `CreateEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig$inboundSchema;
  /** @deprecated use `CreateEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig$outboundSchema;
  /** @deprecated use `CreateEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig$Outbound` instead. */
  export type Outbound =
    CreateEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig$Outbound;
}

export function createEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfigToJSON(
  createEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig:
    CreateEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig,
): string {
  return JSON.stringify(
    CreateEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig$outboundSchema
      .parse(
        createEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig,
      ),
  );
}

export function createEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalResponseBodyEvalsResponse200ApplicationJSONGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const CreateEvalResponseBodyEvalsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalResponseBodyEvalsResponse200ApplicationJSONType
  > = z.nativeEnum(CreateEvalResponseBodyEvalsResponse200ApplicationJSONType);

/** @internal */
export const CreateEvalResponseBodyEvalsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalResponseBodyEvalsResponse200ApplicationJSONType
  > = CreateEvalResponseBodyEvalsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalResponseBodyEvalsResponse200ApplicationJSONType$ {
  /** @deprecated use `CreateEvalResponseBodyEvalsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalResponseBodyEvalsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `CreateEvalResponseBodyEvalsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalResponseBodyEvalsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const RagasMetric$inboundSchema: z.ZodNativeEnum<typeof RagasMetric> = z
  .nativeEnum(RagasMetric);

/** @internal */
export const RagasMetric$outboundSchema: z.ZodNativeEnum<typeof RagasMetric> =
  RagasMetric$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RagasMetric$ {
  /** @deprecated use `RagasMetric$inboundSchema` instead. */
  export const inboundSchema = RagasMetric$inboundSchema;
  /** @deprecated use `RagasMetric$outboundSchema` instead. */
  export const outboundSchema = RagasMetric$outboundSchema;
}

/** @internal */
export const Ragas$inboundSchema: z.ZodType<Ragas, z.ZodTypeDef, unknown> = z
  .object({
    _id: z.string(),
    description: z.string(),
    created: z.string().default("2025-10-27T09:34:56.432Z"),
    updated: z.string().default("2025-10-27T09:34:56.432Z"),
    guardrail_config: z.union([
      z.lazy(() =>
        CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number$inboundSchema
      ),
      z.lazy(() =>
        CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean$inboundSchema
      ),
    ]).optional(),
    type:
      CreateEvalResponseBodyEvalsResponse200ApplicationJSONType$inboundSchema,
    ragas_metric: RagasMetric$inboundSchema,
    key: z.string(),
    model: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "_id": "id",
      "guardrail_config": "guardrailConfig",
      "ragas_metric": "ragasMetric",
    });
  });

/** @internal */
export type Ragas$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number$Outbound
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean$Outbound
    | undefined;
  type: string;
  ragas_metric: string;
  key: string;
  model: string;
};

/** @internal */
export const Ragas$outboundSchema: z.ZodType<
  Ragas$Outbound,
  z.ZodTypeDef,
  Ragas
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-10-27T09:34:56.432Z"),
  updated: z.string().default("2025-10-27T09:34:56.432Z"),
  guardrailConfig: z.union([
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Number$outboundSchema
    ),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody6Boolean$outboundSchema
    ),
  ]).optional(),
  type:
    CreateEvalResponseBodyEvalsResponse200ApplicationJSONType$outboundSchema,
  ragasMetric: RagasMetric$outboundSchema,
  key: z.string(),
  model: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
    ragasMetric: "ragas_metric",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Ragas$ {
  /** @deprecated use `Ragas$inboundSchema` instead. */
  export const inboundSchema = Ragas$inboundSchema;
  /** @deprecated use `Ragas$outboundSchema` instead. */
  export const outboundSchema = Ragas$outboundSchema;
  /** @deprecated use `Ragas$Outbound` instead. */
  export type Outbound = Ragas$Outbound;
}

export function ragasToJSON(ragas: Ragas): string {
  return JSON.stringify(Ragas$outboundSchema.parse(ragas));
}

export function ragasFromJSON(
  jsonString: string,
): SafeParseResult<Ragas, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Ragas$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Ragas' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody52Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody52Type
  > = z.nativeEnum(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody52Type,
  );

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody52Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody52Type
  > =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody52Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody52Type$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody52Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody52Type$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody52Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody52Type$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Operator$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Operator
  > = z.nativeEnum(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Operator,
  );

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Operator$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Operator
  > =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Operator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Operator$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Operator$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Operator$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Operator$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Operator$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number$inboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody52Type$inboundSchema,
    value: z.number(),
    operator:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Operator$inboundSchema,
  });

/** @internal */
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number$Outbound =
  {
    enabled: boolean;
    type: string;
    value: number;
    operator: string;
  };

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number$outboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number$Outbound,
    z.ZodTypeDef,
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody52Type$outboundSchema,
    value: z.number(),
    operator:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Operator$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number$outboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number$Outbound` instead. */
  export type Outbound =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number$Outbound;
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5NumberToJSON(
  createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number:
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number,
): string {
  return JSON.stringify(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number$outboundSchema
      .parse(
        createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number,
      ),
  );
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5NumberFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Type
  > = z.nativeEnum(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Type,
  );

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Type
  > =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Type$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Type$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Type$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean$inboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Type$inboundSchema,
    value: z.boolean(),
  });

/** @internal */
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean$Outbound =
  {
    enabled: boolean;
    type: string;
    value: boolean;
  };

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean$outboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean$Outbound,
    z.ZodTypeDef,
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Type$outboundSchema,
    value: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean$outboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean$Outbound` instead. */
  export type Outbound =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean$Outbound;
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5BooleanToJSON(
  createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean:
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean,
): string {
  return JSON.stringify(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean$outboundSchema
      .parse(
        createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean,
      ),
  );
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5BooleanFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean' from JSON`,
  );
}

/** @internal */
export const CreateEvalResponseBodyEvalsResponse200GuardrailConfig$inboundSchema:
  z.ZodType<
    CreateEvalResponseBodyEvalsResponse200GuardrailConfig,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number$inboundSchema
    ),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean$inboundSchema
    ),
  ]);

/** @internal */
export type CreateEvalResponseBodyEvalsResponse200GuardrailConfig$Outbound =
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number$Outbound
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean$Outbound;

/** @internal */
export const CreateEvalResponseBodyEvalsResponse200GuardrailConfig$outboundSchema:
  z.ZodType<
    CreateEvalResponseBodyEvalsResponse200GuardrailConfig$Outbound,
    z.ZodTypeDef,
    CreateEvalResponseBodyEvalsResponse200GuardrailConfig
  > = z.union([
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number$outboundSchema
    ),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalResponseBodyEvalsResponse200GuardrailConfig$ {
  /** @deprecated use `CreateEvalResponseBodyEvalsResponse200GuardrailConfig$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalResponseBodyEvalsResponse200GuardrailConfig$inboundSchema;
  /** @deprecated use `CreateEvalResponseBodyEvalsResponse200GuardrailConfig$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalResponseBodyEvalsResponse200GuardrailConfig$outboundSchema;
  /** @deprecated use `CreateEvalResponseBodyEvalsResponse200GuardrailConfig$Outbound` instead. */
  export type Outbound =
    CreateEvalResponseBodyEvalsResponse200GuardrailConfig$Outbound;
}

export function createEvalResponseBodyEvalsResponse200GuardrailConfigToJSON(
  createEvalResponseBodyEvalsResponse200GuardrailConfig:
    CreateEvalResponseBodyEvalsResponse200GuardrailConfig,
): string {
  return JSON.stringify(
    CreateEvalResponseBodyEvalsResponse200GuardrailConfig$outboundSchema.parse(
      createEvalResponseBodyEvalsResponse200GuardrailConfig,
    ),
  );
}

export function createEvalResponseBodyEvalsResponse200GuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalResponseBodyEvalsResponse200GuardrailConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalResponseBodyEvalsResponse200GuardrailConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateEvalResponseBodyEvalsResponse200GuardrailConfig' from JSON`,
  );
}

/** @internal */
export const CreateEvalResponseBodyEvalsResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof CreateEvalResponseBodyEvalsResponse200Type> = z
    .nativeEnum(CreateEvalResponseBodyEvalsResponse200Type);

/** @internal */
export const CreateEvalResponseBodyEvalsResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof CreateEvalResponseBodyEvalsResponse200Type> =
    CreateEvalResponseBodyEvalsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalResponseBodyEvalsResponse200Type$ {
  /** @deprecated use `CreateEvalResponseBodyEvalsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalResponseBodyEvalsResponse200Type$inboundSchema;
  /** @deprecated use `CreateEvalResponseBodyEvalsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalResponseBodyEvalsResponse200Type$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody535Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody535Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody535Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody535Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody535Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody535Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody535Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody535Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody535Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody535Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody535Type$outboundSchema;
}

/** @internal */
export const ThirtyFive$inboundSchema: z.ZodType<
  ThirtyFive,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody535Type$inboundSchema,
});

/** @internal */
export type ThirtyFive$Outbound = {
  type: string;
};

/** @internal */
export const ThirtyFive$outboundSchema: z.ZodType<
  ThirtyFive$Outbound,
  z.ZodTypeDef,
  ThirtyFive
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody535Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ThirtyFive$ {
  /** @deprecated use `ThirtyFive$inboundSchema` instead. */
  export const inboundSchema = ThirtyFive$inboundSchema;
  /** @deprecated use `ThirtyFive$outboundSchema` instead. */
  export const outboundSchema = ThirtyFive$outboundSchema;
  /** @deprecated use `ThirtyFive$Outbound` instead. */
  export type Outbound = ThirtyFive$Outbound;
}

export function thirtyFiveToJSON(thirtyFive: ThirtyFive): string {
  return JSON.stringify(ThirtyFive$outboundSchema.parse(thirtyFive));
}

export function thirtyFiveFromJSON(
  jsonString: string,
): SafeParseResult<ThirtyFive, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ThirtyFive$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ThirtyFive' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody534Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody534Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody534Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody534Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody534Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody534Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody534Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody534Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody534Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody534Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody534Type$outboundSchema;
}

/** @internal */
export const ThirtyFour$inboundSchema: z.ZodType<
  ThirtyFour,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody534Type$inboundSchema,
});

/** @internal */
export type ThirtyFour$Outbound = {
  type: string;
};

/** @internal */
export const ThirtyFour$outboundSchema: z.ZodType<
  ThirtyFour$Outbound,
  z.ZodTypeDef,
  ThirtyFour
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody534Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ThirtyFour$ {
  /** @deprecated use `ThirtyFour$inboundSchema` instead. */
  export const inboundSchema = ThirtyFour$inboundSchema;
  /** @deprecated use `ThirtyFour$outboundSchema` instead. */
  export const outboundSchema = ThirtyFour$outboundSchema;
  /** @deprecated use `ThirtyFour$Outbound` instead. */
  export type Outbound = ThirtyFour$Outbound;
}

export function thirtyFourToJSON(thirtyFour: ThirtyFour): string {
  return JSON.stringify(ThirtyFour$outboundSchema.parse(thirtyFour));
}

export function thirtyFourFromJSON(
  jsonString: string,
): SafeParseResult<ThirtyFour, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ThirtyFour$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ThirtyFour' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody533Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody533Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody533Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody533Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody533Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody533Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody533Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody533Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody533Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody533Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody533Type$outboundSchema;
}

/** @internal */
export const ThirtyThree$inboundSchema: z.ZodType<
  ThirtyThree,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody533Type$inboundSchema,
});

/** @internal */
export type ThirtyThree$Outbound = {
  type: string;
};

/** @internal */
export const ThirtyThree$outboundSchema: z.ZodType<
  ThirtyThree$Outbound,
  z.ZodTypeDef,
  ThirtyThree
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody533Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ThirtyThree$ {
  /** @deprecated use `ThirtyThree$inboundSchema` instead. */
  export const inboundSchema = ThirtyThree$inboundSchema;
  /** @deprecated use `ThirtyThree$outboundSchema` instead. */
  export const outboundSchema = ThirtyThree$outboundSchema;
  /** @deprecated use `ThirtyThree$Outbound` instead. */
  export type Outbound = ThirtyThree$Outbound;
}

export function thirtyThreeToJSON(thirtyThree: ThirtyThree): string {
  return JSON.stringify(ThirtyThree$outboundSchema.parse(thirtyThree));
}

export function thirtyThreeFromJSON(
  jsonString: string,
): SafeParseResult<ThirtyThree, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ThirtyThree$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ThirtyThree' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody532Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody532Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody532Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody532Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody532Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody532Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody532Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody532Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody532Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody532Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody532Type$outboundSchema;
}

/** @internal */
export const ThirtyTwo$inboundSchema: z.ZodType<
  ThirtyTwo,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody532Type$inboundSchema,
});

/** @internal */
export type ThirtyTwo$Outbound = {
  type: string;
};

/** @internal */
export const ThirtyTwo$outboundSchema: z.ZodType<
  ThirtyTwo$Outbound,
  z.ZodTypeDef,
  ThirtyTwo
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody532Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ThirtyTwo$ {
  /** @deprecated use `ThirtyTwo$inboundSchema` instead. */
  export const inboundSchema = ThirtyTwo$inboundSchema;
  /** @deprecated use `ThirtyTwo$outboundSchema` instead. */
  export const outboundSchema = ThirtyTwo$outboundSchema;
  /** @deprecated use `ThirtyTwo$Outbound` instead. */
  export type Outbound = ThirtyTwo$Outbound;
}

export function thirtyTwoToJSON(thirtyTwo: ThirtyTwo): string {
  return JSON.stringify(ThirtyTwo$outboundSchema.parse(thirtyTwo));
}

export function thirtyTwoFromJSON(
  jsonString: string,
): SafeParseResult<ThirtyTwo, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ThirtyTwo$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ThirtyTwo' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody531Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody531Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody531Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody531Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody531Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody531Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody531Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody531Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody531Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody531Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody531Type$outboundSchema;
}

/** @internal */
export const ThirtyOne$inboundSchema: z.ZodType<
  ThirtyOne,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody531Type$inboundSchema,
});

/** @internal */
export type ThirtyOne$Outbound = {
  type: string;
};

/** @internal */
export const ThirtyOne$outboundSchema: z.ZodType<
  ThirtyOne$Outbound,
  z.ZodTypeDef,
  ThirtyOne
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody531Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ThirtyOne$ {
  /** @deprecated use `ThirtyOne$inboundSchema` instead. */
  export const inboundSchema = ThirtyOne$inboundSchema;
  /** @deprecated use `ThirtyOne$outboundSchema` instead. */
  export const outboundSchema = ThirtyOne$outboundSchema;
  /** @deprecated use `ThirtyOne$Outbound` instead. */
  export type Outbound = ThirtyOne$Outbound;
}

export function thirtyOneToJSON(thirtyOne: ThirtyOne): string {
  return JSON.stringify(ThirtyOne$outboundSchema.parse(thirtyOne));
}

export function thirtyOneFromJSON(
  jsonString: string,
): SafeParseResult<ThirtyOne, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ThirtyOne$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ThirtyOne' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody530Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody530Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody530Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody530Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody530Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody530Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody530Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody530Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody530Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody530Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody530Type$outboundSchema;
}

/** @internal */
export const Thirty$inboundSchema: z.ZodType<Thirty, z.ZodTypeDef, unknown> = z
  .object({
    type:
      CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody530Type$inboundSchema,
  });

/** @internal */
export type Thirty$Outbound = {
  type: string;
};

/** @internal */
export const Thirty$outboundSchema: z.ZodType<
  Thirty$Outbound,
  z.ZodTypeDef,
  Thirty
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody530Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Thirty$ {
  /** @deprecated use `Thirty$inboundSchema` instead. */
  export const inboundSchema = Thirty$inboundSchema;
  /** @deprecated use `Thirty$outboundSchema` instead. */
  export const outboundSchema = Thirty$outboundSchema;
  /** @deprecated use `Thirty$Outbound` instead. */
  export type Outbound = Thirty$Outbound;
}

export function thirtyToJSON(thirty: Thirty): string {
  return JSON.stringify(Thirty$outboundSchema.parse(thirty));
}

export function thirtyFromJSON(
  jsonString: string,
): SafeParseResult<Thirty, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Thirty$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Thirty' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody529Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody529Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody529Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody529Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody529Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody529Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody529Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody529Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody529Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody529Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody529Type$outboundSchema;
}

/** @internal */
export const TwentyNine$inboundSchema: z.ZodType<
  TwentyNine,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody529Type$inboundSchema,
});

/** @internal */
export type TwentyNine$Outbound = {
  type: string;
};

/** @internal */
export const TwentyNine$outboundSchema: z.ZodType<
  TwentyNine$Outbound,
  z.ZodTypeDef,
  TwentyNine
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody529Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwentyNine$ {
  /** @deprecated use `TwentyNine$inboundSchema` instead. */
  export const inboundSchema = TwentyNine$inboundSchema;
  /** @deprecated use `TwentyNine$outboundSchema` instead. */
  export const outboundSchema = TwentyNine$outboundSchema;
  /** @deprecated use `TwentyNine$Outbound` instead. */
  export type Outbound = TwentyNine$Outbound;
}

export function twentyNineToJSON(twentyNine: TwentyNine): string {
  return JSON.stringify(TwentyNine$outboundSchema.parse(twentyNine));
}

export function twentyNineFromJSON(
  jsonString: string,
): SafeParseResult<TwentyNine, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TwentyNine$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TwentyNine' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody528Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody528Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody528Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody528Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody528Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody528Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody528Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody528Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody528Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody528Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody528Type$outboundSchema;
}

/** @internal */
export const TwentyEight$inboundSchema: z.ZodType<
  TwentyEight,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody528Type$inboundSchema,
});

/** @internal */
export type TwentyEight$Outbound = {
  type: string;
};

/** @internal */
export const TwentyEight$outboundSchema: z.ZodType<
  TwentyEight$Outbound,
  z.ZodTypeDef,
  TwentyEight
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody528Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwentyEight$ {
  /** @deprecated use `TwentyEight$inboundSchema` instead. */
  export const inboundSchema = TwentyEight$inboundSchema;
  /** @deprecated use `TwentyEight$outboundSchema` instead. */
  export const outboundSchema = TwentyEight$outboundSchema;
  /** @deprecated use `TwentyEight$Outbound` instead. */
  export type Outbound = TwentyEight$Outbound;
}

export function twentyEightToJSON(twentyEight: TwentyEight): string {
  return JSON.stringify(TwentyEight$outboundSchema.parse(twentyEight));
}

export function twentyEightFromJSON(
  jsonString: string,
): SafeParseResult<TwentyEight, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TwentyEight$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TwentyEight' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody527Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody527Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody527Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody527Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody527Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody527Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody527Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody527Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody527Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody527Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody527Type$outboundSchema;
}

/** @internal */
export const TwentySeven$inboundSchema: z.ZodType<
  TwentySeven,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody527Type$inboundSchema,
});

/** @internal */
export type TwentySeven$Outbound = {
  type: string;
};

/** @internal */
export const TwentySeven$outboundSchema: z.ZodType<
  TwentySeven$Outbound,
  z.ZodTypeDef,
  TwentySeven
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody527Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwentySeven$ {
  /** @deprecated use `TwentySeven$inboundSchema` instead. */
  export const inboundSchema = TwentySeven$inboundSchema;
  /** @deprecated use `TwentySeven$outboundSchema` instead. */
  export const outboundSchema = TwentySeven$outboundSchema;
  /** @deprecated use `TwentySeven$Outbound` instead. */
  export type Outbound = TwentySeven$Outbound;
}

export function twentySevenToJSON(twentySeven: TwentySeven): string {
  return JSON.stringify(TwentySeven$outboundSchema.parse(twentySeven));
}

export function twentySevenFromJSON(
  jsonString: string,
): SafeParseResult<TwentySeven, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TwentySeven$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TwentySeven' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody526Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody526Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody526Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody526Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody526Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody526Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody526Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody526Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody526Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody526Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody526Type$outboundSchema;
}

/** @internal */
export const TwentySix$inboundSchema: z.ZodType<
  TwentySix,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody526Type$inboundSchema,
  keywords: z.array(z.string()),
});

/** @internal */
export type TwentySix$Outbound = {
  type: string;
  keywords: Array<string>;
};

/** @internal */
export const TwentySix$outboundSchema: z.ZodType<
  TwentySix$Outbound,
  z.ZodTypeDef,
  TwentySix
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody526Type$outboundSchema,
  keywords: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwentySix$ {
  /** @deprecated use `TwentySix$inboundSchema` instead. */
  export const inboundSchema = TwentySix$inboundSchema;
  /** @deprecated use `TwentySix$outboundSchema` instead. */
  export const outboundSchema = TwentySix$outboundSchema;
  /** @deprecated use `TwentySix$Outbound` instead. */
  export type Outbound = TwentySix$Outbound;
}

export function twentySixToJSON(twentySix: TwentySix): string {
  return JSON.stringify(TwentySix$outboundSchema.parse(twentySix));
}

export function twentySixFromJSON(
  jsonString: string,
): SafeParseResult<TwentySix, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TwentySix$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TwentySix' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody525Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody525Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody525Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody525Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody525Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody525Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody525Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody525Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody525Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody525Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody525Type$outboundSchema;
}

/** @internal */
export const TwentyFive$inboundSchema: z.ZodType<
  TwentyFive,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody525Type$inboundSchema,
  topic: z.string(),
});

/** @internal */
export type TwentyFive$Outbound = {
  type: string;
  topic: string;
};

/** @internal */
export const TwentyFive$outboundSchema: z.ZodType<
  TwentyFive$Outbound,
  z.ZodTypeDef,
  TwentyFive
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody525Type$outboundSchema,
  topic: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwentyFive$ {
  /** @deprecated use `TwentyFive$inboundSchema` instead. */
  export const inboundSchema = TwentyFive$inboundSchema;
  /** @deprecated use `TwentyFive$outboundSchema` instead. */
  export const outboundSchema = TwentyFive$outboundSchema;
  /** @deprecated use `TwentyFive$Outbound` instead. */
  export type Outbound = TwentyFive$Outbound;
}

export function twentyFiveToJSON(twentyFive: TwentyFive): string {
  return JSON.stringify(TwentyFive$outboundSchema.parse(twentyFive));
}

export function twentyFiveFromJSON(
  jsonString: string,
): SafeParseResult<TwentyFive, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TwentyFive$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TwentyFive' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody524Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody524Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody524Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody524Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody524Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody524Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody524Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody524Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody524Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody524Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody524Type$outboundSchema;
}

/** @internal */
export const TwentyFour$inboundSchema: z.ZodType<
  TwentyFour,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody524Type$inboundSchema,
});

/** @internal */
export type TwentyFour$Outbound = {
  type: string;
};

/** @internal */
export const TwentyFour$outboundSchema: z.ZodType<
  TwentyFour$Outbound,
  z.ZodTypeDef,
  TwentyFour
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody524Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TwentyFour$ {
  /** @deprecated use `TwentyFour$inboundSchema` instead. */
  export const inboundSchema = TwentyFour$inboundSchema;
  /** @deprecated use `TwentyFour$outboundSchema` instead. */
  export const outboundSchema = TwentyFour$outboundSchema;
  /** @deprecated use `TwentyFour$Outbound` instead. */
  export type Outbound = TwentyFour$Outbound;
}

export function twentyFourToJSON(twentyFour: TwentyFour): string {
  return JSON.stringify(TwentyFour$outboundSchema.parse(twentyFour));
}

export function twentyFourFromJSON(
  jsonString: string,
): SafeParseResult<TwentyFour, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TwentyFour$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TwentyFour' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody523Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody523Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody523Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody523Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody523Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody523Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody523Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody523Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody523Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody523Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody523Type$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams23$inboundSchema: z.ZodType<
  CreateEvalFunctionParams23,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody523Type$inboundSchema,
});

/** @internal */
export type CreateEvalFunctionParams23$Outbound = {
  type: string;
};

/** @internal */
export const CreateEvalFunctionParams23$outboundSchema: z.ZodType<
  CreateEvalFunctionParams23$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams23
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody523Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams23$ {
  /** @deprecated use `CreateEvalFunctionParams23$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams23$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams23$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams23$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams23$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams23$Outbound;
}

export function createEvalFunctionParams23ToJSON(
  createEvalFunctionParams23: CreateEvalFunctionParams23,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams23$outboundSchema.parse(createEvalFunctionParams23),
  );
}

export function createEvalFunctionParams23FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams23, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams23$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams23' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody522Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody522Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody522Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody522Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody522Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody522Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody522Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody522Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody522Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody522Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody522Type$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams22$inboundSchema: z.ZodType<
  CreateEvalFunctionParams22,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody522Type$inboundSchema,
});

/** @internal */
export type CreateEvalFunctionParams22$Outbound = {
  type: string;
};

/** @internal */
export const CreateEvalFunctionParams22$outboundSchema: z.ZodType<
  CreateEvalFunctionParams22$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams22
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody522Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams22$ {
  /** @deprecated use `CreateEvalFunctionParams22$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams22$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams22$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams22$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams22$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams22$Outbound;
}

export function createEvalFunctionParams22ToJSON(
  createEvalFunctionParams22: CreateEvalFunctionParams22,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams22$outboundSchema.parse(createEvalFunctionParams22),
  );
}

export function createEvalFunctionParams22FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams22, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams22$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams22' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody521Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody521Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody521Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody521Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody521Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody521Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody521Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody521Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody521Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody521Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody521Type$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams21$inboundSchema: z.ZodType<
  CreateEvalFunctionParams21,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody521Type$inboundSchema,
});

/** @internal */
export type CreateEvalFunctionParams21$Outbound = {
  type: string;
};

/** @internal */
export const CreateEvalFunctionParams21$outboundSchema: z.ZodType<
  CreateEvalFunctionParams21$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams21
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody521Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams21$ {
  /** @deprecated use `CreateEvalFunctionParams21$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams21$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams21$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams21$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams21$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams21$Outbound;
}

export function createEvalFunctionParams21ToJSON(
  createEvalFunctionParams21: CreateEvalFunctionParams21,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams21$outboundSchema.parse(createEvalFunctionParams21),
  );
}

export function createEvalFunctionParams21FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams21, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams21$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams21' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody520Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody520Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody520Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody520Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody520Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody520Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody520Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody520Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody520Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody520Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody520Type$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams20$inboundSchema: z.ZodType<
  CreateEvalFunctionParams20,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody520Type$inboundSchema,
});

/** @internal */
export type CreateEvalFunctionParams20$Outbound = {
  type: string;
};

/** @internal */
export const CreateEvalFunctionParams20$outboundSchema: z.ZodType<
  CreateEvalFunctionParams20$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams20
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody520Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams20$ {
  /** @deprecated use `CreateEvalFunctionParams20$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams20$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams20$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams20$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams20$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams20$Outbound;
}

export function createEvalFunctionParams20ToJSON(
  createEvalFunctionParams20: CreateEvalFunctionParams20,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams20$outboundSchema.parse(createEvalFunctionParams20),
  );
}

export function createEvalFunctionParams20FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams20, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams20$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams20' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody519Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody519Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody519Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody519Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody519Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody519Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody519Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody519Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody519Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody519Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody519Type$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams19$inboundSchema: z.ZodType<
  CreateEvalFunctionParams19,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody519Type$inboundSchema,
});

/** @internal */
export type CreateEvalFunctionParams19$Outbound = {
  type: string;
};

/** @internal */
export const CreateEvalFunctionParams19$outboundSchema: z.ZodType<
  CreateEvalFunctionParams19$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams19
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody519Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams19$ {
  /** @deprecated use `CreateEvalFunctionParams19$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams19$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams19$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams19$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams19$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams19$Outbound;
}

export function createEvalFunctionParams19ToJSON(
  createEvalFunctionParams19: CreateEvalFunctionParams19,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams19$outboundSchema.parse(createEvalFunctionParams19),
  );
}

export function createEvalFunctionParams19FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams19, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams19$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams19' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody518Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody518Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody518Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody518Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody518Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody518Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody518Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody518Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody518Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody518Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody518Type$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams18$inboundSchema: z.ZodType<
  CreateEvalFunctionParams18,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody518Type$inboundSchema,
});

/** @internal */
export type CreateEvalFunctionParams18$Outbound = {
  type: string;
};

/** @internal */
export const CreateEvalFunctionParams18$outboundSchema: z.ZodType<
  CreateEvalFunctionParams18$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams18
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody518Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams18$ {
  /** @deprecated use `CreateEvalFunctionParams18$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams18$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams18$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams18$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams18$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams18$Outbound;
}

export function createEvalFunctionParams18ToJSON(
  createEvalFunctionParams18: CreateEvalFunctionParams18,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams18$outboundSchema.parse(createEvalFunctionParams18),
  );
}

export function createEvalFunctionParams18FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams18, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams18$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams18' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody517Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody517Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody517Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody517Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody517Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody517Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody517Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody517Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody517Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody517Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody517Type$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams17$inboundSchema: z.ZodType<
  CreateEvalFunctionParams17,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody517Type$inboundSchema,
});

/** @internal */
export type CreateEvalFunctionParams17$Outbound = {
  type: string;
};

/** @internal */
export const CreateEvalFunctionParams17$outboundSchema: z.ZodType<
  CreateEvalFunctionParams17$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams17
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody517Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams17$ {
  /** @deprecated use `CreateEvalFunctionParams17$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams17$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams17$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams17$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams17$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams17$Outbound;
}

export function createEvalFunctionParams17ToJSON(
  createEvalFunctionParams17: CreateEvalFunctionParams17,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams17$outboundSchema.parse(createEvalFunctionParams17),
  );
}

export function createEvalFunctionParams17FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams17, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams17$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams17' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody516Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody516Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody516Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody516Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody516Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody516Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody516Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody516Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody516Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody516Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody516Type$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams16$inboundSchema: z.ZodType<
  CreateEvalFunctionParams16,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody516Type$inboundSchema,
});

/** @internal */
export type CreateEvalFunctionParams16$Outbound = {
  type: string;
};

/** @internal */
export const CreateEvalFunctionParams16$outboundSchema: z.ZodType<
  CreateEvalFunctionParams16$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams16
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody516Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams16$ {
  /** @deprecated use `CreateEvalFunctionParams16$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams16$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams16$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams16$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams16$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams16$Outbound;
}

export function createEvalFunctionParams16ToJSON(
  createEvalFunctionParams16: CreateEvalFunctionParams16,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams16$outboundSchema.parse(createEvalFunctionParams16),
  );
}

export function createEvalFunctionParams16FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams16, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams16$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams16' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody515Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody515Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody515Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody515Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody515Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody515Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody515Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody515Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody515Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody515Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody515Type$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams15$inboundSchema: z.ZodType<
  CreateEvalFunctionParams15,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody515Type$inboundSchema,
  pattern: z.string(),
});

/** @internal */
export type CreateEvalFunctionParams15$Outbound = {
  type: string;
  pattern: string;
};

/** @internal */
export const CreateEvalFunctionParams15$outboundSchema: z.ZodType<
  CreateEvalFunctionParams15$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams15
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody515Type$outboundSchema,
  pattern: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams15$ {
  /** @deprecated use `CreateEvalFunctionParams15$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams15$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams15$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams15$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams15$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams15$Outbound;
}

export function createEvalFunctionParams15ToJSON(
  createEvalFunctionParams15: CreateEvalFunctionParams15,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams15$outboundSchema.parse(createEvalFunctionParams15),
  );
}

export function createEvalFunctionParams15FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams15, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams15$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams15' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody514Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody514Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody514Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody514Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody514Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody514Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody514Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody514Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody514Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody514Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody514Type$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams14$inboundSchema: z.ZodType<
  CreateEvalFunctionParams14,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody514Type$inboundSchema,
});

/** @internal */
export type CreateEvalFunctionParams14$Outbound = {
  type: string;
};

/** @internal */
export const CreateEvalFunctionParams14$outboundSchema: z.ZodType<
  CreateEvalFunctionParams14$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams14
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody514Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams14$ {
  /** @deprecated use `CreateEvalFunctionParams14$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams14$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams14$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams14$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams14$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams14$Outbound;
}

export function createEvalFunctionParams14ToJSON(
  createEvalFunctionParams14: CreateEvalFunctionParams14,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams14$outboundSchema.parse(createEvalFunctionParams14),
  );
}

export function createEvalFunctionParams14FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams14, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams14$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams14' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody513Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody513Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody513Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody513Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody513Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody513Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody513Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody513Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody513Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody513Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody513Type$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams13$inboundSchema: z.ZodType<
  CreateEvalFunctionParams13,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody513Type$inboundSchema,
  value: z.number(),
});

/** @internal */
export type CreateEvalFunctionParams13$Outbound = {
  type: string;
  value: number;
};

/** @internal */
export const CreateEvalFunctionParams13$outboundSchema: z.ZodType<
  CreateEvalFunctionParams13$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams13
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody513Type$outboundSchema,
  value: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams13$ {
  /** @deprecated use `CreateEvalFunctionParams13$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams13$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams13$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams13$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams13$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams13$Outbound;
}

export function createEvalFunctionParams13ToJSON(
  createEvalFunctionParams13: CreateEvalFunctionParams13,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams13$outboundSchema.parse(createEvalFunctionParams13),
  );
}

export function createEvalFunctionParams13FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams13, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams13$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams13' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody512Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody512Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody512Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody512Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody512Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody512Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody512Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody512Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody512Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody512Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody512Type$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams12$inboundSchema: z.ZodType<
  CreateEvalFunctionParams12,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody512Type$inboundSchema,
  min: z.number(),
  max: z.number(),
});

/** @internal */
export type CreateEvalFunctionParams12$Outbound = {
  type: string;
  min: number;
  max: number;
};

/** @internal */
export const CreateEvalFunctionParams12$outboundSchema: z.ZodType<
  CreateEvalFunctionParams12$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams12
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody512Type$outboundSchema,
  min: z.number(),
  max: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams12$ {
  /** @deprecated use `CreateEvalFunctionParams12$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams12$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams12$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams12$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams12$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams12$Outbound;
}

export function createEvalFunctionParams12ToJSON(
  createEvalFunctionParams12: CreateEvalFunctionParams12,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams12$outboundSchema.parse(createEvalFunctionParams12),
  );
}

export function createEvalFunctionParams12FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams12, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams12$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams12' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody511Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody511Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody511Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody511Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody511Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody511Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody511Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody511Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody511Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody511Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody511Type$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams11$inboundSchema: z.ZodType<
  CreateEvalFunctionParams11,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody511Type$inboundSchema,
  value: z.number(),
});

/** @internal */
export type CreateEvalFunctionParams11$Outbound = {
  type: string;
  value: number;
};

/** @internal */
export const CreateEvalFunctionParams11$outboundSchema: z.ZodType<
  CreateEvalFunctionParams11$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams11
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody511Type$outboundSchema,
  value: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams11$ {
  /** @deprecated use `CreateEvalFunctionParams11$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams11$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams11$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams11$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams11$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams11$Outbound;
}

export function createEvalFunctionParams11ToJSON(
  createEvalFunctionParams11: CreateEvalFunctionParams11,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams11$outboundSchema.parse(createEvalFunctionParams11),
  );
}

export function createEvalFunctionParams11FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams11, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams11$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams11' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody510Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody510Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody510Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody510Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody510Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody510Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody510Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody510Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody510Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody510Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody510Type$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams10$inboundSchema: z.ZodType<
  CreateEvalFunctionParams10,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody510Type$inboundSchema,
});

/** @internal */
export type CreateEvalFunctionParams10$Outbound = {
  type: string;
};

/** @internal */
export const CreateEvalFunctionParams10$outboundSchema: z.ZodType<
  CreateEvalFunctionParams10$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams10
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody510Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams10$ {
  /** @deprecated use `CreateEvalFunctionParams10$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams10$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams10$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams10$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams10$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams10$Outbound;
}

export function createEvalFunctionParams10ToJSON(
  createEvalFunctionParams10: CreateEvalFunctionParams10,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams10$outboundSchema.parse(createEvalFunctionParams10),
  );
}

export function createEvalFunctionParams10FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams10, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams10$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams10' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody59Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody59Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody59Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody59Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody59Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody59Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody59Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody59Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody59Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody59Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody59Type$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams9$inboundSchema: z.ZodType<
  CreateEvalFunctionParams9,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody59Type$inboundSchema,
  value: z.string(),
});

/** @internal */
export type CreateEvalFunctionParams9$Outbound = {
  type: string;
  value: string;
};

/** @internal */
export const CreateEvalFunctionParams9$outboundSchema: z.ZodType<
  CreateEvalFunctionParams9$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams9
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody59Type$outboundSchema,
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams9$ {
  /** @deprecated use `CreateEvalFunctionParams9$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams9$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams9$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams9$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams9$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams9$Outbound;
}

export function createEvalFunctionParams9ToJSON(
  createEvalFunctionParams9: CreateEvalFunctionParams9,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams9$outboundSchema.parse(createEvalFunctionParams9),
  );
}

export function createEvalFunctionParams9FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams9, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams9$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams9' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody5Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody5Type
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody5Type,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody5Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody5Type
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody5Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody5Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody5Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody5Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody5Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody5Type$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams8$inboundSchema: z.ZodType<
  CreateEvalFunctionParams8,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody5Type$inboundSchema,
  value: z.string(),
});

/** @internal */
export type CreateEvalFunctionParams8$Outbound = {
  type: string;
  value: string;
};

/** @internal */
export const CreateEvalFunctionParams8$outboundSchema: z.ZodType<
  CreateEvalFunctionParams8$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams8
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBody5Type$outboundSchema,
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams8$ {
  /** @deprecated use `CreateEvalFunctionParams8$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams8$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams8$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams8$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams8$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams8$Outbound;
}

export function createEvalFunctionParams8ToJSON(
  createEvalFunctionParams8: CreateEvalFunctionParams8,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams8$outboundSchema.parse(createEvalFunctionParams8),
  );
}

export function createEvalFunctionParams8FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams8, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams8$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams8' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType
  > =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams7$inboundSchema: z.ZodType<
  CreateEvalFunctionParams7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema,
});

/** @internal */
export type CreateEvalFunctionParams7$Outbound = {
  type: string;
};

/** @internal */
export const CreateEvalFunctionParams7$outboundSchema: z.ZodType<
  CreateEvalFunctionParams7$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams7
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams7$ {
  /** @deprecated use `CreateEvalFunctionParams7$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams7$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams7$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams7$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams7$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams7$Outbound;
}

export function createEvalFunctionParams7ToJSON(
  createEvalFunctionParams7: CreateEvalFunctionParams7,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams7$outboundSchema.parse(createEvalFunctionParams7),
  );
}

export function createEvalFunctionParams7FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams7, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams7$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams7' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONType
  > = z.nativeEnum(CreateEvalFunctionParamsEvalsResponse200ApplicationJSONType);

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalFunctionParamsEvalsResponse200ApplicationJSONType
  > = CreateEvalFunctionParamsEvalsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200ApplicationJSONType$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams6$inboundSchema: z.ZodType<
  CreateEvalFunctionParams6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONType$inboundSchema,
});

/** @internal */
export type CreateEvalFunctionParams6$Outbound = {
  type: string;
};

/** @internal */
export const CreateEvalFunctionParams6$outboundSchema: z.ZodType<
  CreateEvalFunctionParams6$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams6
> = z.object({
  type:
    CreateEvalFunctionParamsEvalsResponse200ApplicationJSONType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams6$ {
  /** @deprecated use `CreateEvalFunctionParams6$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams6$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams6$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams6$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams6$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams6$Outbound;
}

export function createEvalFunctionParams6ToJSON(
  createEvalFunctionParams6: CreateEvalFunctionParams6,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams6$outboundSchema.parse(createEvalFunctionParams6),
  );
}

export function createEvalFunctionParams6FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams6' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof CreateEvalFunctionParamsEvalsResponse200Type> = z
    .nativeEnum(CreateEvalFunctionParamsEvalsResponse200Type);

/** @internal */
export const CreateEvalFunctionParamsEvalsResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof CreateEvalFunctionParamsEvalsResponse200Type> =
    CreateEvalFunctionParamsEvalsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponse200Type$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponse200Type$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponse200Type$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams5$inboundSchema: z.ZodType<
  CreateEvalFunctionParams5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CreateEvalFunctionParamsEvalsResponse200Type$inboundSchema,
});

/** @internal */
export type CreateEvalFunctionParams5$Outbound = {
  type: string;
};

/** @internal */
export const CreateEvalFunctionParams5$outboundSchema: z.ZodType<
  CreateEvalFunctionParams5$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams5
> = z.object({
  type: CreateEvalFunctionParamsEvalsResponse200Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams5$ {
  /** @deprecated use `CreateEvalFunctionParams5$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams5$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams5$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams5$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams5$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams5$Outbound;
}

export function createEvalFunctionParams5ToJSON(
  createEvalFunctionParams5: CreateEvalFunctionParams5,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams5$outboundSchema.parse(createEvalFunctionParams5),
  );
}

export function createEvalFunctionParams5FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams5' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof CreateEvalFunctionParamsEvalsResponseType> = z
    .nativeEnum(CreateEvalFunctionParamsEvalsResponseType);

/** @internal */
export const CreateEvalFunctionParamsEvalsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof CreateEvalFunctionParamsEvalsResponseType> =
    CreateEvalFunctionParamsEvalsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsResponseType$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalFunctionParamsEvalsResponseType$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsResponseType$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams4$inboundSchema: z.ZodType<
  CreateEvalFunctionParams4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CreateEvalFunctionParamsEvalsResponseType$inboundSchema,
  keywords: z.array(z.string()),
});

/** @internal */
export type CreateEvalFunctionParams4$Outbound = {
  type: string;
  keywords: Array<string>;
};

/** @internal */
export const CreateEvalFunctionParams4$outboundSchema: z.ZodType<
  CreateEvalFunctionParams4$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams4
> = z.object({
  type: CreateEvalFunctionParamsEvalsResponseType$outboundSchema,
  keywords: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams4$ {
  /** @deprecated use `CreateEvalFunctionParams4$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams4$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams4$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams4$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams4$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams4$Outbound;
}

export function createEvalFunctionParams4ToJSON(
  createEvalFunctionParams4: CreateEvalFunctionParams4,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams4$outboundSchema.parse(createEvalFunctionParams4),
  );
}

export function createEvalFunctionParams4FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams4' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsEvalsType$inboundSchema: z.ZodNativeEnum<
  typeof CreateEvalFunctionParamsEvalsType
> = z.nativeEnum(CreateEvalFunctionParamsEvalsType);

/** @internal */
export const CreateEvalFunctionParamsEvalsType$outboundSchema: z.ZodNativeEnum<
  typeof CreateEvalFunctionParamsEvalsType
> = CreateEvalFunctionParamsEvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsEvalsType$ {
  /** @deprecated use `CreateEvalFunctionParamsEvalsType$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParamsEvalsType$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsEvalsType$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalFunctionParamsEvalsType$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams3$inboundSchema: z.ZodType<
  CreateEvalFunctionParams3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CreateEvalFunctionParamsEvalsType$inboundSchema,
  keywords: z.array(z.string()),
});

/** @internal */
export type CreateEvalFunctionParams3$Outbound = {
  type: string;
  keywords: Array<string>;
};

/** @internal */
export const CreateEvalFunctionParams3$outboundSchema: z.ZodType<
  CreateEvalFunctionParams3$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams3
> = z.object({
  type: CreateEvalFunctionParamsEvalsType$outboundSchema,
  keywords: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams3$ {
  /** @deprecated use `CreateEvalFunctionParams3$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams3$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams3$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams3$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams3$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams3$Outbound;
}

export function createEvalFunctionParams3ToJSON(
  createEvalFunctionParams3: CreateEvalFunctionParams3,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams3$outboundSchema.parse(createEvalFunctionParams3),
  );
}

export function createEvalFunctionParams3FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams3' from JSON`,
  );
}

/** @internal */
export const CreateEvalFunctionParamsType$inboundSchema: z.ZodNativeEnum<
  typeof CreateEvalFunctionParamsType
> = z.nativeEnum(CreateEvalFunctionParamsType);

/** @internal */
export const CreateEvalFunctionParamsType$outboundSchema: z.ZodNativeEnum<
  typeof CreateEvalFunctionParamsType
> = CreateEvalFunctionParamsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParamsType$ {
  /** @deprecated use `CreateEvalFunctionParamsType$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParamsType$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParamsType$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParamsType$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams2$inboundSchema: z.ZodType<
  CreateEvalFunctionParams2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CreateEvalFunctionParamsType$inboundSchema,
  keywords: z.array(z.string()),
});

/** @internal */
export type CreateEvalFunctionParams2$Outbound = {
  type: string;
  keywords: Array<string>;
};

/** @internal */
export const CreateEvalFunctionParams2$outboundSchema: z.ZodType<
  CreateEvalFunctionParams2$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams2
> = z.object({
  type: CreateEvalFunctionParamsType$outboundSchema,
  keywords: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams2$ {
  /** @deprecated use `CreateEvalFunctionParams2$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams2$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams2$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams2$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams2$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams2$Outbound;
}

export function createEvalFunctionParams2ToJSON(
  createEvalFunctionParams2: CreateEvalFunctionParams2,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams2$outboundSchema.parse(createEvalFunctionParams2),
  );
}

export function createEvalFunctionParams2FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams2' from JSON`,
  );
}

/** @internal */
export const FunctionParamsType$inboundSchema: z.ZodNativeEnum<
  typeof FunctionParamsType
> = z.nativeEnum(FunctionParamsType);

/** @internal */
export const FunctionParamsType$outboundSchema: z.ZodNativeEnum<
  typeof FunctionParamsType
> = FunctionParamsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FunctionParamsType$ {
  /** @deprecated use `FunctionParamsType$inboundSchema` instead. */
  export const inboundSchema = FunctionParamsType$inboundSchema;
  /** @deprecated use `FunctionParamsType$outboundSchema` instead. */
  export const outboundSchema = FunctionParamsType$outboundSchema;
}

/** @internal */
export const CreateEvalFunctionParams1$inboundSchema: z.ZodType<
  CreateEvalFunctionParams1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: FunctionParamsType$inboundSchema,
  value: z.string(),
});

/** @internal */
export type CreateEvalFunctionParams1$Outbound = {
  type: string;
  value: string;
};

/** @internal */
export const CreateEvalFunctionParams1$outboundSchema: z.ZodType<
  CreateEvalFunctionParams1$Outbound,
  z.ZodTypeDef,
  CreateEvalFunctionParams1
> = z.object({
  type: FunctionParamsType$outboundSchema,
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalFunctionParams1$ {
  /** @deprecated use `CreateEvalFunctionParams1$inboundSchema` instead. */
  export const inboundSchema = CreateEvalFunctionParams1$inboundSchema;
  /** @deprecated use `CreateEvalFunctionParams1$outboundSchema` instead. */
  export const outboundSchema = CreateEvalFunctionParams1$outboundSchema;
  /** @deprecated use `CreateEvalFunctionParams1$Outbound` instead. */
  export type Outbound = CreateEvalFunctionParams1$Outbound;
}

export function createEvalFunctionParams1ToJSON(
  createEvalFunctionParams1: CreateEvalFunctionParams1,
): string {
  return JSON.stringify(
    CreateEvalFunctionParams1$outboundSchema.parse(createEvalFunctionParams1),
  );
}

export function createEvalFunctionParams1FromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalFunctionParams1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalFunctionParams1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalFunctionParams1' from JSON`,
  );
}

/** @internal */
export const CreateEvalResponseBodyFunctionParams$inboundSchema: z.ZodType<
  CreateEvalResponseBodyFunctionParams,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => CreateEvalFunctionParams12$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams1$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams2$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams3$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams4$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams8$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams9$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams11$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams13$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams15$inboundSchema),
  z.lazy(() => TwentyFive$inboundSchema),
  z.lazy(() => TwentySix$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams5$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams6$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams7$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams10$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams14$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams16$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams17$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams18$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams19$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams20$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams21$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams22$inboundSchema),
  z.lazy(() => CreateEvalFunctionParams23$inboundSchema),
  z.lazy(() => TwentyFour$inboundSchema),
  z.lazy(() => TwentySeven$inboundSchema),
  z.lazy(() => TwentyEight$inboundSchema),
  z.lazy(() => TwentyNine$inboundSchema),
  z.lazy(() => Thirty$inboundSchema),
  z.lazy(() => ThirtyOne$inboundSchema),
  z.lazy(() => ThirtyTwo$inboundSchema),
  z.lazy(() => ThirtyThree$inboundSchema),
  z.lazy(() => ThirtyFour$inboundSchema),
  z.lazy(() => ThirtyFive$inboundSchema),
]);

/** @internal */
export type CreateEvalResponseBodyFunctionParams$Outbound =
  | CreateEvalFunctionParams12$Outbound
  | CreateEvalFunctionParams1$Outbound
  | CreateEvalFunctionParams2$Outbound
  | CreateEvalFunctionParams3$Outbound
  | CreateEvalFunctionParams4$Outbound
  | CreateEvalFunctionParams8$Outbound
  | CreateEvalFunctionParams9$Outbound
  | CreateEvalFunctionParams11$Outbound
  | CreateEvalFunctionParams13$Outbound
  | CreateEvalFunctionParams15$Outbound
  | TwentyFive$Outbound
  | TwentySix$Outbound
  | CreateEvalFunctionParams5$Outbound
  | CreateEvalFunctionParams6$Outbound
  | CreateEvalFunctionParams7$Outbound
  | CreateEvalFunctionParams10$Outbound
  | CreateEvalFunctionParams14$Outbound
  | CreateEvalFunctionParams16$Outbound
  | CreateEvalFunctionParams17$Outbound
  | CreateEvalFunctionParams18$Outbound
  | CreateEvalFunctionParams19$Outbound
  | CreateEvalFunctionParams20$Outbound
  | CreateEvalFunctionParams21$Outbound
  | CreateEvalFunctionParams22$Outbound
  | CreateEvalFunctionParams23$Outbound
  | TwentyFour$Outbound
  | TwentySeven$Outbound
  | TwentyEight$Outbound
  | TwentyNine$Outbound
  | Thirty$Outbound
  | ThirtyOne$Outbound
  | ThirtyTwo$Outbound
  | ThirtyThree$Outbound
  | ThirtyFour$Outbound
  | ThirtyFive$Outbound;

/** @internal */
export const CreateEvalResponseBodyFunctionParams$outboundSchema: z.ZodType<
  CreateEvalResponseBodyFunctionParams$Outbound,
  z.ZodTypeDef,
  CreateEvalResponseBodyFunctionParams
> = z.union([
  z.lazy(() => CreateEvalFunctionParams12$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams1$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams2$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams3$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams4$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams8$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams9$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams11$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams13$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams15$outboundSchema),
  z.lazy(() => TwentyFive$outboundSchema),
  z.lazy(() => TwentySix$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams5$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams6$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams7$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams10$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams14$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams16$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams17$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams18$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams19$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams20$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams21$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams22$outboundSchema),
  z.lazy(() => CreateEvalFunctionParams23$outboundSchema),
  z.lazy(() => TwentyFour$outboundSchema),
  z.lazy(() => TwentySeven$outboundSchema),
  z.lazy(() => TwentyEight$outboundSchema),
  z.lazy(() => TwentyNine$outboundSchema),
  z.lazy(() => Thirty$outboundSchema),
  z.lazy(() => ThirtyOne$outboundSchema),
  z.lazy(() => ThirtyTwo$outboundSchema),
  z.lazy(() => ThirtyThree$outboundSchema),
  z.lazy(() => ThirtyFour$outboundSchema),
  z.lazy(() => ThirtyFive$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalResponseBodyFunctionParams$ {
  /** @deprecated use `CreateEvalResponseBodyFunctionParams$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalResponseBodyFunctionParams$inboundSchema;
  /** @deprecated use `CreateEvalResponseBodyFunctionParams$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalResponseBodyFunctionParams$outboundSchema;
  /** @deprecated use `CreateEvalResponseBodyFunctionParams$Outbound` instead. */
  export type Outbound = CreateEvalResponseBodyFunctionParams$Outbound;
}

export function createEvalResponseBodyFunctionParamsToJSON(
  createEvalResponseBodyFunctionParams: CreateEvalResponseBodyFunctionParams,
): string {
  return JSON.stringify(
    CreateEvalResponseBodyFunctionParams$outboundSchema.parse(
      createEvalResponseBodyFunctionParams,
    ),
  );
}

export function createEvalResponseBodyFunctionParamsFromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalResponseBodyFunctionParams, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalResponseBodyFunctionParams$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalResponseBodyFunctionParams' from JSON`,
  );
}

/** @internal */
export const CreateEvalResponseBodyFunction$inboundSchema: z.ZodType<
  CreateEvalResponseBodyFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  description: z.string(),
  created: z.string().default("2025-10-27T09:34:56.432Z"),
  updated: z.string().default("2025-10-27T09:34:56.432Z"),
  guardrail_config: z.union([
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number$inboundSchema
    ),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean$inboundSchema
    ),
  ]).optional(),
  type: CreateEvalResponseBodyEvalsResponse200Type$inboundSchema,
  function_params: z.union([
    z.lazy(() => CreateEvalFunctionParams12$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams1$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams2$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams3$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams4$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams8$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams9$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams11$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams13$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams15$inboundSchema),
    z.lazy(() => TwentyFive$inboundSchema),
    z.lazy(() => TwentySix$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams5$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams6$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams7$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams10$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams14$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams16$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams17$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams18$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams19$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams20$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams21$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams22$inboundSchema),
    z.lazy(() => CreateEvalFunctionParams23$inboundSchema),
    z.lazy(() => TwentyFour$inboundSchema),
    z.lazy(() => TwentySeven$inboundSchema),
    z.lazy(() => TwentyEight$inboundSchema),
    z.lazy(() => TwentyNine$inboundSchema),
    z.lazy(() => Thirty$inboundSchema),
    z.lazy(() => ThirtyOne$inboundSchema),
    z.lazy(() => ThirtyTwo$inboundSchema),
    z.lazy(() => ThirtyThree$inboundSchema),
    z.lazy(() => ThirtyFour$inboundSchema),
    z.lazy(() => ThirtyFive$inboundSchema),
  ]),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "guardrail_config": "guardrailConfig",
    "function_params": "functionParams",
  });
});

/** @internal */
export type CreateEvalResponseBodyFunction$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number$Outbound
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean$Outbound
    | undefined;
  type: string;
  function_params:
    | CreateEvalFunctionParams12$Outbound
    | CreateEvalFunctionParams1$Outbound
    | CreateEvalFunctionParams2$Outbound
    | CreateEvalFunctionParams3$Outbound
    | CreateEvalFunctionParams4$Outbound
    | CreateEvalFunctionParams8$Outbound
    | CreateEvalFunctionParams9$Outbound
    | CreateEvalFunctionParams11$Outbound
    | CreateEvalFunctionParams13$Outbound
    | CreateEvalFunctionParams15$Outbound
    | TwentyFive$Outbound
    | TwentySix$Outbound
    | CreateEvalFunctionParams5$Outbound
    | CreateEvalFunctionParams6$Outbound
    | CreateEvalFunctionParams7$Outbound
    | CreateEvalFunctionParams10$Outbound
    | CreateEvalFunctionParams14$Outbound
    | CreateEvalFunctionParams16$Outbound
    | CreateEvalFunctionParams17$Outbound
    | CreateEvalFunctionParams18$Outbound
    | CreateEvalFunctionParams19$Outbound
    | CreateEvalFunctionParams20$Outbound
    | CreateEvalFunctionParams21$Outbound
    | CreateEvalFunctionParams22$Outbound
    | CreateEvalFunctionParams23$Outbound
    | TwentyFour$Outbound
    | TwentySeven$Outbound
    | TwentyEight$Outbound
    | TwentyNine$Outbound
    | Thirty$Outbound
    | ThirtyOne$Outbound
    | ThirtyTwo$Outbound
    | ThirtyThree$Outbound
    | ThirtyFour$Outbound
    | ThirtyFive$Outbound;
  key: string;
};

/** @internal */
export const CreateEvalResponseBodyFunction$outboundSchema: z.ZodType<
  CreateEvalResponseBodyFunction$Outbound,
  z.ZodTypeDef,
  CreateEvalResponseBodyFunction
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-10-27T09:34:56.432Z"),
  updated: z.string().default("2025-10-27T09:34:56.432Z"),
  guardrailConfig: z.union([
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Number$outboundSchema
    ),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody5Boolean$outboundSchema
    ),
  ]).optional(),
  type: CreateEvalResponseBodyEvalsResponse200Type$outboundSchema,
  functionParams: z.union([
    z.lazy(() => CreateEvalFunctionParams12$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams1$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams2$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams3$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams4$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams8$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams9$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams11$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams13$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams15$outboundSchema),
    z.lazy(() => TwentyFive$outboundSchema),
    z.lazy(() => TwentySix$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams5$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams6$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams7$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams10$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams14$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams16$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams17$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams18$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams19$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams20$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams21$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams22$outboundSchema),
    z.lazy(() => CreateEvalFunctionParams23$outboundSchema),
    z.lazy(() => TwentyFour$outboundSchema),
    z.lazy(() => TwentySeven$outboundSchema),
    z.lazy(() => TwentyEight$outboundSchema),
    z.lazy(() => TwentyNine$outboundSchema),
    z.lazy(() => Thirty$outboundSchema),
    z.lazy(() => ThirtyOne$outboundSchema),
    z.lazy(() => ThirtyTwo$outboundSchema),
    z.lazy(() => ThirtyThree$outboundSchema),
    z.lazy(() => ThirtyFour$outboundSchema),
    z.lazy(() => ThirtyFive$outboundSchema),
  ]),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
    functionParams: "function_params",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalResponseBodyFunction$ {
  /** @deprecated use `CreateEvalResponseBodyFunction$inboundSchema` instead. */
  export const inboundSchema = CreateEvalResponseBodyFunction$inboundSchema;
  /** @deprecated use `CreateEvalResponseBodyFunction$outboundSchema` instead. */
  export const outboundSchema = CreateEvalResponseBodyFunction$outboundSchema;
  /** @deprecated use `CreateEvalResponseBodyFunction$Outbound` instead. */
  export type Outbound = CreateEvalResponseBodyFunction$Outbound;
}

export function createEvalResponseBodyFunctionToJSON(
  createEvalResponseBodyFunction: CreateEvalResponseBodyFunction,
): string {
  return JSON.stringify(
    CreateEvalResponseBodyFunction$outboundSchema.parse(
      createEvalResponseBodyFunction,
    ),
  );
}

export function createEvalResponseBodyFunctionFromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalResponseBodyFunction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalResponseBodyFunction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalResponseBodyFunction' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody42Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody42Type
  > = z.nativeEnum(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody42Type,
  );

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody42Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody42Type
  > =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody42Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody42Type$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody42Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody42Type$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody42Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody42Type$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator
  > = z.nativeEnum(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator,
  );

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator
  > =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$inboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody42Type$inboundSchema,
    value: z.number(),
    operator:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$inboundSchema,
  });

/** @internal */
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$Outbound =
  {
    enabled: boolean;
    type: string;
    value: number;
    operator: string;
  };

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$outboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$Outbound,
    z.ZodTypeDef,
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody42Type$outboundSchema,
    value: z.number(),
    operator:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$outboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$Outbound` instead. */
  export type Outbound =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$Outbound;
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumberToJSON(
  createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber:
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber,
): string {
  return JSON.stringify(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$outboundSchema
      .parse(
        createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber,
      ),
  );
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody4Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody4Type
  > = z.nativeEnum(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody4Type,
  );

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody4Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody4Type
  > =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody4Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody4Type$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody4Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody4Type$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody4Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody4Type$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$inboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody4Type$inboundSchema,
    value: z.boolean(),
  });

/** @internal */
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$Outbound =
  {
    enabled: boolean;
    type: string;
    value: boolean;
  };

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$outboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$Outbound,
    z.ZodTypeDef,
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody4Type$outboundSchema,
    value: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$outboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$Outbound` instead. */
  export type Outbound =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$Outbound;
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBooleanToJSON(
  createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean:
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean,
): string {
  return JSON.stringify(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$outboundSchema
      .parse(
        createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean,
      ),
  );
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBooleanFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean' from JSON`,
  );
}

/** @internal */
export const CreateEvalResponseBodyEvalsResponseGuardrailConfig$inboundSchema:
  z.ZodType<
    CreateEvalResponseBodyEvalsResponseGuardrailConfig,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$inboundSchema
    ),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$inboundSchema
    ),
  ]);

/** @internal */
export type CreateEvalResponseBodyEvalsResponseGuardrailConfig$Outbound =
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$Outbound
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$Outbound;

/** @internal */
export const CreateEvalResponseBodyEvalsResponseGuardrailConfig$outboundSchema:
  z.ZodType<
    CreateEvalResponseBodyEvalsResponseGuardrailConfig$Outbound,
    z.ZodTypeDef,
    CreateEvalResponseBodyEvalsResponseGuardrailConfig
  > = z.union([
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$outboundSchema
    ),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalResponseBodyEvalsResponseGuardrailConfig$ {
  /** @deprecated use `CreateEvalResponseBodyEvalsResponseGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalResponseBodyEvalsResponseGuardrailConfig$inboundSchema;
  /** @deprecated use `CreateEvalResponseBodyEvalsResponseGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalResponseBodyEvalsResponseGuardrailConfig$outboundSchema;
  /** @deprecated use `CreateEvalResponseBodyEvalsResponseGuardrailConfig$Outbound` instead. */
  export type Outbound =
    CreateEvalResponseBodyEvalsResponseGuardrailConfig$Outbound;
}

export function createEvalResponseBodyEvalsResponseGuardrailConfigToJSON(
  createEvalResponseBodyEvalsResponseGuardrailConfig:
    CreateEvalResponseBodyEvalsResponseGuardrailConfig,
): string {
  return JSON.stringify(
    CreateEvalResponseBodyEvalsResponseGuardrailConfig$outboundSchema.parse(
      createEvalResponseBodyEvalsResponseGuardrailConfig,
    ),
  );
}

export function createEvalResponseBodyEvalsResponseGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalResponseBodyEvalsResponseGuardrailConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalResponseBodyEvalsResponseGuardrailConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateEvalResponseBodyEvalsResponseGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const CreateEvalResponseBodyEvalsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof CreateEvalResponseBodyEvalsResponseType> = z
    .nativeEnum(CreateEvalResponseBodyEvalsResponseType);

/** @internal */
export const CreateEvalResponseBodyEvalsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof CreateEvalResponseBodyEvalsResponseType> =
    CreateEvalResponseBodyEvalsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalResponseBodyEvalsResponseType$ {
  /** @deprecated use `CreateEvalResponseBodyEvalsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalResponseBodyEvalsResponseType$inboundSchema;
  /** @deprecated use `CreateEvalResponseBodyEvalsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalResponseBodyEvalsResponseType$outboundSchema;
}

/** @internal */
export const ResponseBodyPython$inboundSchema: z.ZodType<
  ResponseBodyPython,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  description: z.string(),
  created: z.string().default("2025-10-27T09:34:56.432Z"),
  updated: z.string().default("2025-10-27T09:34:56.432Z"),
  guardrail_config: z.union([
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$inboundSchema
    ),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$inboundSchema
    ),
  ]).optional(),
  code: z.string(),
  type: CreateEvalResponseBodyEvalsResponseType$inboundSchema,
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "guardrail_config": "guardrailConfig",
  });
});

/** @internal */
export type ResponseBodyPython$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$Outbound
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$Outbound
    | undefined;
  code: string;
  type: string;
  key: string;
};

/** @internal */
export const ResponseBodyPython$outboundSchema: z.ZodType<
  ResponseBodyPython$Outbound,
  z.ZodTypeDef,
  ResponseBodyPython
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-10-27T09:34:56.432Z"),
  updated: z.string().default("2025-10-27T09:34:56.432Z"),
  guardrailConfig: z.union([
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$outboundSchema
    ),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$outboundSchema
    ),
  ]).optional(),
  code: z.string(),
  type: CreateEvalResponseBodyEvalsResponseType$outboundSchema,
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseBodyPython$ {
  /** @deprecated use `ResponseBodyPython$inboundSchema` instead. */
  export const inboundSchema = ResponseBodyPython$inboundSchema;
  /** @deprecated use `ResponseBodyPython$outboundSchema` instead. */
  export const outboundSchema = ResponseBodyPython$outboundSchema;
  /** @deprecated use `ResponseBodyPython$Outbound` instead. */
  export type Outbound = ResponseBodyPython$Outbound;
}

export function responseBodyPythonToJSON(
  responseBodyPython: ResponseBodyPython,
): string {
  return JSON.stringify(
    ResponseBodyPython$outboundSchema.parse(responseBodyPython),
  );
}

export function responseBodyPythonFromJSON(
  jsonString: string,
): SafeParseResult<ResponseBodyPython, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponseBodyPython$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponseBodyPython' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody32Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody32Type
  > = z.nativeEnum(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody32Type,
  );

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody32Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody32Type
  > =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody32Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody32Type$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody32Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody32Type$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody32Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody32Type$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONOperator$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONOperator
  > = z.nativeEnum(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONOperator,
  );

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONOperator$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONOperator
  > =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONOperator$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONOperator$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONOperator$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONOperator$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONOperator$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber$inboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody32Type$inboundSchema,
    value: z.number(),
    operator:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONOperator$inboundSchema,
  });

/** @internal */
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber$Outbound =
  {
    enabled: boolean;
    type: string;
    value: number;
    operator: string;
  };

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber$outboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber$Outbound,
    z.ZodTypeDef,
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody32Type$outboundSchema,
    value: z.number(),
    operator:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONOperator$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber$outboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber$Outbound` instead. */
  export type Outbound =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber$Outbound;
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONNumberToJSON(
  createEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber:
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber,
): string {
  return JSON.stringify(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber$outboundSchema
      .parse(createEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber),
  );
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody3Type$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody3Type
  > = z.nativeEnum(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody3Type,
  );

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody3Type$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody3Type
  > =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody3Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody3Type$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody3Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody3Type$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody3Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody3Type$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean$inboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody3Type$inboundSchema,
    value: z.boolean(),
  });

/** @internal */
export type CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean$Outbound =
  {
    enabled: boolean;
    type: string;
    value: boolean;
  };

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean$outboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean$Outbound,
    z.ZodTypeDef,
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBody3Type$outboundSchema,
    value: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean$outboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean$Outbound` instead. */
  export type Outbound =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean$Outbound;
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONBooleanToJSON(
  createEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean:
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean,
): string {
  return JSON.stringify(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean$outboundSchema
      .parse(createEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean),
  );
}

export function createEvalGuardrailConfigEvalsResponse200ApplicationJSONBooleanFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean' from JSON`,
  );
}

/** @internal */
export const CreateEvalResponseBodyEvalsGuardrailConfig$inboundSchema:
  z.ZodType<CreateEvalResponseBodyEvalsGuardrailConfig, z.ZodTypeDef, unknown> =
    z.union([
      z.lazy(() =>
        CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber$inboundSchema
      ),
      z.lazy(() =>
        CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean$inboundSchema
      ),
    ]);

/** @internal */
export type CreateEvalResponseBodyEvalsGuardrailConfig$Outbound =
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber$Outbound
  | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean$Outbound;

/** @internal */
export const CreateEvalResponseBodyEvalsGuardrailConfig$outboundSchema:
  z.ZodType<
    CreateEvalResponseBodyEvalsGuardrailConfig$Outbound,
    z.ZodTypeDef,
    CreateEvalResponseBodyEvalsGuardrailConfig
  > = z.union([
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber$outboundSchema
    ),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalResponseBodyEvalsGuardrailConfig$ {
  /** @deprecated use `CreateEvalResponseBodyEvalsGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalResponseBodyEvalsGuardrailConfig$inboundSchema;
  /** @deprecated use `CreateEvalResponseBodyEvalsGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalResponseBodyEvalsGuardrailConfig$outboundSchema;
  /** @deprecated use `CreateEvalResponseBodyEvalsGuardrailConfig$Outbound` instead. */
  export type Outbound = CreateEvalResponseBodyEvalsGuardrailConfig$Outbound;
}

export function createEvalResponseBodyEvalsGuardrailConfigToJSON(
  createEvalResponseBodyEvalsGuardrailConfig:
    CreateEvalResponseBodyEvalsGuardrailConfig,
): string {
  return JSON.stringify(
    CreateEvalResponseBodyEvalsGuardrailConfig$outboundSchema.parse(
      createEvalResponseBodyEvalsGuardrailConfig,
    ),
  );
}

export function createEvalResponseBodyEvalsGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalResponseBodyEvalsGuardrailConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalResponseBodyEvalsGuardrailConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateEvalResponseBodyEvalsGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const CreateEvalResponseBodyEvalsType$inboundSchema: z.ZodNativeEnum<
  typeof CreateEvalResponseBodyEvalsType
> = z.nativeEnum(CreateEvalResponseBodyEvalsType);

/** @internal */
export const CreateEvalResponseBodyEvalsType$outboundSchema: z.ZodNativeEnum<
  typeof CreateEvalResponseBodyEvalsType
> = CreateEvalResponseBodyEvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalResponseBodyEvalsType$ {
  /** @deprecated use `CreateEvalResponseBodyEvalsType$inboundSchema` instead. */
  export const inboundSchema = CreateEvalResponseBodyEvalsType$inboundSchema;
  /** @deprecated use `CreateEvalResponseBodyEvalsType$outboundSchema` instead. */
  export const outboundSchema = CreateEvalResponseBodyEvalsType$outboundSchema;
}

/** @internal */
export const ResponseBodyMethod$inboundSchema: z.ZodNativeEnum<
  typeof ResponseBodyMethod
> = z.nativeEnum(ResponseBodyMethod);

/** @internal */
export const ResponseBodyMethod$outboundSchema: z.ZodNativeEnum<
  typeof ResponseBodyMethod
> = ResponseBodyMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseBodyMethod$ {
  /** @deprecated use `ResponseBodyMethod$inboundSchema` instead. */
  export const inboundSchema = ResponseBodyMethod$inboundSchema;
  /** @deprecated use `ResponseBodyMethod$outboundSchema` instead. */
  export const outboundSchema = ResponseBodyMethod$outboundSchema;
}

/** @internal */
export const ResponseBodyHTTP$inboundSchema: z.ZodType<
  ResponseBodyHTTP,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  description: z.string(),
  created: z.string().default("2025-10-27T09:34:56.432Z"),
  updated: z.string().default("2025-10-27T09:34:56.432Z"),
  guardrail_config: z.union([
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber$inboundSchema
    ),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean$inboundSchema
    ),
  ]).optional(),
  type: CreateEvalResponseBodyEvalsType$inboundSchema,
  url: z.string(),
  method: ResponseBodyMethod$inboundSchema,
  headers: z.record(z.string()),
  payload: z.record(z.any()),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "guardrail_config": "guardrailConfig",
  });
});

/** @internal */
export type ResponseBodyHTTP$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber$Outbound
    | CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean$Outbound
    | undefined;
  type: string;
  url: string;
  method: string;
  headers: { [k: string]: string };
  payload: { [k: string]: any };
  key: string;
};

/** @internal */
export const ResponseBodyHTTP$outboundSchema: z.ZodType<
  ResponseBodyHTTP$Outbound,
  z.ZodTypeDef,
  ResponseBodyHTTP
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-10-27T09:34:56.432Z"),
  updated: z.string().default("2025-10-27T09:34:56.432Z"),
  guardrailConfig: z.union([
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONNumber$outboundSchema
    ),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONBoolean$outboundSchema
    ),
  ]).optional(),
  type: CreateEvalResponseBodyEvalsType$outboundSchema,
  url: z.string(),
  method: ResponseBodyMethod$outboundSchema,
  headers: z.record(z.string()),
  payload: z.record(z.any()),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseBodyHTTP$ {
  /** @deprecated use `ResponseBodyHTTP$inboundSchema` instead. */
  export const inboundSchema = ResponseBodyHTTP$inboundSchema;
  /** @deprecated use `ResponseBodyHTTP$outboundSchema` instead. */
  export const outboundSchema = ResponseBodyHTTP$outboundSchema;
  /** @deprecated use `ResponseBodyHTTP$Outbound` instead. */
  export type Outbound = ResponseBodyHTTP$Outbound;
}

export function responseBodyHTTPToJSON(
  responseBodyHTTP: ResponseBodyHTTP,
): string {
  return JSON.stringify(
    ResponseBodyHTTP$outboundSchema.parse(responseBodyHTTP),
  );
}

export function responseBodyHTTPFromJSON(
  jsonString: string,
): SafeParseResult<ResponseBodyHTTP, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponseBodyHTTP$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponseBodyHTTP' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType
  > =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200Operator$inboundSchema:
  z.ZodNativeEnum<typeof CreateEvalGuardrailConfigEvalsResponse200Operator> = z
    .nativeEnum(CreateEvalGuardrailConfigEvalsResponse200Operator);

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200Operator$outboundSchema:
  z.ZodNativeEnum<typeof CreateEvalGuardrailConfigEvalsResponse200Operator> =
    CreateEvalGuardrailConfigEvalsResponse200Operator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200Operator$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200Operator$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200Operator$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200Operator$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200Operator$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200Number$inboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200Number,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema,
    value: z.number(),
    operator: CreateEvalGuardrailConfigEvalsResponse200Operator$inboundSchema,
  });

/** @internal */
export type CreateEvalGuardrailConfigEvalsResponse200Number$Outbound = {
  enabled: boolean;
  type: string;
  value: number;
  operator: string;
};

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200Number$outboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200Number$Outbound,
    z.ZodTypeDef,
    CreateEvalGuardrailConfigEvalsResponse200Number
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema,
    value: z.number(),
    operator: CreateEvalGuardrailConfigEvalsResponse200Operator$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200Number$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200Number$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200Number$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200Number$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200Number$outboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200Number$Outbound` instead. */
  export type Outbound =
    CreateEvalGuardrailConfigEvalsResponse200Number$Outbound;
}

export function createEvalGuardrailConfigEvalsResponse200NumberToJSON(
  createEvalGuardrailConfigEvalsResponse200Number:
    CreateEvalGuardrailConfigEvalsResponse200Number,
): string {
  return JSON.stringify(
    CreateEvalGuardrailConfigEvalsResponse200Number$outboundSchema.parse(
      createEvalGuardrailConfigEvalsResponse200Number,
    ),
  );
}

export function createEvalGuardrailConfigEvalsResponse200NumberFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalGuardrailConfigEvalsResponse200Number,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalGuardrailConfigEvalsResponse200Number$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateEvalGuardrailConfigEvalsResponse200Number' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONType
  > = z.nativeEnum(
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONType,
  );

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONType
  > =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONType$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200Boolean$inboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200Boolean,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONType$inboundSchema,
    value: z.boolean(),
  });

/** @internal */
export type CreateEvalGuardrailConfigEvalsResponse200Boolean$Outbound = {
  enabled: boolean;
  type: string;
  value: boolean;
};

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200Boolean$outboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponse200Boolean$Outbound,
    z.ZodTypeDef,
    CreateEvalGuardrailConfigEvalsResponse200Boolean
  > = z.object({
    enabled: z.boolean(),
    type:
      CreateEvalGuardrailConfigEvalsResponse200ApplicationJSONType$outboundSchema,
    value: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200Boolean$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200Boolean$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200Boolean$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200Boolean$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200Boolean$outboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200Boolean$Outbound` instead. */
  export type Outbound =
    CreateEvalGuardrailConfigEvalsResponse200Boolean$Outbound;
}

export function createEvalGuardrailConfigEvalsResponse200BooleanToJSON(
  createEvalGuardrailConfigEvalsResponse200Boolean:
    CreateEvalGuardrailConfigEvalsResponse200Boolean,
): string {
  return JSON.stringify(
    CreateEvalGuardrailConfigEvalsResponse200Boolean$outboundSchema.parse(
      createEvalGuardrailConfigEvalsResponse200Boolean,
    ),
  );
}

export function createEvalGuardrailConfigEvalsResponse200BooleanFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalGuardrailConfigEvalsResponse200Boolean,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalGuardrailConfigEvalsResponse200Boolean$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateEvalGuardrailConfigEvalsResponse200Boolean' from JSON`,
  );
}

/** @internal */
export const CreateEvalResponseBodyGuardrailConfig$inboundSchema: z.ZodType<
  CreateEvalResponseBodyGuardrailConfig,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => CreateEvalGuardrailConfigEvalsResponse200Number$inboundSchema),
  z.lazy(() => CreateEvalGuardrailConfigEvalsResponse200Boolean$inboundSchema),
]);

/** @internal */
export type CreateEvalResponseBodyGuardrailConfig$Outbound =
  | CreateEvalGuardrailConfigEvalsResponse200Number$Outbound
  | CreateEvalGuardrailConfigEvalsResponse200Boolean$Outbound;

/** @internal */
export const CreateEvalResponseBodyGuardrailConfig$outboundSchema: z.ZodType<
  CreateEvalResponseBodyGuardrailConfig$Outbound,
  z.ZodTypeDef,
  CreateEvalResponseBodyGuardrailConfig
> = z.union([
  z.lazy(() => CreateEvalGuardrailConfigEvalsResponse200Number$outboundSchema),
  z.lazy(() => CreateEvalGuardrailConfigEvalsResponse200Boolean$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalResponseBodyGuardrailConfig$ {
  /** @deprecated use `CreateEvalResponseBodyGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalResponseBodyGuardrailConfig$inboundSchema;
  /** @deprecated use `CreateEvalResponseBodyGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalResponseBodyGuardrailConfig$outboundSchema;
  /** @deprecated use `CreateEvalResponseBodyGuardrailConfig$Outbound` instead. */
  export type Outbound = CreateEvalResponseBodyGuardrailConfig$Outbound;
}

export function createEvalResponseBodyGuardrailConfigToJSON(
  createEvalResponseBodyGuardrailConfig: CreateEvalResponseBodyGuardrailConfig,
): string {
  return JSON.stringify(
    CreateEvalResponseBodyGuardrailConfig$outboundSchema.parse(
      createEvalResponseBodyGuardrailConfig,
    ),
  );
}

export function createEvalResponseBodyGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalResponseBodyGuardrailConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalResponseBodyGuardrailConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalResponseBodyGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const CreateEvalResponseBodyType$inboundSchema: z.ZodNativeEnum<
  typeof CreateEvalResponseBodyType
> = z.nativeEnum(CreateEvalResponseBodyType);

/** @internal */
export const CreateEvalResponseBodyType$outboundSchema: z.ZodNativeEnum<
  typeof CreateEvalResponseBodyType
> = CreateEvalResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalResponseBodyType$ {
  /** @deprecated use `CreateEvalResponseBodyType$inboundSchema` instead. */
  export const inboundSchema = CreateEvalResponseBodyType$inboundSchema;
  /** @deprecated use `CreateEvalResponseBodyType$outboundSchema` instead. */
  export const outboundSchema = CreateEvalResponseBodyType$outboundSchema;
}

/** @internal */
export const ResponseBodyJSON$inboundSchema: z.ZodType<
  ResponseBodyJSON,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  description: z.string(),
  created: z.string().default("2025-10-27T09:34:56.432Z"),
  updated: z.string().default("2025-10-27T09:34:56.432Z"),
  guardrail_config: z.union([
    z.lazy(() => CreateEvalGuardrailConfigEvalsResponse200Number$inboundSchema),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200Boolean$inboundSchema
    ),
  ]).optional(),
  type: CreateEvalResponseBodyType$inboundSchema,
  schema: z.string(),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "guardrail_config": "guardrailConfig",
  });
});

/** @internal */
export type ResponseBodyJSON$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | CreateEvalGuardrailConfigEvalsResponse200Number$Outbound
    | CreateEvalGuardrailConfigEvalsResponse200Boolean$Outbound
    | undefined;
  type: string;
  schema: string;
  key: string;
};

/** @internal */
export const ResponseBodyJSON$outboundSchema: z.ZodType<
  ResponseBodyJSON$Outbound,
  z.ZodTypeDef,
  ResponseBodyJSON
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-10-27T09:34:56.432Z"),
  updated: z.string().default("2025-10-27T09:34:56.432Z"),
  guardrailConfig: z.union([
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200Number$outboundSchema
    ),
    z.lazy(() =>
      CreateEvalGuardrailConfigEvalsResponse200Boolean$outboundSchema
    ),
  ]).optional(),
  type: CreateEvalResponseBodyType$outboundSchema,
  schema: z.string(),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseBodyJSON$ {
  /** @deprecated use `ResponseBodyJSON$inboundSchema` instead. */
  export const inboundSchema = ResponseBodyJSON$inboundSchema;
  /** @deprecated use `ResponseBodyJSON$outboundSchema` instead. */
  export const outboundSchema = ResponseBodyJSON$outboundSchema;
  /** @deprecated use `ResponseBodyJSON$Outbound` instead. */
  export type Outbound = ResponseBodyJSON$Outbound;
}

export function responseBodyJSONToJSON(
  responseBodyJSON: ResponseBodyJSON,
): string {
  return JSON.stringify(
    ResponseBodyJSON$outboundSchema.parse(responseBodyJSON),
  );
}

export function responseBodyJSONFromJSON(
  jsonString: string,
): SafeParseResult<ResponseBodyJSON, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponseBodyJSON$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponseBodyJSON' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof CreateEvalGuardrailConfigEvalsResponse200Type> = z
    .nativeEnum(CreateEvalGuardrailConfigEvalsResponse200Type);

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof CreateEvalGuardrailConfigEvalsResponse200Type> =
    CreateEvalGuardrailConfigEvalsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponse200Type$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200Type$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponse200Type$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponseOperator$inboundSchema:
  z.ZodNativeEnum<typeof CreateEvalGuardrailConfigEvalsResponseOperator> = z
    .nativeEnum(CreateEvalGuardrailConfigEvalsResponseOperator);

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponseOperator$outboundSchema:
  z.ZodNativeEnum<typeof CreateEvalGuardrailConfigEvalsResponseOperator> =
    CreateEvalGuardrailConfigEvalsResponseOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponseOperator$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponseOperator$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponseOperator$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponseOperator$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponseOperator$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponseNumber$inboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponseNumber,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type: CreateEvalGuardrailConfigEvalsResponse200Type$inboundSchema,
    value: z.number(),
    operator: CreateEvalGuardrailConfigEvalsResponseOperator$inboundSchema,
  });

/** @internal */
export type CreateEvalGuardrailConfigEvalsResponseNumber$Outbound = {
  enabled: boolean;
  type: string;
  value: number;
  operator: string;
};

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponseNumber$outboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponseNumber$Outbound,
    z.ZodTypeDef,
    CreateEvalGuardrailConfigEvalsResponseNumber
  > = z.object({
    enabled: z.boolean(),
    type: CreateEvalGuardrailConfigEvalsResponse200Type$outboundSchema,
    value: z.number(),
    operator: CreateEvalGuardrailConfigEvalsResponseOperator$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponseNumber$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponseNumber$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponseNumber$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponseNumber$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponseNumber$outboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponseNumber$Outbound` instead. */
  export type Outbound = CreateEvalGuardrailConfigEvalsResponseNumber$Outbound;
}

export function createEvalGuardrailConfigEvalsResponseNumberToJSON(
  createEvalGuardrailConfigEvalsResponseNumber:
    CreateEvalGuardrailConfigEvalsResponseNumber,
): string {
  return JSON.stringify(
    CreateEvalGuardrailConfigEvalsResponseNumber$outboundSchema.parse(
      createEvalGuardrailConfigEvalsResponseNumber,
    ),
  );
}

export function createEvalGuardrailConfigEvalsResponseNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalGuardrailConfigEvalsResponseNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalGuardrailConfigEvalsResponseNumber$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateEvalGuardrailConfigEvalsResponseNumber' from JSON`,
  );
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof CreateEvalGuardrailConfigEvalsResponseType> = z
    .nativeEnum(CreateEvalGuardrailConfigEvalsResponseType);

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof CreateEvalGuardrailConfigEvalsResponseType> =
    CreateEvalGuardrailConfigEvalsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponseType$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponseType$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponseType$outboundSchema;
}

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponseBoolean$inboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponseBoolean,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type: CreateEvalGuardrailConfigEvalsResponseType$inboundSchema,
    value: z.boolean(),
  });

/** @internal */
export type CreateEvalGuardrailConfigEvalsResponseBoolean$Outbound = {
  enabled: boolean;
  type: string;
  value: boolean;
};

/** @internal */
export const CreateEvalGuardrailConfigEvalsResponseBoolean$outboundSchema:
  z.ZodType<
    CreateEvalGuardrailConfigEvalsResponseBoolean$Outbound,
    z.ZodTypeDef,
    CreateEvalGuardrailConfigEvalsResponseBoolean
  > = z.object({
    enabled: z.boolean(),
    type: CreateEvalGuardrailConfigEvalsResponseType$outboundSchema,
    value: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalGuardrailConfigEvalsResponseBoolean$ {
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponseBoolean$inboundSchema` instead. */
  export const inboundSchema =
    CreateEvalGuardrailConfigEvalsResponseBoolean$inboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponseBoolean$outboundSchema` instead. */
  export const outboundSchema =
    CreateEvalGuardrailConfigEvalsResponseBoolean$outboundSchema;
  /** @deprecated use `CreateEvalGuardrailConfigEvalsResponseBoolean$Outbound` instead. */
  export type Outbound = CreateEvalGuardrailConfigEvalsResponseBoolean$Outbound;
}

export function createEvalGuardrailConfigEvalsResponseBooleanToJSON(
  createEvalGuardrailConfigEvalsResponseBoolean:
    CreateEvalGuardrailConfigEvalsResponseBoolean,
): string {
  return JSON.stringify(
    CreateEvalGuardrailConfigEvalsResponseBoolean$outboundSchema.parse(
      createEvalGuardrailConfigEvalsResponseBoolean,
    ),
  );
}

export function createEvalGuardrailConfigEvalsResponseBooleanFromJSON(
  jsonString: string,
): SafeParseResult<
  CreateEvalGuardrailConfigEvalsResponseBoolean,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      CreateEvalGuardrailConfigEvalsResponseBoolean$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'CreateEvalGuardrailConfigEvalsResponseBoolean' from JSON`,
  );
}

/** @internal */
export const ResponseBodyGuardrailConfig$inboundSchema: z.ZodType<
  ResponseBodyGuardrailConfig,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => CreateEvalGuardrailConfigEvalsResponseNumber$inboundSchema),
  z.lazy(() => CreateEvalGuardrailConfigEvalsResponseBoolean$inboundSchema),
]);

/** @internal */
export type ResponseBodyGuardrailConfig$Outbound =
  | CreateEvalGuardrailConfigEvalsResponseNumber$Outbound
  | CreateEvalGuardrailConfigEvalsResponseBoolean$Outbound;

/** @internal */
export const ResponseBodyGuardrailConfig$outboundSchema: z.ZodType<
  ResponseBodyGuardrailConfig$Outbound,
  z.ZodTypeDef,
  ResponseBodyGuardrailConfig
> = z.union([
  z.lazy(() => CreateEvalGuardrailConfigEvalsResponseNumber$outboundSchema),
  z.lazy(() => CreateEvalGuardrailConfigEvalsResponseBoolean$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseBodyGuardrailConfig$ {
  /** @deprecated use `ResponseBodyGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema = ResponseBodyGuardrailConfig$inboundSchema;
  /** @deprecated use `ResponseBodyGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema = ResponseBodyGuardrailConfig$outboundSchema;
  /** @deprecated use `ResponseBodyGuardrailConfig$Outbound` instead. */
  export type Outbound = ResponseBodyGuardrailConfig$Outbound;
}

export function responseBodyGuardrailConfigToJSON(
  responseBodyGuardrailConfig: ResponseBodyGuardrailConfig,
): string {
  return JSON.stringify(
    ResponseBodyGuardrailConfig$outboundSchema.parse(
      responseBodyGuardrailConfig,
    ),
  );
}

export function responseBodyGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<ResponseBodyGuardrailConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponseBodyGuardrailConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponseBodyGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const ResponseBodyType$inboundSchema: z.ZodNativeEnum<
  typeof ResponseBodyType
> = z.nativeEnum(ResponseBodyType);

/** @internal */
export const ResponseBodyType$outboundSchema: z.ZodNativeEnum<
  typeof ResponseBodyType
> = ResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseBodyType$ {
  /** @deprecated use `ResponseBodyType$inboundSchema` instead. */
  export const inboundSchema = ResponseBodyType$inboundSchema;
  /** @deprecated use `ResponseBodyType$outboundSchema` instead. */
  export const outboundSchema = ResponseBodyType$outboundSchema;
}

/** @internal */
export const ResponseBodyLLM$inboundSchema: z.ZodType<
  ResponseBodyLLM,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  description: z.string(),
  created: z.string().default("2025-10-27T09:34:56.432Z"),
  updated: z.string().default("2025-10-27T09:34:56.432Z"),
  guardrail_config: z.union([
    z.lazy(() => CreateEvalGuardrailConfigEvalsResponseNumber$inboundSchema),
    z.lazy(() => CreateEvalGuardrailConfigEvalsResponseBoolean$inboundSchema),
  ]).optional(),
  type: ResponseBodyType$inboundSchema,
  prompt: z.string(),
  key: z.string(),
  model: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "guardrail_config": "guardrailConfig",
  });
});

/** @internal */
export type ResponseBodyLLM$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | CreateEvalGuardrailConfigEvalsResponseNumber$Outbound
    | CreateEvalGuardrailConfigEvalsResponseBoolean$Outbound
    | undefined;
  type: string;
  prompt: string;
  key: string;
  model: string;
};

/** @internal */
export const ResponseBodyLLM$outboundSchema: z.ZodType<
  ResponseBodyLLM$Outbound,
  z.ZodTypeDef,
  ResponseBodyLLM
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-10-27T09:34:56.432Z"),
  updated: z.string().default("2025-10-27T09:34:56.432Z"),
  guardrailConfig: z.union([
    z.lazy(() => CreateEvalGuardrailConfigEvalsResponseNumber$outboundSchema),
    z.lazy(() => CreateEvalGuardrailConfigEvalsResponseBoolean$outboundSchema),
  ]).optional(),
  type: ResponseBodyType$outboundSchema,
  prompt: z.string(),
  key: z.string(),
  model: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseBodyLLM$ {
  /** @deprecated use `ResponseBodyLLM$inboundSchema` instead. */
  export const inboundSchema = ResponseBodyLLM$inboundSchema;
  /** @deprecated use `ResponseBodyLLM$outboundSchema` instead. */
  export const outboundSchema = ResponseBodyLLM$outboundSchema;
  /** @deprecated use `ResponseBodyLLM$Outbound` instead. */
  export type Outbound = ResponseBodyLLM$Outbound;
}

export function responseBodyLLMToJSON(
  responseBodyLLM: ResponseBodyLLM,
): string {
  return JSON.stringify(ResponseBodyLLM$outboundSchema.parse(responseBodyLLM));
}

export function responseBodyLLMFromJSON(
  jsonString: string,
): SafeParseResult<ResponseBodyLLM, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponseBodyLLM$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponseBodyLLM' from JSON`,
  );
}

/** @internal */
export const CreateEvalResponseBody$inboundSchema: z.ZodType<
  CreateEvalResponseBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => ResponseBodyHTTP$inboundSchema),
  z.lazy(() => ResponseBodyLLM$inboundSchema),
  z.lazy(() => Ragas$inboundSchema),
  z.lazy(() => ResponseBodyJSON$inboundSchema),
  z.lazy(() => ResponseBodyPython$inboundSchema),
  z.lazy(() => CreateEvalResponseBodyFunction$inboundSchema),
  z.lazy(() => Typescript$inboundSchema),
]);

/** @internal */
export type CreateEvalResponseBody$Outbound =
  | ResponseBodyHTTP$Outbound
  | ResponseBodyLLM$Outbound
  | Ragas$Outbound
  | ResponseBodyJSON$Outbound
  | ResponseBodyPython$Outbound
  | CreateEvalResponseBodyFunction$Outbound
  | Typescript$Outbound;

/** @internal */
export const CreateEvalResponseBody$outboundSchema: z.ZodType<
  CreateEvalResponseBody$Outbound,
  z.ZodTypeDef,
  CreateEvalResponseBody
> = z.union([
  z.lazy(() => ResponseBodyHTTP$outboundSchema),
  z.lazy(() => ResponseBodyLLM$outboundSchema),
  z.lazy(() => Ragas$outboundSchema),
  z.lazy(() => ResponseBodyJSON$outboundSchema),
  z.lazy(() => ResponseBodyPython$outboundSchema),
  z.lazy(() => CreateEvalResponseBodyFunction$outboundSchema),
  z.lazy(() => Typescript$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateEvalResponseBody$ {
  /** @deprecated use `CreateEvalResponseBody$inboundSchema` instead. */
  export const inboundSchema = CreateEvalResponseBody$inboundSchema;
  /** @deprecated use `CreateEvalResponseBody$outboundSchema` instead. */
  export const outboundSchema = CreateEvalResponseBody$outboundSchema;
  /** @deprecated use `CreateEvalResponseBody$Outbound` instead. */
  export type Outbound = CreateEvalResponseBody$Outbound;
}

export function createEvalResponseBodyToJSON(
  createEvalResponseBody: CreateEvalResponseBody,
): string {
  return JSON.stringify(
    CreateEvalResponseBody$outboundSchema.parse(createEvalResponseBody),
  );
}

export function createEvalResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<CreateEvalResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateEvalResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateEvalResponseBody' from JSON`,
  );
}
