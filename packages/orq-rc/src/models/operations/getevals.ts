/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetEvalsRequest = {
  /**
   * A limit on the number of objects to be returned. Limit can range between 1 and 50, and the default is 10
   */
  limit?: number | undefined;
  /**
   * A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, ending with `01JJ1HDHN79XAS7A01WB3HYSDB`, your subsequent call can include `after=01JJ1HDHN79XAS7A01WB3HYSDB` in order to fetch the next page of the list.
   */
  startingAfter?: string | undefined;
  /**
   * A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 20 objects, starting with `01JJ1HDHN79XAS7A01WB3HYSDB`, your subsequent call can include `before=01JJ1HDHN79XAS7A01WB3HYSDB` in order to fetch the previous page of the list.
   */
  endingBefore?: string | undefined;
};

export const GetEvalsObject = {
  List: "list",
} as const;
export type GetEvalsObject = ClosedEnum<typeof GetEvalsObject>;

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type =
  {
    Number: "number",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type
  >;

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator = {
  Eq: "eq",
  Ne: "ne",
  Gt: "gt",
  Gte: "gte",
  Lt: "lt",
  Lte: "lte",
} as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator
  >;

export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber = {
  enabled: boolean;
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type;
  value: number;
  operator: GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator;
};

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type =
  {
    Boolean: "boolean",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type
  >;

export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean = {
  enabled: boolean;
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type;
  value: boolean;
};

export type GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig =
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean;

export const GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType = {
  TypescriptEval: "typescript_eval",
} as const;
export type GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType
  >;

export type DataTypescript = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean
    | undefined;
  code: string;
  type: GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType;
  key: string;
};

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type =
  {
    Number: "number",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type
  >;

export const GetEvalsGuardrailConfigEvalsResponse200Operator = {
  Eq: "eq",
  Ne: "ne",
  Gt: "gt",
  Gte: "gte",
  Lt: "lt",
  Lte: "lte",
} as const;
export type GetEvalsGuardrailConfigEvalsResponse200Operator = ClosedEnum<
  typeof GetEvalsGuardrailConfigEvalsResponse200Operator
>;

export type GetEvalsGuardrailConfigEvalsResponse200Number = {
  enabled: boolean;
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type;
  value: number;
  operator: GetEvalsGuardrailConfigEvalsResponse200Operator;
};

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type =
  {
    Boolean: "boolean",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type
  >;

export type GetEvalsGuardrailConfigEvalsResponse200Boolean = {
  enabled: boolean;
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type;
  value: boolean;
};

export type GetEvalsDataEvalsResponse200GuardrailConfig =
  | GetEvalsGuardrailConfigEvalsResponse200Number
  | GetEvalsGuardrailConfigEvalsResponse200Boolean;

export const GetEvalsDataEvalsResponse200ApplicationJSONType = {
  Ragas: "ragas",
} as const;
export type GetEvalsDataEvalsResponse200ApplicationJSONType = ClosedEnum<
  typeof GetEvalsDataEvalsResponse200ApplicationJSONType
>;

export const DataRagasMetric = {
  ContextPrecision: "context_precision",
  ContextRecall: "context_recall",
  ContextEntitiesRecall: "context_entities_recall",
  Harmfulness: "harmfulness",
  Maliciousness: "maliciousness",
  Coherence: "coherence",
  Correctness: "correctness",
  Conciseness: "conciseness",
  ResponseRelevancy: "response_relevancy",
  Faithfulness: "faithfulness",
  Summarization: "summarization",
  NoiseSensitivity: "noise_sensitivity",
} as const;
export type DataRagasMetric = ClosedEnum<typeof DataRagasMetric>;

export type DataRagas = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | GetEvalsGuardrailConfigEvalsResponse200Number
    | GetEvalsGuardrailConfigEvalsResponse200Boolean
    | undefined;
  type: GetEvalsDataEvalsResponse200ApplicationJSONType;
  ragasMetric: DataRagasMetric;
  key: string;
  model: string;
};

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type =
  {
    Number: "number",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type
  >;

export const GetEvalsGuardrailConfigEvalsResponseOperator = {
  Eq: "eq",
  Ne: "ne",
  Gt: "gt",
  Gte: "gte",
  Lt: "lt",
  Lte: "lte",
} as const;
export type GetEvalsGuardrailConfigEvalsResponseOperator = ClosedEnum<
  typeof GetEvalsGuardrailConfigEvalsResponseOperator
>;

export type GetEvalsGuardrailConfigEvalsResponseNumber = {
  enabled: boolean;
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type;
  value: number;
  operator: GetEvalsGuardrailConfigEvalsResponseOperator;
};

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type =
  {
    Boolean: "boolean",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type
  >;

export type GetEvalsGuardrailConfigEvalsResponseBoolean = {
  enabled: boolean;
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type;
  value: boolean;
};

export type GetEvalsDataEvalsResponseGuardrailConfig =
  | GetEvalsGuardrailConfigEvalsResponseNumber
  | GetEvalsGuardrailConfigEvalsResponseBoolean;

export const GetEvalsDataEvalsResponse200Type = {
  FunctionEval: "function_eval",
} as const;
export type GetEvalsDataEvalsResponse200Type = ClosedEnum<
  typeof GetEvalsDataEvalsResponse200Type
>;

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData535Type =
  {
    BertCoherence: "bert_coherence",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData535Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData535Type
  >;

export type GetEvalsFunctionParams35 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData535Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData534Type =
  {
    GrammarDiversity: "grammar_diversity",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData534Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData534Type
  >;

export type GetEvalsFunctionParams34 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData534Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData533Type =
  {
    SemanticRepetition: "semantic_repetition",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData533Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData533Type
  >;

export type GetEvalsFunctionParams33 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData533Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData532Type =
  {
    LexicalRepetition: "lexical_repetition",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData532Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData532Type
  >;

export type GetEvalsFunctionParams32 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData532Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData531Type =
  {
    SentencesCount: "sentences_count",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData531Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData531Type
  >;

export type GetEvalsFunctionParams31 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData531Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData530Type =
  {
    WordsCount: "words_count",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData530Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData530Type
  >;

export type GetEvalsFunctionParams30 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData530Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData529Type =
  {
    GseEnglishLevel: "gse_english_level",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData529Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData529Type
  >;

export type GetEvalsFunctionParams29 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData529Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData528Type =
  {
    FleschReadingEase: "flesch_reading_ease",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData528Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData528Type
  >;

export type GetEvalsFunctionParams28 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData528Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData527Type =
  {
    MostRepeatedWords: "most_repeated_words",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData527Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData527Type
  >;

export type GetEvalsFunctionParams27 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData527Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData526Type =
  {
    KeywordsMatch: "keywords_match",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData526Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData526Type
  >;

export type GetEvalsFunctionParams26 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData526Type;
  keywords: Array<string>;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData525Type =
  {
    TopicMatch: "topic_match",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData525Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData525Type
  >;

export type GetEvalsFunctionParams25 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData525Type;
  topic: string;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type =
  {
    LevenshteinDistance: "levenshtein_distance",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type
  >;

export type GetEvalsFunctionParams24 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type =
  {
    CosineSimilarity: "cosine_similarity",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type
  >;

export type GetEvalsFunctionParams23 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type =
  {
    MeteorScore: "meteor_score",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type
  >;

export type GetEvalsFunctionParams22 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type =
  {
    RougeN: "rouge_n",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type
  >;

export type GetEvalsFunctionParams21 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type =
  {
    BleuScore: "bleu_score",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type
  >;

export type GetEvalsFunctionParams20 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type =
  {
    BertScore: "bert_score",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type
  >;

export type GetEvalsFunctionParams19 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type =
  {
    ModerationsGoogle: "moderations_google",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type
  >;

export type GetEvalsFunctionParams18 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type =
  {
    ModerationsOpenai: "moderations_openai",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type
  >;

export type GetEvalsFunctionParams17 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type =
  {
    IsValidJson: "is_valid_json",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type
  >;

export type GetEvalsFunctionParams16 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type =
  {
    Regex: "regex",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type
  >;

export type GetEvalsFunctionParams15 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type;
  pattern: string;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type =
  {
    OneLine: "one_line",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type
  >;

export type GetEvalsFunctionParams14 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type =
  {
    LengthGreaterThan: "length_greater_than",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type
  >;

export type GetEvalsFunctionParams13 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type;
  value: number;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type =
  {
    LengthBetween: "length_between",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type
  >;

export type GetEvalsFunctionParams12 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type;
  min: number;
  max: number;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type =
  {
    LengthLessThan: "length_less_than",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type
  >;

export type GetEvalsFunctionParams11 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type;
  value: number;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type =
  {
    ExactMatch: "exact_match",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type
  >;

export type GetEvalsFunctionParams10 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type =
  {
    EndsWith: "ends_with",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type
  >;

export type GetEvalsFunctionParams9 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type;
  value: string;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType =
  {
    StartWith: "start_with",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType
  >;

export type GetEvalsFunctionParams8 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType;
  value: string;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType =
  {
    ContainsValidLink: "contains_valid_link",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType
  >;

export type GetEvalsFunctionParams7 = {
  type: GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType = {
  ContainsUrl: "contains_url",
} as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType =
  ClosedEnum<typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType>;

export type GetEvalsFunctionParams6 = {
  type: GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType;
};

export const GetEvalsFunctionParamsEvalsResponse200Type = {
  ContainsEmail: "contains_email",
} as const;
export type GetEvalsFunctionParamsEvalsResponse200Type = ClosedEnum<
  typeof GetEvalsFunctionParamsEvalsResponse200Type
>;

export type GetEvalsFunctionParams5 = {
  type: GetEvalsFunctionParamsEvalsResponse200Type;
};

export const GetEvalsFunctionParamsEvalsResponseType = {
  ContainsAny: "contains_any",
} as const;
export type GetEvalsFunctionParamsEvalsResponseType = ClosedEnum<
  typeof GetEvalsFunctionParamsEvalsResponseType
>;

export type GetEvalsFunctionParams4 = {
  type: GetEvalsFunctionParamsEvalsResponseType;
  keywords: Array<string>;
};

export const GetEvalsFunctionParamsEvalsType = {
  ContainsAll: "contains_all",
} as const;
export type GetEvalsFunctionParamsEvalsType = ClosedEnum<
  typeof GetEvalsFunctionParamsEvalsType
>;

export type GetEvalsFunctionParams3 = {
  type: GetEvalsFunctionParamsEvalsType;
  keywords: Array<string>;
};

export const GetEvalsFunctionParamsType = {
  ContainsNone: "contains_none",
} as const;
export type GetEvalsFunctionParamsType = ClosedEnum<
  typeof GetEvalsFunctionParamsType
>;

export type GetEvalsFunctionParams2 = {
  type: GetEvalsFunctionParamsType;
  keywords: Array<string>;
};

export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData51Type =
  {
    Contains: "contains",
  } as const;
export type GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData51Type =
  ClosedEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData51Type
  >;

export type GetEvalsFunctionParams1 = {
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData51Type;
  value: string;
};

export type DataFunctionParams =
  | GetEvalsFunctionParams12
  | GetEvalsFunctionParams1
  | GetEvalsFunctionParams2
  | GetEvalsFunctionParams3
  | GetEvalsFunctionParams4
  | GetEvalsFunctionParams8
  | GetEvalsFunctionParams9
  | GetEvalsFunctionParams11
  | GetEvalsFunctionParams13
  | GetEvalsFunctionParams15
  | GetEvalsFunctionParams25
  | GetEvalsFunctionParams26
  | GetEvalsFunctionParams5
  | GetEvalsFunctionParams6
  | GetEvalsFunctionParams7
  | GetEvalsFunctionParams10
  | GetEvalsFunctionParams14
  | GetEvalsFunctionParams16
  | GetEvalsFunctionParams17
  | GetEvalsFunctionParams18
  | GetEvalsFunctionParams19
  | GetEvalsFunctionParams20
  | GetEvalsFunctionParams21
  | GetEvalsFunctionParams22
  | GetEvalsFunctionParams23
  | GetEvalsFunctionParams24
  | GetEvalsFunctionParams27
  | GetEvalsFunctionParams28
  | GetEvalsFunctionParams29
  | GetEvalsFunctionParams30
  | GetEvalsFunctionParams31
  | GetEvalsFunctionParams32
  | GetEvalsFunctionParams33
  | GetEvalsFunctionParams34
  | GetEvalsFunctionParams35;

export type DataFunction = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | GetEvalsGuardrailConfigEvalsResponseNumber
    | GetEvalsGuardrailConfigEvalsResponseBoolean
    | undefined;
  type: GetEvalsDataEvalsResponse200Type;
  functionParams:
    | GetEvalsFunctionParams12
    | GetEvalsFunctionParams1
    | GetEvalsFunctionParams2
    | GetEvalsFunctionParams3
    | GetEvalsFunctionParams4
    | GetEvalsFunctionParams8
    | GetEvalsFunctionParams9
    | GetEvalsFunctionParams11
    | GetEvalsFunctionParams13
    | GetEvalsFunctionParams15
    | GetEvalsFunctionParams25
    | GetEvalsFunctionParams26
    | GetEvalsFunctionParams5
    | GetEvalsFunctionParams6
    | GetEvalsFunctionParams7
    | GetEvalsFunctionParams10
    | GetEvalsFunctionParams14
    | GetEvalsFunctionParams16
    | GetEvalsFunctionParams17
    | GetEvalsFunctionParams18
    | GetEvalsFunctionParams19
    | GetEvalsFunctionParams20
    | GetEvalsFunctionParams21
    | GetEvalsFunctionParams22
    | GetEvalsFunctionParams23
    | GetEvalsFunctionParams24
    | GetEvalsFunctionParams27
    | GetEvalsFunctionParams28
    | GetEvalsFunctionParams29
    | GetEvalsFunctionParams30
    | GetEvalsFunctionParams31
    | GetEvalsFunctionParams32
    | GetEvalsFunctionParams33
    | GetEvalsFunctionParams34
    | GetEvalsFunctionParams35;
  key: string;
};

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType =
  {
    Number: "number",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType
  >;

export const GetEvalsGuardrailConfigEvalsOperator = {
  Eq: "eq",
  Ne: "ne",
  Gt: "gt",
  Gte: "gte",
  Lt: "lt",
  Lte: "lte",
} as const;
export type GetEvalsGuardrailConfigEvalsOperator = ClosedEnum<
  typeof GetEvalsGuardrailConfigEvalsOperator
>;

export type GetEvalsGuardrailConfigEvalsNumber = {
  enabled: boolean;
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType;
  value: number;
  operator: GetEvalsGuardrailConfigEvalsOperator;
};

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType =
  {
    Boolean: "boolean",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType
  >;

export type GetEvalsGuardrailConfigEvalsBoolean = {
  enabled: boolean;
  type: GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType;
  value: boolean;
};

export type GetEvalsDataEvalsGuardrailConfig =
  | GetEvalsGuardrailConfigEvalsNumber
  | GetEvalsGuardrailConfigEvalsBoolean;

export const GetEvalsDataEvalsResponseType = {
  PythonEval: "python_eval",
} as const;
export type GetEvalsDataEvalsResponseType = ClosedEnum<
  typeof GetEvalsDataEvalsResponseType
>;

export type DataPython = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | GetEvalsGuardrailConfigEvalsNumber
    | GetEvalsGuardrailConfigEvalsBoolean
    | undefined;
  code: string;
  type: GetEvalsDataEvalsResponseType;
  key: string;
};

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType = {
  Number: "number",
} as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType =
  ClosedEnum<typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType>;

export const GetEvalsGuardrailConfigOperator = {
  Eq: "eq",
  Ne: "ne",
  Gt: "gt",
  Gte: "gte",
  Lt: "lt",
  Lte: "lte",
} as const;
export type GetEvalsGuardrailConfigOperator = ClosedEnum<
  typeof GetEvalsGuardrailConfigOperator
>;

export type GetEvalsGuardrailConfigNumber = {
  enabled: boolean;
  type: GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType;
  value: number;
  operator: GetEvalsGuardrailConfigOperator;
};

export const GetEvalsGuardrailConfigEvalsResponse200Type = {
  Boolean: "boolean",
} as const;
export type GetEvalsGuardrailConfigEvalsResponse200Type = ClosedEnum<
  typeof GetEvalsGuardrailConfigEvalsResponse200Type
>;

export type GetEvalsGuardrailConfigBoolean = {
  enabled: boolean;
  type: GetEvalsGuardrailConfigEvalsResponse200Type;
  value: boolean;
};

export type GetEvalsDataGuardrailConfig =
  | GetEvalsGuardrailConfigNumber
  | GetEvalsGuardrailConfigBoolean;

export const GetEvalsDataEvalsType = {
  HttpEval: "http_eval",
} as const;
export type GetEvalsDataEvalsType = ClosedEnum<typeof GetEvalsDataEvalsType>;

export const DataMethod = {
  Get: "GET",
  Post: "POST",
} as const;
export type DataMethod = ClosedEnum<typeof DataMethod>;

export type DataHTTP = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | GetEvalsGuardrailConfigNumber
    | GetEvalsGuardrailConfigBoolean
    | undefined;
  type: GetEvalsDataEvalsType;
  url: string;
  method: DataMethod;
  headers: { [k: string]: string };
  payload: { [k: string]: any };
  key: string;
};

export const GetEvalsGuardrailConfigEvalsResponseType = {
  Number: "number",
} as const;
export type GetEvalsGuardrailConfigEvalsResponseType = ClosedEnum<
  typeof GetEvalsGuardrailConfigEvalsResponseType
>;

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator =
  {
    Eq: "eq",
    Ne: "ne",
    Gt: "gt",
    Gte: "gte",
    Lt: "lt",
    Lte: "lte",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator
  >;

export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber =
  {
    enabled: boolean;
    type: GetEvalsGuardrailConfigEvalsResponseType;
    value: number;
    operator:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator;
  };

export const GetEvalsGuardrailConfigEvalsType = {
  Boolean: "boolean",
} as const;
export type GetEvalsGuardrailConfigEvalsType = ClosedEnum<
  typeof GetEvalsGuardrailConfigEvalsType
>;

export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean =
  {
    enabled: boolean;
    type: GetEvalsGuardrailConfigEvalsType;
    value: boolean;
  };

export type DataGuardrailConfig =
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean;

export const GetEvalsDataType = {
  JsonSchema: "json_schema",
} as const;
export type GetEvalsDataType = ClosedEnum<typeof GetEvalsDataType>;

export type DataJSON = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean
    | undefined;
  type: GetEvalsDataType;
  schema: string;
  key: string;
};

export const GetEvalsGuardrailConfigType = {
  Number: "number",
} as const;
export type GetEvalsGuardrailConfigType = ClosedEnum<
  typeof GetEvalsGuardrailConfigType
>;

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator =
  {
    Eq: "eq",
    Ne: "ne",
    Gt: "gt",
    Gte: "gte",
    Lt: "lt",
    Lte: "lte",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator
  >;

export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber =
  {
    enabled: boolean;
    type: GetEvalsGuardrailConfigType;
    value: number;
    operator:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator;
  };

export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type =
  {
    Boolean: "boolean",
  } as const;
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type =
  ClosedEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type
  >;

export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean =
  {
    enabled: boolean;
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type;
    value: boolean;
  };

export type GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig =
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean;

export const DataType = {
  LlmEval: "llm_eval",
} as const;
export type DataType = ClosedEnum<typeof DataType>;

export type DataLLM = {
  id: string;
  description: string;
  created?: string | undefined;
  updated?: string | undefined;
  guardrailConfig?:
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean
    | undefined;
  type: DataType;
  prompt: string;
  key: string;
  model: string;
};

export type GetEvalsData =
  | DataHTTP
  | DataLLM
  | DataRagas
  | DataJSON
  | DataPython
  | DataFunction
  | DataTypescript;

/**
 * Returns a list of evals
 */
export type GetEvalsResponseBody = {
  object: GetEvalsObject;
  data: Array<
    | DataHTTP
    | DataLLM
    | DataRagas
    | DataJSON
    | DataPython
    | DataFunction
    | DataTypescript
  >;
  hasMore: boolean;
};

/** @internal */
export const GetEvalsRequest$inboundSchema: z.ZodType<
  GetEvalsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  limit: z.number().default(10),
  starting_after: z.string().optional(),
  ending_before: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "starting_after": "startingAfter",
    "ending_before": "endingBefore",
  });
});

/** @internal */
export type GetEvalsRequest$Outbound = {
  limit: number;
  starting_after?: string | undefined;
  ending_before?: string | undefined;
};

/** @internal */
export const GetEvalsRequest$outboundSchema: z.ZodType<
  GetEvalsRequest$Outbound,
  z.ZodTypeDef,
  GetEvalsRequest
> = z.object({
  limit: z.number().default(10),
  startingAfter: z.string().optional(),
  endingBefore: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    startingAfter: "starting_after",
    endingBefore: "ending_before",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsRequest$ {
  /** @deprecated use `GetEvalsRequest$inboundSchema` instead. */
  export const inboundSchema = GetEvalsRequest$inboundSchema;
  /** @deprecated use `GetEvalsRequest$outboundSchema` instead. */
  export const outboundSchema = GetEvalsRequest$outboundSchema;
  /** @deprecated use `GetEvalsRequest$Outbound` instead. */
  export type Outbound = GetEvalsRequest$Outbound;
}

export function getEvalsRequestToJSON(
  getEvalsRequest: GetEvalsRequest,
): string {
  return JSON.stringify(GetEvalsRequest$outboundSchema.parse(getEvalsRequest));
}

export function getEvalsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsRequest' from JSON`,
  );
}

/** @internal */
export const GetEvalsObject$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsObject
> = z.nativeEnum(GetEvalsObject);

/** @internal */
export const GetEvalsObject$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsObject
> = GetEvalsObject$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsObject$ {
  /** @deprecated use `GetEvalsObject$inboundSchema` instead. */
  export const inboundSchema = GetEvalsObject$inboundSchema;
  /** @deprecated use `GetEvalsObject$outboundSchema` instead. */
  export const outboundSchema = GetEvalsObject$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$inboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$inboundSchema,
    value: z.number(),
    operator:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$inboundSchema,
  });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$Outbound =
  {
    enabled: boolean;
    type: string;
    value: number;
    operator: string;
  };

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData72Type$outboundSchema,
    value: z.number(),
    operator:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONOperator$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$Outbound` instead. */
  export type Outbound =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumberToJSON(
  getEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$outboundSchema
      .parse(getEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber),
  );
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$inboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$inboundSchema,
    value: z.boolean(),
  });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$Outbound =
  {
    enabled: boolean;
    type: string;
    value: boolean;
  };

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData7Type$outboundSchema,
    value: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$Outbound` instead. */
  export type Outbound =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONBooleanToJSON(
  getEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$outboundSchema
      .parse(getEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean),
  );
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONBooleanFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$inboundSchema:
  z.ZodType<
    GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$inboundSchema
    ),
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$inboundSchema
    ),
  ]);

/** @internal */
export type GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$Outbound =
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$Outbound
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$Outbound;

/** @internal */
export const GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$outboundSchema:
  z.ZodType<
    GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$Outbound,
    z.ZodTypeDef,
    GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig
  > = z.union([
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$outboundSchema
    ),
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$ {
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$outboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$Outbound` instead. */
  export type Outbound =
    GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$Outbound;
}

export function getEvalsDataEvalsResponse200ApplicationJSONGuardrailConfigToJSON(
  getEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig:
    GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig,
): string {
  return JSON.stringify(
    GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$outboundSchema
      .parse(getEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig),
  );
}

export function getEvalsDataEvalsResponse200ApplicationJSONGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsDataEvalsResponse200ApplicationJSONGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType);

/** @internal */
export const GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType
  > = GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const DataTypescript$inboundSchema: z.ZodType<
  DataTypescript,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  description: z.string(),
  created: z.string().default("2025-09-22T11:53:06.348Z"),
  updated: z.string().default("2025-09-22T11:53:06.348Z"),
  guardrail_config: z.union([
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$inboundSchema
    ),
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$inboundSchema
    ),
  ]).optional(),
  code: z.string(),
  type:
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema,
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "guardrail_config": "guardrailConfig",
  });
});

/** @internal */
export type DataTypescript$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$Outbound
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$Outbound
    | undefined;
  code: string;
  type: string;
  key: string;
};

/** @internal */
export const DataTypescript$outboundSchema: z.ZodType<
  DataTypescript$Outbound,
  z.ZodTypeDef,
  DataTypescript
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-09-22T11:53:06.348Z"),
  updated: z.string().default("2025-09-22T11:53:06.348Z"),
  guardrailConfig: z.union([
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONNumber$outboundSchema
    ),
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONBoolean$outboundSchema
    ),
  ]).optional(),
  code: z.string(),
  type:
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema,
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataTypescript$ {
  /** @deprecated use `DataTypescript$inboundSchema` instead. */
  export const inboundSchema = DataTypescript$inboundSchema;
  /** @deprecated use `DataTypescript$outboundSchema` instead. */
  export const outboundSchema = DataTypescript$outboundSchema;
  /** @deprecated use `DataTypescript$Outbound` instead. */
  export type Outbound = DataTypescript$Outbound;
}

export function dataTypescriptToJSON(dataTypescript: DataTypescript): string {
  return JSON.stringify(DataTypescript$outboundSchema.parse(dataTypescript));
}

export function dataTypescriptFromJSON(
  jsonString: string,
): SafeParseResult<DataTypescript, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DataTypescript$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DataTypescript' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200Operator$inboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsResponse200Operator> = z
    .nativeEnum(GetEvalsGuardrailConfigEvalsResponse200Operator);

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200Operator$outboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsResponse200Operator> =
    GetEvalsGuardrailConfigEvalsResponse200Operator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200Operator$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Operator$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200Operator$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Operator$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200Operator$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200Number$inboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200Number,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$inboundSchema,
    value: z.number(),
    operator: GetEvalsGuardrailConfigEvalsResponse200Operator$inboundSchema,
  });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponse200Number$Outbound = {
  enabled: boolean;
  type: string;
  value: number;
  operator: string;
};

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200Number$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200Number$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponse200Number
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData62Type$outboundSchema,
    value: z.number(),
    operator: GetEvalsGuardrailConfigEvalsResponse200Operator$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200Number$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Number$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200Number$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Number$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200Number$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Number$Outbound` instead. */
  export type Outbound = GetEvalsGuardrailConfigEvalsResponse200Number$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponse200NumberToJSON(
  getEvalsGuardrailConfigEvalsResponse200Number:
    GetEvalsGuardrailConfigEvalsResponse200Number,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponse200Number$outboundSchema.parse(
      getEvalsGuardrailConfigEvalsResponse200Number,
    ),
  );
}

export function getEvalsGuardrailConfigEvalsResponse200NumberFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponse200Number,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponse200Number$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponse200Number' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200Boolean$inboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200Boolean,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$inboundSchema,
    value: z.boolean(),
  });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponse200Boolean$Outbound = {
  enabled: boolean;
  type: string;
  value: boolean;
};

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200Boolean$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200Boolean$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponse200Boolean
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData6Type$outboundSchema,
    value: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200Boolean$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Boolean$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200Boolean$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Boolean$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200Boolean$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Boolean$Outbound` instead. */
  export type Outbound =
    GetEvalsGuardrailConfigEvalsResponse200Boolean$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponse200BooleanToJSON(
  getEvalsGuardrailConfigEvalsResponse200Boolean:
    GetEvalsGuardrailConfigEvalsResponse200Boolean,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponse200Boolean$outboundSchema.parse(
      getEvalsGuardrailConfigEvalsResponse200Boolean,
    ),
  );
}

export function getEvalsGuardrailConfigEvalsResponse200BooleanFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponse200Boolean,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponse200Boolean$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponse200Boolean' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsResponse200GuardrailConfig$inboundSchema:
  z.ZodType<
    GetEvalsDataEvalsResponse200GuardrailConfig,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponse200Number$inboundSchema),
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponse200Boolean$inboundSchema),
  ]);

/** @internal */
export type GetEvalsDataEvalsResponse200GuardrailConfig$Outbound =
  | GetEvalsGuardrailConfigEvalsResponse200Number$Outbound
  | GetEvalsGuardrailConfigEvalsResponse200Boolean$Outbound;

/** @internal */
export const GetEvalsDataEvalsResponse200GuardrailConfig$outboundSchema:
  z.ZodType<
    GetEvalsDataEvalsResponse200GuardrailConfig$Outbound,
    z.ZodTypeDef,
    GetEvalsDataEvalsResponse200GuardrailConfig
  > = z.union([
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponse200Number$outboundSchema),
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponse200Boolean$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsResponse200GuardrailConfig$ {
  /** @deprecated use `GetEvalsDataEvalsResponse200GuardrailConfig$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsDataEvalsResponse200GuardrailConfig$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponse200GuardrailConfig$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsDataEvalsResponse200GuardrailConfig$outboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponse200GuardrailConfig$Outbound` instead. */
  export type Outbound = GetEvalsDataEvalsResponse200GuardrailConfig$Outbound;
}

export function getEvalsDataEvalsResponse200GuardrailConfigToJSON(
  getEvalsDataEvalsResponse200GuardrailConfig:
    GetEvalsDataEvalsResponse200GuardrailConfig,
): string {
  return JSON.stringify(
    GetEvalsDataEvalsResponse200GuardrailConfig$outboundSchema.parse(
      getEvalsDataEvalsResponse200GuardrailConfig,
    ),
  );
}

export function getEvalsDataEvalsResponse200GuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsDataEvalsResponse200GuardrailConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsDataEvalsResponse200GuardrailConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetEvalsDataEvalsResponse200GuardrailConfig' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<typeof GetEvalsDataEvalsResponse200ApplicationJSONType> = z
    .nativeEnum(GetEvalsDataEvalsResponse200ApplicationJSONType);

/** @internal */
export const GetEvalsDataEvalsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<typeof GetEvalsDataEvalsResponse200ApplicationJSONType> =
    GetEvalsDataEvalsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsResponse200ApplicationJSONType$ {
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsDataEvalsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsDataEvalsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const DataRagasMetric$inboundSchema: z.ZodNativeEnum<
  typeof DataRagasMetric
> = z.nativeEnum(DataRagasMetric);

/** @internal */
export const DataRagasMetric$outboundSchema: z.ZodNativeEnum<
  typeof DataRagasMetric
> = DataRagasMetric$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataRagasMetric$ {
  /** @deprecated use `DataRagasMetric$inboundSchema` instead. */
  export const inboundSchema = DataRagasMetric$inboundSchema;
  /** @deprecated use `DataRagasMetric$outboundSchema` instead. */
  export const outboundSchema = DataRagasMetric$outboundSchema;
}

/** @internal */
export const DataRagas$inboundSchema: z.ZodType<
  DataRagas,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  description: z.string(),
  created: z.string().default("2025-09-22T11:53:06.348Z"),
  updated: z.string().default("2025-09-22T11:53:06.348Z"),
  guardrail_config: z.union([
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponse200Number$inboundSchema),
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponse200Boolean$inboundSchema),
  ]).optional(),
  type: GetEvalsDataEvalsResponse200ApplicationJSONType$inboundSchema,
  ragas_metric: DataRagasMetric$inboundSchema,
  key: z.string(),
  model: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "guardrail_config": "guardrailConfig",
    "ragas_metric": "ragasMetric",
  });
});

/** @internal */
export type DataRagas$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | GetEvalsGuardrailConfigEvalsResponse200Number$Outbound
    | GetEvalsGuardrailConfigEvalsResponse200Boolean$Outbound
    | undefined;
  type: string;
  ragas_metric: string;
  key: string;
  model: string;
};

/** @internal */
export const DataRagas$outboundSchema: z.ZodType<
  DataRagas$Outbound,
  z.ZodTypeDef,
  DataRagas
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-09-22T11:53:06.348Z"),
  updated: z.string().default("2025-09-22T11:53:06.348Z"),
  guardrailConfig: z.union([
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponse200Number$outboundSchema),
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponse200Boolean$outboundSchema),
  ]).optional(),
  type: GetEvalsDataEvalsResponse200ApplicationJSONType$outboundSchema,
  ragasMetric: DataRagasMetric$outboundSchema,
  key: z.string(),
  model: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
    ragasMetric: "ragas_metric",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataRagas$ {
  /** @deprecated use `DataRagas$inboundSchema` instead. */
  export const inboundSchema = DataRagas$inboundSchema;
  /** @deprecated use `DataRagas$outboundSchema` instead. */
  export const outboundSchema = DataRagas$outboundSchema;
  /** @deprecated use `DataRagas$Outbound` instead. */
  export type Outbound = DataRagas$Outbound;
}

export function dataRagasToJSON(dataRagas: DataRagas): string {
  return JSON.stringify(DataRagas$outboundSchema.parse(dataRagas));
}

export function dataRagasFromJSON(
  jsonString: string,
): SafeParseResult<DataRagas, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DataRagas$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DataRagas' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponseOperator$inboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsResponseOperator> = z
    .nativeEnum(GetEvalsGuardrailConfigEvalsResponseOperator);

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponseOperator$outboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsResponseOperator> =
    GetEvalsGuardrailConfigEvalsResponseOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponseOperator$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseOperator$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponseOperator$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseOperator$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponseOperator$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponseNumber$inboundSchema:
  z.ZodType<GetEvalsGuardrailConfigEvalsResponseNumber, z.ZodTypeDef, unknown> =
    z.object({
      enabled: z.boolean(),
      type:
        GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$inboundSchema,
      value: z.number(),
      operator: GetEvalsGuardrailConfigEvalsResponseOperator$inboundSchema,
    });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponseNumber$Outbound = {
  enabled: boolean;
  type: string;
  value: number;
  operator: string;
};

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponseNumber$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponseNumber$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponseNumber
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData52Type$outboundSchema,
    value: z.number(),
    operator: GetEvalsGuardrailConfigEvalsResponseOperator$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponseNumber$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseNumber$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponseNumber$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseNumber$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponseNumber$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseNumber$Outbound` instead. */
  export type Outbound = GetEvalsGuardrailConfigEvalsResponseNumber$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponseNumberToJSON(
  getEvalsGuardrailConfigEvalsResponseNumber:
    GetEvalsGuardrailConfigEvalsResponseNumber,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponseNumber$outboundSchema.parse(
      getEvalsGuardrailConfigEvalsResponseNumber,
    ),
  );
}

export function getEvalsGuardrailConfigEvalsResponseNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponseNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponseNumber$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponseNumber' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponseBoolean$inboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponseBoolean,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema,
    value: z.boolean(),
  });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponseBoolean$Outbound = {
  enabled: boolean;
  type: string;
  value: boolean;
};

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponseBoolean$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponseBoolean$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponseBoolean
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData5Type$outboundSchema,
    value: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponseBoolean$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseBoolean$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponseBoolean$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseBoolean$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponseBoolean$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseBoolean$Outbound` instead. */
  export type Outbound = GetEvalsGuardrailConfigEvalsResponseBoolean$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponseBooleanToJSON(
  getEvalsGuardrailConfigEvalsResponseBoolean:
    GetEvalsGuardrailConfigEvalsResponseBoolean,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponseBoolean$outboundSchema.parse(
      getEvalsGuardrailConfigEvalsResponseBoolean,
    ),
  );
}

export function getEvalsGuardrailConfigEvalsResponseBooleanFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponseBoolean,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponseBoolean$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponseBoolean' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsResponseGuardrailConfig$inboundSchema: z.ZodType<
  GetEvalsDataEvalsResponseGuardrailConfig,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetEvalsGuardrailConfigEvalsResponseNumber$inboundSchema),
  z.lazy(() => GetEvalsGuardrailConfigEvalsResponseBoolean$inboundSchema),
]);

/** @internal */
export type GetEvalsDataEvalsResponseGuardrailConfig$Outbound =
  | GetEvalsGuardrailConfigEvalsResponseNumber$Outbound
  | GetEvalsGuardrailConfigEvalsResponseBoolean$Outbound;

/** @internal */
export const GetEvalsDataEvalsResponseGuardrailConfig$outboundSchema: z.ZodType<
  GetEvalsDataEvalsResponseGuardrailConfig$Outbound,
  z.ZodTypeDef,
  GetEvalsDataEvalsResponseGuardrailConfig
> = z.union([
  z.lazy(() => GetEvalsGuardrailConfigEvalsResponseNumber$outboundSchema),
  z.lazy(() => GetEvalsGuardrailConfigEvalsResponseBoolean$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsResponseGuardrailConfig$ {
  /** @deprecated use `GetEvalsDataEvalsResponseGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsDataEvalsResponseGuardrailConfig$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponseGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsDataEvalsResponseGuardrailConfig$outboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponseGuardrailConfig$Outbound` instead. */
  export type Outbound = GetEvalsDataEvalsResponseGuardrailConfig$Outbound;
}

export function getEvalsDataEvalsResponseGuardrailConfigToJSON(
  getEvalsDataEvalsResponseGuardrailConfig:
    GetEvalsDataEvalsResponseGuardrailConfig,
): string {
  return JSON.stringify(
    GetEvalsDataEvalsResponseGuardrailConfig$outboundSchema.parse(
      getEvalsDataEvalsResponseGuardrailConfig,
    ),
  );
}

export function getEvalsDataEvalsResponseGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsDataEvalsResponseGuardrailConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsDataEvalsResponseGuardrailConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetEvalsDataEvalsResponseGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsResponse200Type$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsDataEvalsResponse200Type
> = z.nativeEnum(GetEvalsDataEvalsResponse200Type);

/** @internal */
export const GetEvalsDataEvalsResponse200Type$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsDataEvalsResponse200Type
> = GetEvalsDataEvalsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsResponse200Type$ {
  /** @deprecated use `GetEvalsDataEvalsResponse200Type$inboundSchema` instead. */
  export const inboundSchema = GetEvalsDataEvalsResponse200Type$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponse200Type$outboundSchema` instead. */
  export const outboundSchema = GetEvalsDataEvalsResponse200Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData535Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData535Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData535Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData535Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData535Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData535Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData535Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData535Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData535Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData535Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData535Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams35$inboundSchema: z.ZodType<
  GetEvalsFunctionParams35,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData535Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams35$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams35$outboundSchema: z.ZodType<
  GetEvalsFunctionParams35$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams35
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData535Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams35$ {
  /** @deprecated use `GetEvalsFunctionParams35$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams35$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams35$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams35$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams35$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams35$Outbound;
}

export function getEvalsFunctionParams35ToJSON(
  getEvalsFunctionParams35: GetEvalsFunctionParams35,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams35$outboundSchema.parse(getEvalsFunctionParams35),
  );
}

export function getEvalsFunctionParams35FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams35, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams35$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams35' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData534Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData534Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData534Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData534Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData534Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData534Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData534Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData534Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData534Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData534Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData534Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams34$inboundSchema: z.ZodType<
  GetEvalsFunctionParams34,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData534Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams34$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams34$outboundSchema: z.ZodType<
  GetEvalsFunctionParams34$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams34
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData534Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams34$ {
  /** @deprecated use `GetEvalsFunctionParams34$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams34$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams34$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams34$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams34$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams34$Outbound;
}

export function getEvalsFunctionParams34ToJSON(
  getEvalsFunctionParams34: GetEvalsFunctionParams34,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams34$outboundSchema.parse(getEvalsFunctionParams34),
  );
}

export function getEvalsFunctionParams34FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams34, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams34$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams34' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData533Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData533Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData533Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData533Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData533Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData533Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData533Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData533Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData533Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData533Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData533Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams33$inboundSchema: z.ZodType<
  GetEvalsFunctionParams33,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData533Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams33$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams33$outboundSchema: z.ZodType<
  GetEvalsFunctionParams33$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams33
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData533Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams33$ {
  /** @deprecated use `GetEvalsFunctionParams33$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams33$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams33$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams33$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams33$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams33$Outbound;
}

export function getEvalsFunctionParams33ToJSON(
  getEvalsFunctionParams33: GetEvalsFunctionParams33,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams33$outboundSchema.parse(getEvalsFunctionParams33),
  );
}

export function getEvalsFunctionParams33FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams33, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams33$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams33' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData532Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData532Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData532Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData532Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData532Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData532Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData532Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData532Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData532Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData532Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData532Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams32$inboundSchema: z.ZodType<
  GetEvalsFunctionParams32,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData532Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams32$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams32$outboundSchema: z.ZodType<
  GetEvalsFunctionParams32$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams32
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData532Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams32$ {
  /** @deprecated use `GetEvalsFunctionParams32$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams32$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams32$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams32$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams32$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams32$Outbound;
}

export function getEvalsFunctionParams32ToJSON(
  getEvalsFunctionParams32: GetEvalsFunctionParams32,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams32$outboundSchema.parse(getEvalsFunctionParams32),
  );
}

export function getEvalsFunctionParams32FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams32, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams32$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams32' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData531Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData531Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData531Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData531Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData531Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData531Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData531Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData531Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData531Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData531Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData531Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams31$inboundSchema: z.ZodType<
  GetEvalsFunctionParams31,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData531Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams31$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams31$outboundSchema: z.ZodType<
  GetEvalsFunctionParams31$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams31
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData531Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams31$ {
  /** @deprecated use `GetEvalsFunctionParams31$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams31$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams31$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams31$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams31$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams31$Outbound;
}

export function getEvalsFunctionParams31ToJSON(
  getEvalsFunctionParams31: GetEvalsFunctionParams31,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams31$outboundSchema.parse(getEvalsFunctionParams31),
  );
}

export function getEvalsFunctionParams31FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams31, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams31$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams31' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData530Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData530Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData530Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData530Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData530Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData530Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData530Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData530Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData530Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData530Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData530Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams30$inboundSchema: z.ZodType<
  GetEvalsFunctionParams30,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData530Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams30$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams30$outboundSchema: z.ZodType<
  GetEvalsFunctionParams30$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams30
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData530Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams30$ {
  /** @deprecated use `GetEvalsFunctionParams30$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams30$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams30$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams30$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams30$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams30$Outbound;
}

export function getEvalsFunctionParams30ToJSON(
  getEvalsFunctionParams30: GetEvalsFunctionParams30,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams30$outboundSchema.parse(getEvalsFunctionParams30),
  );
}

export function getEvalsFunctionParams30FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams30, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams30$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams30' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData529Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData529Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData529Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData529Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData529Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData529Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData529Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData529Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData529Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData529Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData529Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams29$inboundSchema: z.ZodType<
  GetEvalsFunctionParams29,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData529Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams29$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams29$outboundSchema: z.ZodType<
  GetEvalsFunctionParams29$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams29
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData529Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams29$ {
  /** @deprecated use `GetEvalsFunctionParams29$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams29$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams29$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams29$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams29$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams29$Outbound;
}

export function getEvalsFunctionParams29ToJSON(
  getEvalsFunctionParams29: GetEvalsFunctionParams29,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams29$outboundSchema.parse(getEvalsFunctionParams29),
  );
}

export function getEvalsFunctionParams29FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams29, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams29$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams29' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData528Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData528Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData528Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData528Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData528Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData528Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData528Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData528Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData528Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData528Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData528Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams28$inboundSchema: z.ZodType<
  GetEvalsFunctionParams28,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData528Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams28$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams28$outboundSchema: z.ZodType<
  GetEvalsFunctionParams28$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams28
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData528Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams28$ {
  /** @deprecated use `GetEvalsFunctionParams28$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams28$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams28$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams28$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams28$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams28$Outbound;
}

export function getEvalsFunctionParams28ToJSON(
  getEvalsFunctionParams28: GetEvalsFunctionParams28,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams28$outboundSchema.parse(getEvalsFunctionParams28),
  );
}

export function getEvalsFunctionParams28FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams28, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams28$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams28' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData527Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData527Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData527Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData527Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData527Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData527Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData527Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData527Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData527Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData527Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData527Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams27$inboundSchema: z.ZodType<
  GetEvalsFunctionParams27,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData527Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams27$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams27$outboundSchema: z.ZodType<
  GetEvalsFunctionParams27$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams27
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData527Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams27$ {
  /** @deprecated use `GetEvalsFunctionParams27$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams27$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams27$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams27$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams27$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams27$Outbound;
}

export function getEvalsFunctionParams27ToJSON(
  getEvalsFunctionParams27: GetEvalsFunctionParams27,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams27$outboundSchema.parse(getEvalsFunctionParams27),
  );
}

export function getEvalsFunctionParams27FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams27, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams27$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams27' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData526Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData526Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData526Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData526Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData526Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData526Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData526Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData526Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData526Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData526Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData526Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams26$inboundSchema: z.ZodType<
  GetEvalsFunctionParams26,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData526Type$inboundSchema,
  keywords: z.array(z.string()),
});

/** @internal */
export type GetEvalsFunctionParams26$Outbound = {
  type: string;
  keywords: Array<string>;
};

/** @internal */
export const GetEvalsFunctionParams26$outboundSchema: z.ZodType<
  GetEvalsFunctionParams26$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams26
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData526Type$outboundSchema,
  keywords: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams26$ {
  /** @deprecated use `GetEvalsFunctionParams26$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams26$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams26$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams26$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams26$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams26$Outbound;
}

export function getEvalsFunctionParams26ToJSON(
  getEvalsFunctionParams26: GetEvalsFunctionParams26,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams26$outboundSchema.parse(getEvalsFunctionParams26),
  );
}

export function getEvalsFunctionParams26FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams26, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams26$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams26' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData525Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData525Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData525Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData525Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData525Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData525Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData525Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData525Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData525Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData525Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData525Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams25$inboundSchema: z.ZodType<
  GetEvalsFunctionParams25,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData525Type$inboundSchema,
  topic: z.string(),
});

/** @internal */
export type GetEvalsFunctionParams25$Outbound = {
  type: string;
  topic: string;
};

/** @internal */
export const GetEvalsFunctionParams25$outboundSchema: z.ZodType<
  GetEvalsFunctionParams25$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams25
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData525Type$outboundSchema,
  topic: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams25$ {
  /** @deprecated use `GetEvalsFunctionParams25$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams25$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams25$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams25$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams25$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams25$Outbound;
}

export function getEvalsFunctionParams25ToJSON(
  getEvalsFunctionParams25: GetEvalsFunctionParams25,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams25$outboundSchema.parse(getEvalsFunctionParams25),
  );
}

export function getEvalsFunctionParams25FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams25, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams25$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams25' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams24$inboundSchema: z.ZodType<
  GetEvalsFunctionParams24,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams24$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams24$outboundSchema: z.ZodType<
  GetEvalsFunctionParams24$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams24
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData524Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams24$ {
  /** @deprecated use `GetEvalsFunctionParams24$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams24$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams24$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams24$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams24$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams24$Outbound;
}

export function getEvalsFunctionParams24ToJSON(
  getEvalsFunctionParams24: GetEvalsFunctionParams24,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams24$outboundSchema.parse(getEvalsFunctionParams24),
  );
}

export function getEvalsFunctionParams24FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams24, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams24$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams24' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams23$inboundSchema: z.ZodType<
  GetEvalsFunctionParams23,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams23$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams23$outboundSchema: z.ZodType<
  GetEvalsFunctionParams23$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams23
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData523Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams23$ {
  /** @deprecated use `GetEvalsFunctionParams23$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams23$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams23$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams23$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams23$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams23$Outbound;
}

export function getEvalsFunctionParams23ToJSON(
  getEvalsFunctionParams23: GetEvalsFunctionParams23,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams23$outboundSchema.parse(getEvalsFunctionParams23),
  );
}

export function getEvalsFunctionParams23FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams23, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams23$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams23' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams22$inboundSchema: z.ZodType<
  GetEvalsFunctionParams22,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams22$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams22$outboundSchema: z.ZodType<
  GetEvalsFunctionParams22$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams22
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData522Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams22$ {
  /** @deprecated use `GetEvalsFunctionParams22$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams22$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams22$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams22$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams22$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams22$Outbound;
}

export function getEvalsFunctionParams22ToJSON(
  getEvalsFunctionParams22: GetEvalsFunctionParams22,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams22$outboundSchema.parse(getEvalsFunctionParams22),
  );
}

export function getEvalsFunctionParams22FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams22, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams22$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams22' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams21$inboundSchema: z.ZodType<
  GetEvalsFunctionParams21,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams21$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams21$outboundSchema: z.ZodType<
  GetEvalsFunctionParams21$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams21
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData521Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams21$ {
  /** @deprecated use `GetEvalsFunctionParams21$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams21$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams21$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams21$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams21$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams21$Outbound;
}

export function getEvalsFunctionParams21ToJSON(
  getEvalsFunctionParams21: GetEvalsFunctionParams21,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams21$outboundSchema.parse(getEvalsFunctionParams21),
  );
}

export function getEvalsFunctionParams21FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams21, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams21$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams21' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams20$inboundSchema: z.ZodType<
  GetEvalsFunctionParams20,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams20$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams20$outboundSchema: z.ZodType<
  GetEvalsFunctionParams20$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams20
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData520Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams20$ {
  /** @deprecated use `GetEvalsFunctionParams20$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams20$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams20$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams20$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams20$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams20$Outbound;
}

export function getEvalsFunctionParams20ToJSON(
  getEvalsFunctionParams20: GetEvalsFunctionParams20,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams20$outboundSchema.parse(getEvalsFunctionParams20),
  );
}

export function getEvalsFunctionParams20FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams20, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams20$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams20' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams19$inboundSchema: z.ZodType<
  GetEvalsFunctionParams19,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams19$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams19$outboundSchema: z.ZodType<
  GetEvalsFunctionParams19$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams19
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData519Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams19$ {
  /** @deprecated use `GetEvalsFunctionParams19$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams19$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams19$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams19$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams19$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams19$Outbound;
}

export function getEvalsFunctionParams19ToJSON(
  getEvalsFunctionParams19: GetEvalsFunctionParams19,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams19$outboundSchema.parse(getEvalsFunctionParams19),
  );
}

export function getEvalsFunctionParams19FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams19, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams19$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams19' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams18$inboundSchema: z.ZodType<
  GetEvalsFunctionParams18,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams18$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams18$outboundSchema: z.ZodType<
  GetEvalsFunctionParams18$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams18
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData518Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams18$ {
  /** @deprecated use `GetEvalsFunctionParams18$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams18$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams18$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams18$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams18$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams18$Outbound;
}

export function getEvalsFunctionParams18ToJSON(
  getEvalsFunctionParams18: GetEvalsFunctionParams18,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams18$outboundSchema.parse(getEvalsFunctionParams18),
  );
}

export function getEvalsFunctionParams18FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams18, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams18$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams18' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams17$inboundSchema: z.ZodType<
  GetEvalsFunctionParams17,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams17$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams17$outboundSchema: z.ZodType<
  GetEvalsFunctionParams17$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams17
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData517Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams17$ {
  /** @deprecated use `GetEvalsFunctionParams17$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams17$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams17$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams17$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams17$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams17$Outbound;
}

export function getEvalsFunctionParams17ToJSON(
  getEvalsFunctionParams17: GetEvalsFunctionParams17,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams17$outboundSchema.parse(getEvalsFunctionParams17),
  );
}

export function getEvalsFunctionParams17FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams17, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams17$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams17' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams16$inboundSchema: z.ZodType<
  GetEvalsFunctionParams16,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams16$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams16$outboundSchema: z.ZodType<
  GetEvalsFunctionParams16$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams16
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData516Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams16$ {
  /** @deprecated use `GetEvalsFunctionParams16$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams16$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams16$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams16$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams16$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams16$Outbound;
}

export function getEvalsFunctionParams16ToJSON(
  getEvalsFunctionParams16: GetEvalsFunctionParams16,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams16$outboundSchema.parse(getEvalsFunctionParams16),
  );
}

export function getEvalsFunctionParams16FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams16, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams16$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams16' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams15$inboundSchema: z.ZodType<
  GetEvalsFunctionParams15,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$inboundSchema,
  pattern: z.string(),
});

/** @internal */
export type GetEvalsFunctionParams15$Outbound = {
  type: string;
  pattern: string;
};

/** @internal */
export const GetEvalsFunctionParams15$outboundSchema: z.ZodType<
  GetEvalsFunctionParams15$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams15
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData515Type$outboundSchema,
  pattern: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams15$ {
  /** @deprecated use `GetEvalsFunctionParams15$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams15$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams15$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams15$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams15$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams15$Outbound;
}

export function getEvalsFunctionParams15ToJSON(
  getEvalsFunctionParams15: GetEvalsFunctionParams15,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams15$outboundSchema.parse(getEvalsFunctionParams15),
  );
}

export function getEvalsFunctionParams15FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams15, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams15$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams15' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams14$inboundSchema: z.ZodType<
  GetEvalsFunctionParams14,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams14$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams14$outboundSchema: z.ZodType<
  GetEvalsFunctionParams14$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams14
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData514Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams14$ {
  /** @deprecated use `GetEvalsFunctionParams14$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams14$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams14$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams14$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams14$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams14$Outbound;
}

export function getEvalsFunctionParams14ToJSON(
  getEvalsFunctionParams14: GetEvalsFunctionParams14,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams14$outboundSchema.parse(getEvalsFunctionParams14),
  );
}

export function getEvalsFunctionParams14FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams14, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams14$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams14' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams13$inboundSchema: z.ZodType<
  GetEvalsFunctionParams13,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$inboundSchema,
  value: z.number(),
});

/** @internal */
export type GetEvalsFunctionParams13$Outbound = {
  type: string;
  value: number;
};

/** @internal */
export const GetEvalsFunctionParams13$outboundSchema: z.ZodType<
  GetEvalsFunctionParams13$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams13
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData513Type$outboundSchema,
  value: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams13$ {
  /** @deprecated use `GetEvalsFunctionParams13$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams13$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams13$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams13$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams13$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams13$Outbound;
}

export function getEvalsFunctionParams13ToJSON(
  getEvalsFunctionParams13: GetEvalsFunctionParams13,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams13$outboundSchema.parse(getEvalsFunctionParams13),
  );
}

export function getEvalsFunctionParams13FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams13, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams13$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams13' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams12$inboundSchema: z.ZodType<
  GetEvalsFunctionParams12,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$inboundSchema,
  min: z.number(),
  max: z.number(),
});

/** @internal */
export type GetEvalsFunctionParams12$Outbound = {
  type: string;
  min: number;
  max: number;
};

/** @internal */
export const GetEvalsFunctionParams12$outboundSchema: z.ZodType<
  GetEvalsFunctionParams12$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams12
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData512Type$outboundSchema,
  min: z.number(),
  max: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams12$ {
  /** @deprecated use `GetEvalsFunctionParams12$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams12$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams12$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams12$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams12$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams12$Outbound;
}

export function getEvalsFunctionParams12ToJSON(
  getEvalsFunctionParams12: GetEvalsFunctionParams12,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams12$outboundSchema.parse(getEvalsFunctionParams12),
  );
}

export function getEvalsFunctionParams12FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams12, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams12$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams12' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams11$inboundSchema: z.ZodType<
  GetEvalsFunctionParams11,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$inboundSchema,
  value: z.number(),
});

/** @internal */
export type GetEvalsFunctionParams11$Outbound = {
  type: string;
  value: number;
};

/** @internal */
export const GetEvalsFunctionParams11$outboundSchema: z.ZodType<
  GetEvalsFunctionParams11$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams11
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData511Type$outboundSchema,
  value: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams11$ {
  /** @deprecated use `GetEvalsFunctionParams11$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams11$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams11$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams11$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams11$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams11$Outbound;
}

export function getEvalsFunctionParams11ToJSON(
  getEvalsFunctionParams11: GetEvalsFunctionParams11,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams11$outboundSchema.parse(getEvalsFunctionParams11),
  );
}

export function getEvalsFunctionParams11FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams11, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams11$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams11' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams10$inboundSchema: z.ZodType<
  GetEvalsFunctionParams10,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams10$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams10$outboundSchema: z.ZodType<
  GetEvalsFunctionParams10$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams10
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData510Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams10$ {
  /** @deprecated use `GetEvalsFunctionParams10$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams10$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams10$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams10$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams10$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams10$Outbound;
}

export function getEvalsFunctionParams10ToJSON(
  getEvalsFunctionParams10: GetEvalsFunctionParams10,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams10$outboundSchema.parse(getEvalsFunctionParams10),
  );
}

export function getEvalsFunctionParams10FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams10, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams10$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams10' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams9$inboundSchema: z.ZodType<
  GetEvalsFunctionParams9,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$inboundSchema,
  value: z.string(),
});

/** @internal */
export type GetEvalsFunctionParams9$Outbound = {
  type: string;
  value: string;
};

/** @internal */
export const GetEvalsFunctionParams9$outboundSchema: z.ZodType<
  GetEvalsFunctionParams9$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams9
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData5Type$outboundSchema,
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams9$ {
  /** @deprecated use `GetEvalsFunctionParams9$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams9$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams9$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams9$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams9$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams9$Outbound;
}

export function getEvalsFunctionParams9ToJSON(
  getEvalsFunctionParams9: GetEvalsFunctionParams9,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams9$outboundSchema.parse(getEvalsFunctionParams9),
  );
}

export function getEvalsFunctionParams9FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams9, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams9$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams9' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams8$inboundSchema: z.ZodType<
  GetEvalsFunctionParams8,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema,
  value: z.string(),
});

/** @internal */
export type GetEvalsFunctionParams8$Outbound = {
  type: string;
  value: string;
};

/** @internal */
export const GetEvalsFunctionParams8$outboundSchema: z.ZodType<
  GetEvalsFunctionParams8$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams8
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyDataType$outboundSchema,
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams8$ {
  /** @deprecated use `GetEvalsFunctionParams8$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams8$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams8$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams8$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams8$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams8$Outbound;
}

export function getEvalsFunctionParams8ToJSON(
  getEvalsFunctionParams8: GetEvalsFunctionParams8,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams8$outboundSchema.parse(getEvalsFunctionParams8),
  );
}

export function getEvalsFunctionParams8FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams8, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams8$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams8' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams7$inboundSchema: z.ZodType<
  GetEvalsFunctionParams7,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams7$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams7$outboundSchema: z.ZodType<
  GetEvalsFunctionParams7$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams7
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams7$ {
  /** @deprecated use `GetEvalsFunctionParams7$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams7$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams7$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams7$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams7$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams7$Outbound;
}

export function getEvalsFunctionParams7ToJSON(
  getEvalsFunctionParams7: GetEvalsFunctionParams7,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams7$outboundSchema.parse(getEvalsFunctionParams7),
  );
}

export function getEvalsFunctionParams7FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams7, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams7$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams7' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType
  > = z.nativeEnum(GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType);

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType
  > = GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams6$inboundSchema: z.ZodType<
  GetEvalsFunctionParams6,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams6$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams6$outboundSchema: z.ZodType<
  GetEvalsFunctionParams6$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams6
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams6$ {
  /** @deprecated use `GetEvalsFunctionParams6$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams6$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams6$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams6$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams6$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams6$Outbound;
}

export function getEvalsFunctionParams6ToJSON(
  getEvalsFunctionParams6: GetEvalsFunctionParams6,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams6$outboundSchema.parse(getEvalsFunctionParams6),
  );
}

export function getEvalsFunctionParams6FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams6, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams6$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams6' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof GetEvalsFunctionParamsEvalsResponse200Type> = z
    .nativeEnum(GetEvalsFunctionParamsEvalsResponse200Type);

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof GetEvalsFunctionParamsEvalsResponse200Type> =
    GetEvalsFunctionParamsEvalsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams5$inboundSchema: z.ZodType<
  GetEvalsFunctionParams5,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetEvalsFunctionParamsEvalsResponse200Type$inboundSchema,
});

/** @internal */
export type GetEvalsFunctionParams5$Outbound = {
  type: string;
};

/** @internal */
export const GetEvalsFunctionParams5$outboundSchema: z.ZodType<
  GetEvalsFunctionParams5$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams5
> = z.object({
  type: GetEvalsFunctionParamsEvalsResponse200Type$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams5$ {
  /** @deprecated use `GetEvalsFunctionParams5$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams5$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams5$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams5$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams5$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams5$Outbound;
}

export function getEvalsFunctionParams5ToJSON(
  getEvalsFunctionParams5: GetEvalsFunctionParams5,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams5$outboundSchema.parse(getEvalsFunctionParams5),
  );
}

export function getEvalsFunctionParams5FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams5, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams5$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams5' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof GetEvalsFunctionParamsEvalsResponseType> = z
    .nativeEnum(GetEvalsFunctionParamsEvalsResponseType);

/** @internal */
export const GetEvalsFunctionParamsEvalsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof GetEvalsFunctionParamsEvalsResponseType> =
    GetEvalsFunctionParamsEvalsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponseType$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponseType$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponseType$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams4$inboundSchema: z.ZodType<
  GetEvalsFunctionParams4,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetEvalsFunctionParamsEvalsResponseType$inboundSchema,
  keywords: z.array(z.string()),
});

/** @internal */
export type GetEvalsFunctionParams4$Outbound = {
  type: string;
  keywords: Array<string>;
};

/** @internal */
export const GetEvalsFunctionParams4$outboundSchema: z.ZodType<
  GetEvalsFunctionParams4$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams4
> = z.object({
  type: GetEvalsFunctionParamsEvalsResponseType$outboundSchema,
  keywords: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams4$ {
  /** @deprecated use `GetEvalsFunctionParams4$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams4$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams4$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams4$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams4$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams4$Outbound;
}

export function getEvalsFunctionParams4ToJSON(
  getEvalsFunctionParams4: GetEvalsFunctionParams4,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams4$outboundSchema.parse(getEvalsFunctionParams4),
  );
}

export function getEvalsFunctionParams4FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams4, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams4$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams4' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsType$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsFunctionParamsEvalsType
> = z.nativeEnum(GetEvalsFunctionParamsEvalsType);

/** @internal */
export const GetEvalsFunctionParamsEvalsType$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsFunctionParamsEvalsType
> = GetEvalsFunctionParamsEvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsType$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsType$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParamsEvalsType$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsType$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParamsEvalsType$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams3$inboundSchema: z.ZodType<
  GetEvalsFunctionParams3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetEvalsFunctionParamsEvalsType$inboundSchema,
  keywords: z.array(z.string()),
});

/** @internal */
export type GetEvalsFunctionParams3$Outbound = {
  type: string;
  keywords: Array<string>;
};

/** @internal */
export const GetEvalsFunctionParams3$outboundSchema: z.ZodType<
  GetEvalsFunctionParams3$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams3
> = z.object({
  type: GetEvalsFunctionParamsEvalsType$outboundSchema,
  keywords: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams3$ {
  /** @deprecated use `GetEvalsFunctionParams3$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams3$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams3$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams3$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams3$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams3$Outbound;
}

export function getEvalsFunctionParams3ToJSON(
  getEvalsFunctionParams3: GetEvalsFunctionParams3,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams3$outboundSchema.parse(getEvalsFunctionParams3),
  );
}

export function getEvalsFunctionParams3FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams3' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsType$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsFunctionParamsType
> = z.nativeEnum(GetEvalsFunctionParamsType);

/** @internal */
export const GetEvalsFunctionParamsType$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsFunctionParamsType
> = GetEvalsFunctionParamsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsType$ {
  /** @deprecated use `GetEvalsFunctionParamsType$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParamsType$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsType$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParamsType$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams2$inboundSchema: z.ZodType<
  GetEvalsFunctionParams2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetEvalsFunctionParamsType$inboundSchema,
  keywords: z.array(z.string()),
});

/** @internal */
export type GetEvalsFunctionParams2$Outbound = {
  type: string;
  keywords: Array<string>;
};

/** @internal */
export const GetEvalsFunctionParams2$outboundSchema: z.ZodType<
  GetEvalsFunctionParams2$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams2
> = z.object({
  type: GetEvalsFunctionParamsType$outboundSchema,
  keywords: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams2$ {
  /** @deprecated use `GetEvalsFunctionParams2$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams2$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams2$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams2$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams2$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams2$Outbound;
}

export function getEvalsFunctionParams2ToJSON(
  getEvalsFunctionParams2: GetEvalsFunctionParams2,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams2$outboundSchema.parse(getEvalsFunctionParams2),
  );
}

export function getEvalsFunctionParams2FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams2' from JSON`,
  );
}

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData51Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData51Type
  > = z.nativeEnum(
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData51Type,
  );

/** @internal */
export const GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData51Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData51Type
  > =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData51Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData51Type$ {
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData51Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData51Type$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData51Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData51Type$outboundSchema;
}

/** @internal */
export const GetEvalsFunctionParams1$inboundSchema: z.ZodType<
  GetEvalsFunctionParams1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData51Type$inboundSchema,
  value: z.string(),
});

/** @internal */
export type GetEvalsFunctionParams1$Outbound = {
  type: string;
  value: string;
};

/** @internal */
export const GetEvalsFunctionParams1$outboundSchema: z.ZodType<
  GetEvalsFunctionParams1$Outbound,
  z.ZodTypeDef,
  GetEvalsFunctionParams1
> = z.object({
  type:
    GetEvalsFunctionParamsEvalsResponse200ApplicationJSONResponseBodyData51Type$outboundSchema,
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsFunctionParams1$ {
  /** @deprecated use `GetEvalsFunctionParams1$inboundSchema` instead. */
  export const inboundSchema = GetEvalsFunctionParams1$inboundSchema;
  /** @deprecated use `GetEvalsFunctionParams1$outboundSchema` instead. */
  export const outboundSchema = GetEvalsFunctionParams1$outboundSchema;
  /** @deprecated use `GetEvalsFunctionParams1$Outbound` instead. */
  export type Outbound = GetEvalsFunctionParams1$Outbound;
}

export function getEvalsFunctionParams1ToJSON(
  getEvalsFunctionParams1: GetEvalsFunctionParams1,
): string {
  return JSON.stringify(
    GetEvalsFunctionParams1$outboundSchema.parse(getEvalsFunctionParams1),
  );
}

export function getEvalsFunctionParams1FromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsFunctionParams1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsFunctionParams1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsFunctionParams1' from JSON`,
  );
}

/** @internal */
export const DataFunctionParams$inboundSchema: z.ZodType<
  DataFunctionParams,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetEvalsFunctionParams12$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams1$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams2$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams3$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams4$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams8$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams9$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams11$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams13$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams15$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams25$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams26$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams5$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams6$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams7$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams10$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams14$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams16$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams17$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams18$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams19$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams20$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams21$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams22$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams23$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams24$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams27$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams28$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams29$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams30$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams31$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams32$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams33$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams34$inboundSchema),
  z.lazy(() => GetEvalsFunctionParams35$inboundSchema),
]);

/** @internal */
export type DataFunctionParams$Outbound =
  | GetEvalsFunctionParams12$Outbound
  | GetEvalsFunctionParams1$Outbound
  | GetEvalsFunctionParams2$Outbound
  | GetEvalsFunctionParams3$Outbound
  | GetEvalsFunctionParams4$Outbound
  | GetEvalsFunctionParams8$Outbound
  | GetEvalsFunctionParams9$Outbound
  | GetEvalsFunctionParams11$Outbound
  | GetEvalsFunctionParams13$Outbound
  | GetEvalsFunctionParams15$Outbound
  | GetEvalsFunctionParams25$Outbound
  | GetEvalsFunctionParams26$Outbound
  | GetEvalsFunctionParams5$Outbound
  | GetEvalsFunctionParams6$Outbound
  | GetEvalsFunctionParams7$Outbound
  | GetEvalsFunctionParams10$Outbound
  | GetEvalsFunctionParams14$Outbound
  | GetEvalsFunctionParams16$Outbound
  | GetEvalsFunctionParams17$Outbound
  | GetEvalsFunctionParams18$Outbound
  | GetEvalsFunctionParams19$Outbound
  | GetEvalsFunctionParams20$Outbound
  | GetEvalsFunctionParams21$Outbound
  | GetEvalsFunctionParams22$Outbound
  | GetEvalsFunctionParams23$Outbound
  | GetEvalsFunctionParams24$Outbound
  | GetEvalsFunctionParams27$Outbound
  | GetEvalsFunctionParams28$Outbound
  | GetEvalsFunctionParams29$Outbound
  | GetEvalsFunctionParams30$Outbound
  | GetEvalsFunctionParams31$Outbound
  | GetEvalsFunctionParams32$Outbound
  | GetEvalsFunctionParams33$Outbound
  | GetEvalsFunctionParams34$Outbound
  | GetEvalsFunctionParams35$Outbound;

/** @internal */
export const DataFunctionParams$outboundSchema: z.ZodType<
  DataFunctionParams$Outbound,
  z.ZodTypeDef,
  DataFunctionParams
> = z.union([
  z.lazy(() => GetEvalsFunctionParams12$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams1$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams2$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams3$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams4$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams8$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams9$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams11$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams13$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams15$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams25$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams26$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams5$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams6$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams7$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams10$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams14$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams16$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams17$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams18$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams19$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams20$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams21$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams22$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams23$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams24$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams27$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams28$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams29$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams30$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams31$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams32$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams33$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams34$outboundSchema),
  z.lazy(() => GetEvalsFunctionParams35$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataFunctionParams$ {
  /** @deprecated use `DataFunctionParams$inboundSchema` instead. */
  export const inboundSchema = DataFunctionParams$inboundSchema;
  /** @deprecated use `DataFunctionParams$outboundSchema` instead. */
  export const outboundSchema = DataFunctionParams$outboundSchema;
  /** @deprecated use `DataFunctionParams$Outbound` instead. */
  export type Outbound = DataFunctionParams$Outbound;
}

export function dataFunctionParamsToJSON(
  dataFunctionParams: DataFunctionParams,
): string {
  return JSON.stringify(
    DataFunctionParams$outboundSchema.parse(dataFunctionParams),
  );
}

export function dataFunctionParamsFromJSON(
  jsonString: string,
): SafeParseResult<DataFunctionParams, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DataFunctionParams$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DataFunctionParams' from JSON`,
  );
}

/** @internal */
export const DataFunction$inboundSchema: z.ZodType<
  DataFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  description: z.string(),
  created: z.string().default("2025-09-22T11:53:06.348Z"),
  updated: z.string().default("2025-09-22T11:53:06.348Z"),
  guardrail_config: z.union([
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponseNumber$inboundSchema),
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponseBoolean$inboundSchema),
  ]).optional(),
  type: GetEvalsDataEvalsResponse200Type$inboundSchema,
  function_params: z.union([
    z.lazy(() => GetEvalsFunctionParams12$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams1$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams2$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams3$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams4$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams8$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams9$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams11$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams13$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams15$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams25$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams26$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams5$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams6$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams7$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams10$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams14$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams16$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams17$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams18$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams19$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams20$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams21$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams22$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams23$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams24$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams27$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams28$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams29$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams30$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams31$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams32$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams33$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams34$inboundSchema),
    z.lazy(() => GetEvalsFunctionParams35$inboundSchema),
  ]),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "guardrail_config": "guardrailConfig",
    "function_params": "functionParams",
  });
});

/** @internal */
export type DataFunction$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | GetEvalsGuardrailConfigEvalsResponseNumber$Outbound
    | GetEvalsGuardrailConfigEvalsResponseBoolean$Outbound
    | undefined;
  type: string;
  function_params:
    | GetEvalsFunctionParams12$Outbound
    | GetEvalsFunctionParams1$Outbound
    | GetEvalsFunctionParams2$Outbound
    | GetEvalsFunctionParams3$Outbound
    | GetEvalsFunctionParams4$Outbound
    | GetEvalsFunctionParams8$Outbound
    | GetEvalsFunctionParams9$Outbound
    | GetEvalsFunctionParams11$Outbound
    | GetEvalsFunctionParams13$Outbound
    | GetEvalsFunctionParams15$Outbound
    | GetEvalsFunctionParams25$Outbound
    | GetEvalsFunctionParams26$Outbound
    | GetEvalsFunctionParams5$Outbound
    | GetEvalsFunctionParams6$Outbound
    | GetEvalsFunctionParams7$Outbound
    | GetEvalsFunctionParams10$Outbound
    | GetEvalsFunctionParams14$Outbound
    | GetEvalsFunctionParams16$Outbound
    | GetEvalsFunctionParams17$Outbound
    | GetEvalsFunctionParams18$Outbound
    | GetEvalsFunctionParams19$Outbound
    | GetEvalsFunctionParams20$Outbound
    | GetEvalsFunctionParams21$Outbound
    | GetEvalsFunctionParams22$Outbound
    | GetEvalsFunctionParams23$Outbound
    | GetEvalsFunctionParams24$Outbound
    | GetEvalsFunctionParams27$Outbound
    | GetEvalsFunctionParams28$Outbound
    | GetEvalsFunctionParams29$Outbound
    | GetEvalsFunctionParams30$Outbound
    | GetEvalsFunctionParams31$Outbound
    | GetEvalsFunctionParams32$Outbound
    | GetEvalsFunctionParams33$Outbound
    | GetEvalsFunctionParams34$Outbound
    | GetEvalsFunctionParams35$Outbound;
  key: string;
};

/** @internal */
export const DataFunction$outboundSchema: z.ZodType<
  DataFunction$Outbound,
  z.ZodTypeDef,
  DataFunction
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-09-22T11:53:06.348Z"),
  updated: z.string().default("2025-09-22T11:53:06.348Z"),
  guardrailConfig: z.union([
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponseNumber$outboundSchema),
    z.lazy(() => GetEvalsGuardrailConfigEvalsResponseBoolean$outboundSchema),
  ]).optional(),
  type: GetEvalsDataEvalsResponse200Type$outboundSchema,
  functionParams: z.union([
    z.lazy(() => GetEvalsFunctionParams12$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams1$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams2$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams3$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams4$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams8$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams9$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams11$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams13$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams15$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams25$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams26$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams5$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams6$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams7$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams10$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams14$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams16$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams17$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams18$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams19$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams20$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams21$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams22$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams23$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams24$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams27$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams28$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams29$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams30$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams31$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams32$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams33$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams34$outboundSchema),
    z.lazy(() => GetEvalsFunctionParams35$outboundSchema),
  ]),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
    functionParams: "function_params",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataFunction$ {
  /** @deprecated use `DataFunction$inboundSchema` instead. */
  export const inboundSchema = DataFunction$inboundSchema;
  /** @deprecated use `DataFunction$outboundSchema` instead. */
  export const outboundSchema = DataFunction$outboundSchema;
  /** @deprecated use `DataFunction$Outbound` instead. */
  export type Outbound = DataFunction$Outbound;
}

export function dataFunctionToJSON(dataFunction: DataFunction): string {
  return JSON.stringify(DataFunction$outboundSchema.parse(dataFunction));
}

export function dataFunctionFromJSON(
  jsonString: string,
): SafeParseResult<DataFunction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DataFunction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DataFunction' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsOperator$inboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsOperator> = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsOperator,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsOperator$outboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsOperator> =
    GetEvalsGuardrailConfigEvalsOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsOperator$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsOperator$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsOperator$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsOperator$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsOperator$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsNumber$inboundSchema: z.ZodType<
  GetEvalsGuardrailConfigEvalsNumber,
  z.ZodTypeDef,
  unknown
> = z.object({
  enabled: z.boolean(),
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$inboundSchema,
  value: z.number(),
  operator: GetEvalsGuardrailConfigEvalsOperator$inboundSchema,
});

/** @internal */
export type GetEvalsGuardrailConfigEvalsNumber$Outbound = {
  enabled: boolean;
  type: string;
  value: number;
  operator: string;
};

/** @internal */
export const GetEvalsGuardrailConfigEvalsNumber$outboundSchema: z.ZodType<
  GetEvalsGuardrailConfigEvalsNumber$Outbound,
  z.ZodTypeDef,
  GetEvalsGuardrailConfigEvalsNumber
> = z.object({
  enabled: z.boolean(),
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataType$outboundSchema,
  value: z.number(),
  operator: GetEvalsGuardrailConfigEvalsOperator$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsNumber$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsNumber$inboundSchema` instead. */
  export const inboundSchema = GetEvalsGuardrailConfigEvalsNumber$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsNumber$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsNumber$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsNumber$Outbound` instead. */
  export type Outbound = GetEvalsGuardrailConfigEvalsNumber$Outbound;
}

export function getEvalsGuardrailConfigEvalsNumberToJSON(
  getEvalsGuardrailConfigEvalsNumber: GetEvalsGuardrailConfigEvalsNumber,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsNumber$outboundSchema.parse(
      getEvalsGuardrailConfigEvalsNumber,
    ),
  );
}

export function getEvalsGuardrailConfigEvalsNumberFromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsGuardrailConfigEvalsNumber, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsNumber$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsNumber' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsBoolean$inboundSchema: z.ZodType<
  GetEvalsGuardrailConfigEvalsBoolean,
  z.ZodTypeDef,
  unknown
> = z.object({
  enabled: z.boolean(),
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$inboundSchema,
  value: z.boolean(),
});

/** @internal */
export type GetEvalsGuardrailConfigEvalsBoolean$Outbound = {
  enabled: boolean;
  type: string;
  value: boolean;
};

/** @internal */
export const GetEvalsGuardrailConfigEvalsBoolean$outboundSchema: z.ZodType<
  GetEvalsGuardrailConfigEvalsBoolean$Outbound,
  z.ZodTypeDef,
  GetEvalsGuardrailConfigEvalsBoolean
> = z.object({
  enabled: z.boolean(),
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyType$outboundSchema,
  value: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsBoolean$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsBoolean$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsBoolean$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsBoolean$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsBoolean$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsBoolean$Outbound` instead. */
  export type Outbound = GetEvalsGuardrailConfigEvalsBoolean$Outbound;
}

export function getEvalsGuardrailConfigEvalsBooleanToJSON(
  getEvalsGuardrailConfigEvalsBoolean: GetEvalsGuardrailConfigEvalsBoolean,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsBoolean$outboundSchema.parse(
      getEvalsGuardrailConfigEvalsBoolean,
    ),
  );
}

export function getEvalsGuardrailConfigEvalsBooleanFromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsGuardrailConfigEvalsBoolean, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsBoolean$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsBoolean' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsGuardrailConfig$inboundSchema: z.ZodType<
  GetEvalsDataEvalsGuardrailConfig,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetEvalsGuardrailConfigEvalsNumber$inboundSchema),
  z.lazy(() => GetEvalsGuardrailConfigEvalsBoolean$inboundSchema),
]);

/** @internal */
export type GetEvalsDataEvalsGuardrailConfig$Outbound =
  | GetEvalsGuardrailConfigEvalsNumber$Outbound
  | GetEvalsGuardrailConfigEvalsBoolean$Outbound;

/** @internal */
export const GetEvalsDataEvalsGuardrailConfig$outboundSchema: z.ZodType<
  GetEvalsDataEvalsGuardrailConfig$Outbound,
  z.ZodTypeDef,
  GetEvalsDataEvalsGuardrailConfig
> = z.union([
  z.lazy(() => GetEvalsGuardrailConfigEvalsNumber$outboundSchema),
  z.lazy(() => GetEvalsGuardrailConfigEvalsBoolean$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsGuardrailConfig$ {
  /** @deprecated use `GetEvalsDataEvalsGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema = GetEvalsDataEvalsGuardrailConfig$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema = GetEvalsDataEvalsGuardrailConfig$outboundSchema;
  /** @deprecated use `GetEvalsDataEvalsGuardrailConfig$Outbound` instead. */
  export type Outbound = GetEvalsDataEvalsGuardrailConfig$Outbound;
}

export function getEvalsDataEvalsGuardrailConfigToJSON(
  getEvalsDataEvalsGuardrailConfig: GetEvalsDataEvalsGuardrailConfig,
): string {
  return JSON.stringify(
    GetEvalsDataEvalsGuardrailConfig$outboundSchema.parse(
      getEvalsDataEvalsGuardrailConfig,
    ),
  );
}

export function getEvalsDataEvalsGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsDataEvalsGuardrailConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsDataEvalsGuardrailConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsDataEvalsGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsResponseType$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsDataEvalsResponseType
> = z.nativeEnum(GetEvalsDataEvalsResponseType);

/** @internal */
export const GetEvalsDataEvalsResponseType$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsDataEvalsResponseType
> = GetEvalsDataEvalsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsResponseType$ {
  /** @deprecated use `GetEvalsDataEvalsResponseType$inboundSchema` instead. */
  export const inboundSchema = GetEvalsDataEvalsResponseType$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponseType$outboundSchema` instead. */
  export const outboundSchema = GetEvalsDataEvalsResponseType$outboundSchema;
}

/** @internal */
export const DataPython$inboundSchema: z.ZodType<
  DataPython,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  description: z.string(),
  created: z.string().default("2025-09-22T11:53:06.348Z"),
  updated: z.string().default("2025-09-22T11:53:06.348Z"),
  guardrail_config: z.union([
    z.lazy(() => GetEvalsGuardrailConfigEvalsNumber$inboundSchema),
    z.lazy(() => GetEvalsGuardrailConfigEvalsBoolean$inboundSchema),
  ]).optional(),
  code: z.string(),
  type: GetEvalsDataEvalsResponseType$inboundSchema,
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "guardrail_config": "guardrailConfig",
  });
});

/** @internal */
export type DataPython$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | GetEvalsGuardrailConfigEvalsNumber$Outbound
    | GetEvalsGuardrailConfigEvalsBoolean$Outbound
    | undefined;
  code: string;
  type: string;
  key: string;
};

/** @internal */
export const DataPython$outboundSchema: z.ZodType<
  DataPython$Outbound,
  z.ZodTypeDef,
  DataPython
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-09-22T11:53:06.348Z"),
  updated: z.string().default("2025-09-22T11:53:06.348Z"),
  guardrailConfig: z.union([
    z.lazy(() => GetEvalsGuardrailConfigEvalsNumber$outboundSchema),
    z.lazy(() => GetEvalsGuardrailConfigEvalsBoolean$outboundSchema),
  ]).optional(),
  code: z.string(),
  type: GetEvalsDataEvalsResponseType$outboundSchema,
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataPython$ {
  /** @deprecated use `DataPython$inboundSchema` instead. */
  export const inboundSchema = DataPython$inboundSchema;
  /** @deprecated use `DataPython$outboundSchema` instead. */
  export const outboundSchema = DataPython$outboundSchema;
  /** @deprecated use `DataPython$Outbound` instead. */
  export type Outbound = DataPython$Outbound;
}

export function dataPythonToJSON(dataPython: DataPython): string {
  return JSON.stringify(DataPython$outboundSchema.parse(dataPython));
}

export function dataPythonFromJSON(
  jsonString: string,
): SafeParseResult<DataPython, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DataPython$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DataPython' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType
  > = z.nativeEnum(GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType);

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType
  > = GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigOperator$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsGuardrailConfigOperator
> = z.nativeEnum(GetEvalsGuardrailConfigOperator);

/** @internal */
export const GetEvalsGuardrailConfigOperator$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsGuardrailConfigOperator
> = GetEvalsGuardrailConfigOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigOperator$ {
  /** @deprecated use `GetEvalsGuardrailConfigOperator$inboundSchema` instead. */
  export const inboundSchema = GetEvalsGuardrailConfigOperator$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigOperator$outboundSchema` instead. */
  export const outboundSchema = GetEvalsGuardrailConfigOperator$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigNumber$inboundSchema: z.ZodType<
  GetEvalsGuardrailConfigNumber,
  z.ZodTypeDef,
  unknown
> = z.object({
  enabled: z.boolean(),
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$inboundSchema,
  value: z.number(),
  operator: GetEvalsGuardrailConfigOperator$inboundSchema,
});

/** @internal */
export type GetEvalsGuardrailConfigNumber$Outbound = {
  enabled: boolean;
  type: string;
  value: number;
  operator: string;
};

/** @internal */
export const GetEvalsGuardrailConfigNumber$outboundSchema: z.ZodType<
  GetEvalsGuardrailConfigNumber$Outbound,
  z.ZodTypeDef,
  GetEvalsGuardrailConfigNumber
> = z.object({
  enabled: z.boolean(),
  type:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONType$outboundSchema,
  value: z.number(),
  operator: GetEvalsGuardrailConfigOperator$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigNumber$ {
  /** @deprecated use `GetEvalsGuardrailConfigNumber$inboundSchema` instead. */
  export const inboundSchema = GetEvalsGuardrailConfigNumber$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigNumber$outboundSchema` instead. */
  export const outboundSchema = GetEvalsGuardrailConfigNumber$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigNumber$Outbound` instead. */
  export type Outbound = GetEvalsGuardrailConfigNumber$Outbound;
}

export function getEvalsGuardrailConfigNumberToJSON(
  getEvalsGuardrailConfigNumber: GetEvalsGuardrailConfigNumber,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigNumber$outboundSchema.parse(
      getEvalsGuardrailConfigNumber,
    ),
  );
}

export function getEvalsGuardrailConfigNumberFromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsGuardrailConfigNumber, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsGuardrailConfigNumber$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigNumber' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200Type$inboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsResponse200Type> = z
    .nativeEnum(GetEvalsGuardrailConfigEvalsResponse200Type);

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200Type$outboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsResponse200Type> =
    GetEvalsGuardrailConfigEvalsResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200Type$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200Type$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200Type$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigBoolean$inboundSchema: z.ZodType<
  GetEvalsGuardrailConfigBoolean,
  z.ZodTypeDef,
  unknown
> = z.object({
  enabled: z.boolean(),
  type: GetEvalsGuardrailConfigEvalsResponse200Type$inboundSchema,
  value: z.boolean(),
});

/** @internal */
export type GetEvalsGuardrailConfigBoolean$Outbound = {
  enabled: boolean;
  type: string;
  value: boolean;
};

/** @internal */
export const GetEvalsGuardrailConfigBoolean$outboundSchema: z.ZodType<
  GetEvalsGuardrailConfigBoolean$Outbound,
  z.ZodTypeDef,
  GetEvalsGuardrailConfigBoolean
> = z.object({
  enabled: z.boolean(),
  type: GetEvalsGuardrailConfigEvalsResponse200Type$outboundSchema,
  value: z.boolean(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigBoolean$ {
  /** @deprecated use `GetEvalsGuardrailConfigBoolean$inboundSchema` instead. */
  export const inboundSchema = GetEvalsGuardrailConfigBoolean$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigBoolean$outboundSchema` instead. */
  export const outboundSchema = GetEvalsGuardrailConfigBoolean$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigBoolean$Outbound` instead. */
  export type Outbound = GetEvalsGuardrailConfigBoolean$Outbound;
}

export function getEvalsGuardrailConfigBooleanToJSON(
  getEvalsGuardrailConfigBoolean: GetEvalsGuardrailConfigBoolean,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigBoolean$outboundSchema.parse(
      getEvalsGuardrailConfigBoolean,
    ),
  );
}

export function getEvalsGuardrailConfigBooleanFromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsGuardrailConfigBoolean, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsGuardrailConfigBoolean$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigBoolean' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataGuardrailConfig$inboundSchema: z.ZodType<
  GetEvalsDataGuardrailConfig,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetEvalsGuardrailConfigNumber$inboundSchema),
  z.lazy(() => GetEvalsGuardrailConfigBoolean$inboundSchema),
]);

/** @internal */
export type GetEvalsDataGuardrailConfig$Outbound =
  | GetEvalsGuardrailConfigNumber$Outbound
  | GetEvalsGuardrailConfigBoolean$Outbound;

/** @internal */
export const GetEvalsDataGuardrailConfig$outboundSchema: z.ZodType<
  GetEvalsDataGuardrailConfig$Outbound,
  z.ZodTypeDef,
  GetEvalsDataGuardrailConfig
> = z.union([
  z.lazy(() => GetEvalsGuardrailConfigNumber$outboundSchema),
  z.lazy(() => GetEvalsGuardrailConfigBoolean$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataGuardrailConfig$ {
  /** @deprecated use `GetEvalsDataGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema = GetEvalsDataGuardrailConfig$inboundSchema;
  /** @deprecated use `GetEvalsDataGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema = GetEvalsDataGuardrailConfig$outboundSchema;
  /** @deprecated use `GetEvalsDataGuardrailConfig$Outbound` instead. */
  export type Outbound = GetEvalsDataGuardrailConfig$Outbound;
}

export function getEvalsDataGuardrailConfigToJSON(
  getEvalsDataGuardrailConfig: GetEvalsDataGuardrailConfig,
): string {
  return JSON.stringify(
    GetEvalsDataGuardrailConfig$outboundSchema.parse(
      getEvalsDataGuardrailConfig,
    ),
  );
}

export function getEvalsDataGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsDataGuardrailConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsDataGuardrailConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsDataGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsType$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsDataEvalsType
> = z.nativeEnum(GetEvalsDataEvalsType);

/** @internal */
export const GetEvalsDataEvalsType$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsDataEvalsType
> = GetEvalsDataEvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsType$ {
  /** @deprecated use `GetEvalsDataEvalsType$inboundSchema` instead. */
  export const inboundSchema = GetEvalsDataEvalsType$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsType$outboundSchema` instead. */
  export const outboundSchema = GetEvalsDataEvalsType$outboundSchema;
}

/** @internal */
export const DataMethod$inboundSchema: z.ZodNativeEnum<typeof DataMethod> = z
  .nativeEnum(DataMethod);

/** @internal */
export const DataMethod$outboundSchema: z.ZodNativeEnum<typeof DataMethod> =
  DataMethod$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataMethod$ {
  /** @deprecated use `DataMethod$inboundSchema` instead. */
  export const inboundSchema = DataMethod$inboundSchema;
  /** @deprecated use `DataMethod$outboundSchema` instead. */
  export const outboundSchema = DataMethod$outboundSchema;
}

/** @internal */
export const DataHTTP$inboundSchema: z.ZodType<
  DataHTTP,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  description: z.string(),
  created: z.string().default("2025-09-22T11:53:06.348Z"),
  updated: z.string().default("2025-09-22T11:53:06.348Z"),
  guardrail_config: z.union([
    z.lazy(() => GetEvalsGuardrailConfigNumber$inboundSchema),
    z.lazy(() => GetEvalsGuardrailConfigBoolean$inboundSchema),
  ]).optional(),
  type: GetEvalsDataEvalsType$inboundSchema,
  url: z.string(),
  method: DataMethod$inboundSchema,
  headers: z.record(z.string()),
  payload: z.record(z.any()),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "guardrail_config": "guardrailConfig",
  });
});

/** @internal */
export type DataHTTP$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | GetEvalsGuardrailConfigNumber$Outbound
    | GetEvalsGuardrailConfigBoolean$Outbound
    | undefined;
  type: string;
  url: string;
  method: string;
  headers: { [k: string]: string };
  payload: { [k: string]: any };
  key: string;
};

/** @internal */
export const DataHTTP$outboundSchema: z.ZodType<
  DataHTTP$Outbound,
  z.ZodTypeDef,
  DataHTTP
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-09-22T11:53:06.348Z"),
  updated: z.string().default("2025-09-22T11:53:06.348Z"),
  guardrailConfig: z.union([
    z.lazy(() => GetEvalsGuardrailConfigNumber$outboundSchema),
    z.lazy(() => GetEvalsGuardrailConfigBoolean$outboundSchema),
  ]).optional(),
  type: GetEvalsDataEvalsType$outboundSchema,
  url: z.string(),
  method: DataMethod$outboundSchema,
  headers: z.record(z.string()),
  payload: z.record(z.any()),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataHTTP$ {
  /** @deprecated use `DataHTTP$inboundSchema` instead. */
  export const inboundSchema = DataHTTP$inboundSchema;
  /** @deprecated use `DataHTTP$outboundSchema` instead. */
  export const outboundSchema = DataHTTP$outboundSchema;
  /** @deprecated use `DataHTTP$Outbound` instead. */
  export type Outbound = DataHTTP$Outbound;
}

export function dataHTTPToJSON(dataHTTP: DataHTTP): string {
  return JSON.stringify(DataHTTP$outboundSchema.parse(dataHTTP));
}

export function dataHTTPFromJSON(
  jsonString: string,
): SafeParseResult<DataHTTP, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DataHTTP$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DataHTTP' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponseType$inboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsResponseType> = z
    .nativeEnum(GetEvalsGuardrailConfigEvalsResponseType);

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponseType$outboundSchema:
  z.ZodNativeEnum<typeof GetEvalsGuardrailConfigEvalsResponseType> =
    GetEvalsGuardrailConfigEvalsResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponseType$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseType$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponseType$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponseType$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponseType$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$inboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type: GetEvalsGuardrailConfigEvalsResponseType$inboundSchema,
    value: z.number(),
    operator:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$inboundSchema,
  });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$Outbound =
  {
    enabled: boolean;
    type: string;
    value: number;
    operator: string;
  };

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber
  > = z.object({
    enabled: z.boolean(),
    type: GetEvalsGuardrailConfigEvalsResponseType$outboundSchema,
    value: z.number(),
    operator:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataOperator$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$Outbound` instead. */
  export type Outbound =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumberToJSON(
  getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$outboundSchema
      .parse(
        getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber,
      ),
  );
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsType$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsGuardrailConfigEvalsType
> = z.nativeEnum(GetEvalsGuardrailConfigEvalsType);

/** @internal */
export const GetEvalsGuardrailConfigEvalsType$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsGuardrailConfigEvalsType
> = GetEvalsGuardrailConfigEvalsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsType$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsType$inboundSchema` instead. */
  export const inboundSchema = GetEvalsGuardrailConfigEvalsType$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsType$outboundSchema` instead. */
  export const outboundSchema = GetEvalsGuardrailConfigEvalsType$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$inboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type: GetEvalsGuardrailConfigEvalsType$inboundSchema,
    value: z.boolean(),
  });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$Outbound =
  {
    enabled: boolean;
    type: string;
    value: boolean;
  };

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean
  > = z.object({
    enabled: z.boolean(),
    type: GetEvalsGuardrailConfigEvalsType$outboundSchema,
    value: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$Outbound` instead. */
  export type Outbound =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBooleanToJSON(
  getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$outboundSchema
      .parse(
        getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean,
      ),
  );
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBooleanFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean' from JSON`,
  );
}

/** @internal */
export const DataGuardrailConfig$inboundSchema: z.ZodType<
  DataGuardrailConfig,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() =>
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$inboundSchema
  ),
  z.lazy(() =>
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$inboundSchema
  ),
]);

/** @internal */
export type DataGuardrailConfig$Outbound =
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$Outbound
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$Outbound;

/** @internal */
export const DataGuardrailConfig$outboundSchema: z.ZodType<
  DataGuardrailConfig$Outbound,
  z.ZodTypeDef,
  DataGuardrailConfig
> = z.union([
  z.lazy(() =>
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$outboundSchema
  ),
  z.lazy(() =>
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$outboundSchema
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataGuardrailConfig$ {
  /** @deprecated use `DataGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema = DataGuardrailConfig$inboundSchema;
  /** @deprecated use `DataGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema = DataGuardrailConfig$outboundSchema;
  /** @deprecated use `DataGuardrailConfig$Outbound` instead. */
  export type Outbound = DataGuardrailConfig$Outbound;
}

export function dataGuardrailConfigToJSON(
  dataGuardrailConfig: DataGuardrailConfig,
): string {
  return JSON.stringify(
    DataGuardrailConfig$outboundSchema.parse(dataGuardrailConfig),
  );
}

export function dataGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<DataGuardrailConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DataGuardrailConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DataGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataType$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsDataType
> = z.nativeEnum(GetEvalsDataType);

/** @internal */
export const GetEvalsDataType$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsDataType
> = GetEvalsDataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataType$ {
  /** @deprecated use `GetEvalsDataType$inboundSchema` instead. */
  export const inboundSchema = GetEvalsDataType$inboundSchema;
  /** @deprecated use `GetEvalsDataType$outboundSchema` instead. */
  export const outboundSchema = GetEvalsDataType$outboundSchema;
}

/** @internal */
export const DataJSON$inboundSchema: z.ZodType<
  DataJSON,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  description: z.string(),
  created: z.string().default("2025-09-22T11:53:06.348Z"),
  updated: z.string().default("2025-09-22T11:53:06.348Z"),
  guardrail_config: z.union([
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$inboundSchema
    ),
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$inboundSchema
    ),
  ]).optional(),
  type: GetEvalsDataType$inboundSchema,
  schema: z.string(),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "guardrail_config": "guardrailConfig",
  });
});

/** @internal */
export type DataJSON$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$Outbound
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$Outbound
    | undefined;
  type: string;
  schema: string;
  key: string;
};

/** @internal */
export const DataJSON$outboundSchema: z.ZodType<
  DataJSON$Outbound,
  z.ZodTypeDef,
  DataJSON
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-09-22T11:53:06.348Z"),
  updated: z.string().default("2025-09-22T11:53:06.348Z"),
  guardrailConfig: z.union([
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataNumber$outboundSchema
    ),
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyDataBoolean$outboundSchema
    ),
  ]).optional(),
  type: GetEvalsDataType$outboundSchema,
  schema: z.string(),
  key: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataJSON$ {
  /** @deprecated use `DataJSON$inboundSchema` instead. */
  export const inboundSchema = DataJSON$inboundSchema;
  /** @deprecated use `DataJSON$outboundSchema` instead. */
  export const outboundSchema = DataJSON$outboundSchema;
  /** @deprecated use `DataJSON$Outbound` instead. */
  export type Outbound = DataJSON$Outbound;
}

export function dataJSONToJSON(dataJSON: DataJSON): string {
  return JSON.stringify(DataJSON$outboundSchema.parse(dataJSON));
}

export function dataJSONFromJSON(
  jsonString: string,
): SafeParseResult<DataJSON, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DataJSON$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DataJSON' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigType$inboundSchema: z.ZodNativeEnum<
  typeof GetEvalsGuardrailConfigType
> = z.nativeEnum(GetEvalsGuardrailConfigType);

/** @internal */
export const GetEvalsGuardrailConfigType$outboundSchema: z.ZodNativeEnum<
  typeof GetEvalsGuardrailConfigType
> = GetEvalsGuardrailConfigType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigType$ {
  /** @deprecated use `GetEvalsGuardrailConfigType$inboundSchema` instead. */
  export const inboundSchema = GetEvalsGuardrailConfigType$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigType$outboundSchema` instead. */
  export const outboundSchema = GetEvalsGuardrailConfigType$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$inboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type: GetEvalsGuardrailConfigType$inboundSchema,
    value: z.number(),
    operator:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$inboundSchema,
  });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$Outbound =
  {
    enabled: boolean;
    type: string;
    value: number;
    operator: string;
  };

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber
  > = z.object({
    enabled: z.boolean(),
    type: GetEvalsGuardrailConfigType$outboundSchema,
    value: z.number(),
    operator:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyOperator$outboundSchema,
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$Outbound` instead. */
  export type Outbound =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumberToJSON(
  getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$outboundSchema
      .parse(
        getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber,
      ),
  );
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumberFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber' from JSON`,
  );
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$inboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type
  > = z.nativeEnum(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type,
  );

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$outboundSchema:
  z.ZodNativeEnum<
    typeof GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type
  > =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$outboundSchema;
}

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$inboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$inboundSchema,
    value: z.boolean(),
  });

/** @internal */
export type GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$Outbound =
  {
    enabled: boolean;
    type: string;
    value: boolean;
  };

/** @internal */
export const GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$outboundSchema:
  z.ZodType<
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$Outbound,
    z.ZodTypeDef,
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean
  > = z.object({
    enabled: z.boolean(),
    type:
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyData1Type$outboundSchema,
    value: z.boolean(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$ {
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$inboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$outboundSchema;
  /** @deprecated use `GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$Outbound` instead. */
  export type Outbound =
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$Outbound;
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBooleanToJSON(
  getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean:
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean,
): string {
  return JSON.stringify(
    GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$outboundSchema
      .parse(
        getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean,
      ),
  );
}

export function getEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBooleanFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean' from JSON`,
  );
}

/** @internal */
export const GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$inboundSchema:
  z.ZodType<
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig,
    z.ZodTypeDef,
    unknown
  > = z.union([
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$inboundSchema
    ),
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$inboundSchema
    ),
  ]);

/** @internal */
export type GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$Outbound =
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$Outbound
  | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$Outbound;

/** @internal */
export const GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$outboundSchema:
  z.ZodType<
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$Outbound,
    z.ZodTypeDef,
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig
  > = z.union([
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$outboundSchema
    ),
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$outboundSchema
    ),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$ {
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$inboundSchema` instead. */
  export const inboundSchema =
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$inboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$outboundSchema` instead. */
  export const outboundSchema =
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$outboundSchema;
  /** @deprecated use `GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$Outbound` instead. */
  export type Outbound =
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$Outbound;
}

export function getEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfigToJSON(
  getEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig:
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig,
): string {
  return JSON.stringify(
    GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$outboundSchema
      .parse(
        getEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig,
      ),
  );
}

export function getEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsDataEvalsResponse200ApplicationJSONResponseBodyGuardrailConfig' from JSON`,
  );
}

/** @internal */
export const DataType$inboundSchema: z.ZodNativeEnum<typeof DataType> = z
  .nativeEnum(DataType);

/** @internal */
export const DataType$outboundSchema: z.ZodNativeEnum<typeof DataType> =
  DataType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataType$ {
  /** @deprecated use `DataType$inboundSchema` instead. */
  export const inboundSchema = DataType$inboundSchema;
  /** @deprecated use `DataType$outboundSchema` instead. */
  export const outboundSchema = DataType$outboundSchema;
}

/** @internal */
export const DataLLM$inboundSchema: z.ZodType<DataLLM, z.ZodTypeDef, unknown> =
  z.object({
    _id: z.string(),
    description: z.string(),
    created: z.string().default("2025-09-22T11:53:06.348Z"),
    updated: z.string().default("2025-09-22T11:53:06.348Z"),
    guardrail_config: z.union([
      z.lazy(() =>
        GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$inboundSchema
      ),
      z.lazy(() =>
        GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$inboundSchema
      ),
    ]).optional(),
    type: DataType$inboundSchema,
    prompt: z.string(),
    key: z.string(),
    model: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "_id": "id",
      "guardrail_config": "guardrailConfig",
    });
  });

/** @internal */
export type DataLLM$Outbound = {
  _id: string;
  description: string;
  created: string;
  updated: string;
  guardrail_config?:
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$Outbound
    | GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$Outbound
    | undefined;
  type: string;
  prompt: string;
  key: string;
  model: string;
};

/** @internal */
export const DataLLM$outboundSchema: z.ZodType<
  DataLLM$Outbound,
  z.ZodTypeDef,
  DataLLM
> = z.object({
  id: z.string(),
  description: z.string(),
  created: z.string().default("2025-09-22T11:53:06.348Z"),
  updated: z.string().default("2025-09-22T11:53:06.348Z"),
  guardrailConfig: z.union([
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyNumber$outboundSchema
    ),
    z.lazy(() =>
      GetEvalsGuardrailConfigEvalsResponse200ApplicationJSONResponseBodyBoolean$outboundSchema
    ),
  ]).optional(),
  type: DataType$outboundSchema,
  prompt: z.string(),
  key: z.string(),
  model: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    guardrailConfig: "guardrail_config",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DataLLM$ {
  /** @deprecated use `DataLLM$inboundSchema` instead. */
  export const inboundSchema = DataLLM$inboundSchema;
  /** @deprecated use `DataLLM$outboundSchema` instead. */
  export const outboundSchema = DataLLM$outboundSchema;
  /** @deprecated use `DataLLM$Outbound` instead. */
  export type Outbound = DataLLM$Outbound;
}

export function dataLLMToJSON(dataLLM: DataLLM): string {
  return JSON.stringify(DataLLM$outboundSchema.parse(dataLLM));
}

export function dataLLMFromJSON(
  jsonString: string,
): SafeParseResult<DataLLM, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DataLLM$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DataLLM' from JSON`,
  );
}

/** @internal */
export const GetEvalsData$inboundSchema: z.ZodType<
  GetEvalsData,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => DataHTTP$inboundSchema),
  z.lazy(() => DataLLM$inboundSchema),
  z.lazy(() => DataRagas$inboundSchema),
  z.lazy(() => DataJSON$inboundSchema),
  z.lazy(() => DataPython$inboundSchema),
  z.lazy(() => DataFunction$inboundSchema),
  z.lazy(() => DataTypescript$inboundSchema),
]);

/** @internal */
export type GetEvalsData$Outbound =
  | DataHTTP$Outbound
  | DataLLM$Outbound
  | DataRagas$Outbound
  | DataJSON$Outbound
  | DataPython$Outbound
  | DataFunction$Outbound
  | DataTypescript$Outbound;

/** @internal */
export const GetEvalsData$outboundSchema: z.ZodType<
  GetEvalsData$Outbound,
  z.ZodTypeDef,
  GetEvalsData
> = z.union([
  z.lazy(() => DataHTTP$outboundSchema),
  z.lazy(() => DataLLM$outboundSchema),
  z.lazy(() => DataRagas$outboundSchema),
  z.lazy(() => DataJSON$outboundSchema),
  z.lazy(() => DataPython$outboundSchema),
  z.lazy(() => DataFunction$outboundSchema),
  z.lazy(() => DataTypescript$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsData$ {
  /** @deprecated use `GetEvalsData$inboundSchema` instead. */
  export const inboundSchema = GetEvalsData$inboundSchema;
  /** @deprecated use `GetEvalsData$outboundSchema` instead. */
  export const outboundSchema = GetEvalsData$outboundSchema;
  /** @deprecated use `GetEvalsData$Outbound` instead. */
  export type Outbound = GetEvalsData$Outbound;
}

export function getEvalsDataToJSON(getEvalsData: GetEvalsData): string {
  return JSON.stringify(GetEvalsData$outboundSchema.parse(getEvalsData));
}

export function getEvalsDataFromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsData' from JSON`,
  );
}

/** @internal */
export const GetEvalsResponseBody$inboundSchema: z.ZodType<
  GetEvalsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  object: GetEvalsObject$inboundSchema,
  data: z.array(
    z.union([
      z.lazy(() => DataHTTP$inboundSchema),
      z.lazy(() => DataLLM$inboundSchema),
      z.lazy(() => DataRagas$inboundSchema),
      z.lazy(() => DataJSON$inboundSchema),
      z.lazy(() => DataPython$inboundSchema),
      z.lazy(() => DataFunction$inboundSchema),
      z.lazy(() => DataTypescript$inboundSchema),
    ]),
  ),
  has_more: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    "has_more": "hasMore",
  });
});

/** @internal */
export type GetEvalsResponseBody$Outbound = {
  object: string;
  data: Array<
    | DataHTTP$Outbound
    | DataLLM$Outbound
    | DataRagas$Outbound
    | DataJSON$Outbound
    | DataPython$Outbound
    | DataFunction$Outbound
    | DataTypescript$Outbound
  >;
  has_more: boolean;
};

/** @internal */
export const GetEvalsResponseBody$outboundSchema: z.ZodType<
  GetEvalsResponseBody$Outbound,
  z.ZodTypeDef,
  GetEvalsResponseBody
> = z.object({
  object: GetEvalsObject$outboundSchema,
  data: z.array(
    z.union([
      z.lazy(() => DataHTTP$outboundSchema),
      z.lazy(() => DataLLM$outboundSchema),
      z.lazy(() => DataRagas$outboundSchema),
      z.lazy(() => DataJSON$outboundSchema),
      z.lazy(() => DataPython$outboundSchema),
      z.lazy(() => DataFunction$outboundSchema),
      z.lazy(() => DataTypescript$outboundSchema),
    ]),
  ),
  hasMore: z.boolean(),
}).transform((v) => {
  return remap$(v, {
    hasMore: "has_more",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetEvalsResponseBody$ {
  /** @deprecated use `GetEvalsResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetEvalsResponseBody$inboundSchema;
  /** @deprecated use `GetEvalsResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetEvalsResponseBody$outboundSchema;
  /** @deprecated use `GetEvalsResponseBody$Outbound` instead. */
  export type Outbound = GetEvalsResponseBody$Outbound;
}

export function getEvalsResponseBodyToJSON(
  getEvalsResponseBody: GetEvalsResponseBody,
): string {
  return JSON.stringify(
    GetEvalsResponseBody$outboundSchema.parse(getEvalsResponseBody),
  );
}

export function getEvalsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetEvalsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetEvalsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetEvalsResponseBody' from JSON`,
  );
}
