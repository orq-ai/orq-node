/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RunBertScoreRequestBody = {
  output: string;
  reference: string;
};

export type RunBertScoreValue = {
  f1: number;
  precision: number;
  recall: number;
};

/**
 * Returns the BERT Score evaluation result
 */
export type RunBertScoreResponseBody = {
  value: RunBertScoreValue;
};

/** @internal */
export const RunBertScoreRequestBody$inboundSchema: z.ZodType<
  RunBertScoreRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  output: z.string(),
  reference: z.string(),
});

/** @internal */
export type RunBertScoreRequestBody$Outbound = {
  output: string;
  reference: string;
};

/** @internal */
export const RunBertScoreRequestBody$outboundSchema: z.ZodType<
  RunBertScoreRequestBody$Outbound,
  z.ZodTypeDef,
  RunBertScoreRequestBody
> = z.object({
  output: z.string(),
  reference: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunBertScoreRequestBody$ {
  /** @deprecated use `RunBertScoreRequestBody$inboundSchema` instead. */
  export const inboundSchema = RunBertScoreRequestBody$inboundSchema;
  /** @deprecated use `RunBertScoreRequestBody$outboundSchema` instead. */
  export const outboundSchema = RunBertScoreRequestBody$outboundSchema;
  /** @deprecated use `RunBertScoreRequestBody$Outbound` instead. */
  export type Outbound = RunBertScoreRequestBody$Outbound;
}

export function runBertScoreRequestBodyToJSON(
  runBertScoreRequestBody: RunBertScoreRequestBody,
): string {
  return JSON.stringify(
    RunBertScoreRequestBody$outboundSchema.parse(runBertScoreRequestBody),
  );
}

export function runBertScoreRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<RunBertScoreRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RunBertScoreRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RunBertScoreRequestBody' from JSON`,
  );
}

/** @internal */
export const RunBertScoreValue$inboundSchema: z.ZodType<
  RunBertScoreValue,
  z.ZodTypeDef,
  unknown
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/** @internal */
export type RunBertScoreValue$Outbound = {
  f1: number;
  precision: number;
  recall: number;
};

/** @internal */
export const RunBertScoreValue$outboundSchema: z.ZodType<
  RunBertScoreValue$Outbound,
  z.ZodTypeDef,
  RunBertScoreValue
> = z.object({
  f1: z.number(),
  precision: z.number(),
  recall: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunBertScoreValue$ {
  /** @deprecated use `RunBertScoreValue$inboundSchema` instead. */
  export const inboundSchema = RunBertScoreValue$inboundSchema;
  /** @deprecated use `RunBertScoreValue$outboundSchema` instead. */
  export const outboundSchema = RunBertScoreValue$outboundSchema;
  /** @deprecated use `RunBertScoreValue$Outbound` instead. */
  export type Outbound = RunBertScoreValue$Outbound;
}

export function runBertScoreValueToJSON(
  runBertScoreValue: RunBertScoreValue,
): string {
  return JSON.stringify(
    RunBertScoreValue$outboundSchema.parse(runBertScoreValue),
  );
}

export function runBertScoreValueFromJSON(
  jsonString: string,
): SafeParseResult<RunBertScoreValue, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RunBertScoreValue$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RunBertScoreValue' from JSON`,
  );
}

/** @internal */
export const RunBertScoreResponseBody$inboundSchema: z.ZodType<
  RunBertScoreResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.lazy(() => RunBertScoreValue$inboundSchema),
});

/** @internal */
export type RunBertScoreResponseBody$Outbound = {
  value: RunBertScoreValue$Outbound;
};

/** @internal */
export const RunBertScoreResponseBody$outboundSchema: z.ZodType<
  RunBertScoreResponseBody$Outbound,
  z.ZodTypeDef,
  RunBertScoreResponseBody
> = z.object({
  value: z.lazy(() => RunBertScoreValue$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunBertScoreResponseBody$ {
  /** @deprecated use `RunBertScoreResponseBody$inboundSchema` instead. */
  export const inboundSchema = RunBertScoreResponseBody$inboundSchema;
  /** @deprecated use `RunBertScoreResponseBody$outboundSchema` instead. */
  export const outboundSchema = RunBertScoreResponseBody$outboundSchema;
  /** @deprecated use `RunBertScoreResponseBody$Outbound` instead. */
  export type Outbound = RunBertScoreResponseBody$Outbound;
}

export function runBertScoreResponseBodyToJSON(
  runBertScoreResponseBody: RunBertScoreResponseBody,
): string {
  return JSON.stringify(
    RunBertScoreResponseBody$outboundSchema.parse(runBertScoreResponseBody),
  );
}

export function runBertScoreResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<RunBertScoreResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RunBertScoreResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RunBertScoreResponseBody' from JSON`,
  );
}
