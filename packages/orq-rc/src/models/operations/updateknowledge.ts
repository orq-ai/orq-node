/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const UpdateKnowledgeRetrievalSettingsKnowledgeRequestType = {
  HybridSearch: "hybrid_search",
} as const;
export type UpdateKnowledgeRetrievalSettingsKnowledgeRequestType = ClosedEnum<
  typeof UpdateKnowledgeRetrievalSettingsKnowledgeRequestType
>;

export const UpdateKnowledgeRetrievalSettingsKnowledgeRequestProvider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
  Jina: "jina",
  Togetherai: "togetherai",
  Elevenlabs: "elevenlabs",
} as const;
export type UpdateKnowledgeRetrievalSettingsKnowledgeRequestProvider =
  ClosedEnum<typeof UpdateKnowledgeRetrievalSettingsKnowledgeRequestProvider>;

export const UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelType = {
  Rerank: "rerank",
} as const;
export type UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelType =
  ClosedEnum<typeof UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelType>;

export type UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters = {
  /**
   * The threshold value used to filter the rerank results, only documents with a relevance score greater than the threshold will be returned
   */
  threshold?: number | undefined;
};

export type UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput = {
  enabled?: boolean | undefined;
  provider?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeRequestProvider
    | undefined;
  /**
   * The name of the model to use
   */
  model?: string | undefined;
  /**
   * The ID of the model in the database
   */
  modelDbId?: string | undefined;
  modelType?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelType
    | undefined;
  modelParameters?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters
    | undefined;
};

export type UpdateKnowledgeRetrievalSettings3 = {
  type: UpdateKnowledgeRetrievalSettingsKnowledgeRequestType;
  /**
   * Used to filter chunks that are most similar to the query
   */
  topK?: number | undefined;
  /**
   * Used to filter chunks that are most similar to the query. A value of `0` will be consider disabled.
   */
  threshold?: number | undefined;
  rerankConfig?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput
    | null
    | undefined;
};

export const UpdateKnowledgeRetrievalSettingsKnowledgeType = {
  KeywordSearch: "keyword_search",
} as const;
export type UpdateKnowledgeRetrievalSettingsKnowledgeType = ClosedEnum<
  typeof UpdateKnowledgeRetrievalSettingsKnowledgeType
>;

export const UpdateKnowledgeRetrievalSettingsKnowledgeProvider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
  Jina: "jina",
  Togetherai: "togetherai",
  Elevenlabs: "elevenlabs",
} as const;
export type UpdateKnowledgeRetrievalSettingsKnowledgeProvider = ClosedEnum<
  typeof UpdateKnowledgeRetrievalSettingsKnowledgeProvider
>;

export const UpdateKnowledgeRetrievalSettingsKnowledgeModelType = {
  Rerank: "rerank",
} as const;
export type UpdateKnowledgeRetrievalSettingsKnowledgeModelType = ClosedEnum<
  typeof UpdateKnowledgeRetrievalSettingsKnowledgeModelType
>;

export type UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters = {
  /**
   * The threshold value used to filter the rerank results, only documents with a relevance score greater than the threshold will be returned
   */
  threshold?: number | undefined;
};

export type UpdateKnowledgeRetrievalSettingsRerankConfigInput = {
  enabled?: boolean | undefined;
  provider?: UpdateKnowledgeRetrievalSettingsKnowledgeProvider | undefined;
  /**
   * The name of the model to use
   */
  model?: string | undefined;
  /**
   * The ID of the model in the database
   */
  modelDbId?: string | undefined;
  modelType?: UpdateKnowledgeRetrievalSettingsKnowledgeModelType | undefined;
  modelParameters?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters
    | undefined;
};

export type UpdateKnowledgeRetrievalSettings2 = {
  type: UpdateKnowledgeRetrievalSettingsKnowledgeType;
  /**
   * Used to filter chunks that are most similar to the query
   */
  topK?: number | undefined;
  /**
   * Used to filter chunks that are most similar to the query. A value of `0` will be consider disabled.
   */
  threshold?: number | undefined;
  rerankConfig?:
    | UpdateKnowledgeRetrievalSettingsRerankConfigInput
    | null
    | undefined;
};

export const UpdateKnowledgeRetrievalSettingsType = {
  VectorSearch: "vector_search",
} as const;
export type UpdateKnowledgeRetrievalSettingsType = ClosedEnum<
  typeof UpdateKnowledgeRetrievalSettingsType
>;

export const UpdateKnowledgeRetrievalSettingsProvider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
  Jina: "jina",
  Togetherai: "togetherai",
  Elevenlabs: "elevenlabs",
} as const;
export type UpdateKnowledgeRetrievalSettingsProvider = ClosedEnum<
  typeof UpdateKnowledgeRetrievalSettingsProvider
>;

export const UpdateKnowledgeRetrievalSettingsModelType = {
  Rerank: "rerank",
} as const;
export type UpdateKnowledgeRetrievalSettingsModelType = ClosedEnum<
  typeof UpdateKnowledgeRetrievalSettingsModelType
>;

export type UpdateKnowledgeRetrievalSettingsModelParameters = {
  /**
   * The threshold value used to filter the rerank results, only documents with a relevance score greater than the threshold will be returned
   */
  threshold?: number | undefined;
};

export type UpdateKnowledgeRetrievalSettingsRerankConfig = {
  enabled?: boolean | undefined;
  provider?: UpdateKnowledgeRetrievalSettingsProvider | undefined;
  /**
   * The name of the model to use
   */
  model?: string | undefined;
  /**
   * The ID of the model in the database
   */
  modelDbId?: string | undefined;
  modelType?: UpdateKnowledgeRetrievalSettingsModelType | undefined;
  modelParameters?: UpdateKnowledgeRetrievalSettingsModelParameters | undefined;
};

export type UpdateKnowledgeRetrievalSettings1 = {
  type: UpdateKnowledgeRetrievalSettingsType;
  /**
   * Used to filter chunks that are most similar to the query
   */
  topK?: number | undefined;
  /**
   * Used to filter chunks that are most similar to the query. A value of `0` will be consider disabled.
   */
  threshold?: number | undefined;
  rerankConfig?:
    | UpdateKnowledgeRetrievalSettingsRerankConfig
    | null
    | undefined;
};

export type UpdateKnowledgeRetrievalSettings =
  | UpdateKnowledgeRetrievalSettings1
  | UpdateKnowledgeRetrievalSettings2
  | UpdateKnowledgeRetrievalSettings3;

export type UpdateKnowledgeRequestBody = {
  /**
   * The description of the knowledge base.
   */
  description?: string | undefined;
  /**
   * The embeddings model used for the knowledge base. If the models is provided and is different than the previous set model, all the datasources in the knowledge base will be re-embedded.
   */
  model?: string | undefined;
  /**
   * The path where the entity is stored in the project structure. The first element of the path always represents the project name. Any subsequent path element after the project will be created as a folder in the project if it does not exists.
   */
  path?: string | undefined;
  retrievalSettings?:
    | UpdateKnowledgeRetrievalSettings1
    | UpdateKnowledgeRetrievalSettings2
    | UpdateKnowledgeRetrievalSettings3
    | undefined;
};

export type UpdateKnowledgeRequest = {
  /**
   * The unique identifier of the knowledge base
   */
  knowledgeId: string;
  requestBody: UpdateKnowledgeRequestBody;
};

export type UpdateKnowledgeMetadata = {
  wordCount?: number | undefined;
  documentCount?: number | undefined;
  sentencesCount?: number | undefined;
};

export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONType =
  {
    HybridSearch: "hybrid_search",
  } as const;
export type UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONType =
  ClosedEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONType
  >;

export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONProvider =
  {
    Cohere: "cohere",
    Openai: "openai",
    Anthropic: "anthropic",
    Huggingface: "huggingface",
    Replicate: "replicate",
    Google: "google",
    GoogleAi: "google-ai",
    Azure: "azure",
    Aws: "aws",
    Anyscale: "anyscale",
    Perplexity: "perplexity",
    Groq: "groq",
    Fal: "fal",
    Leonardoai: "leonardoai",
    Nvidia: "nvidia",
    Jina: "jina",
    Togetherai: "togetherai",
    Elevenlabs: "elevenlabs",
  } as const;
export type UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONProvider =
  ClosedEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONProvider
  >;

export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelType =
  {
    Rerank: "rerank",
  } as const;
export type UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelType =
  ClosedEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelType
  >;

export type UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters =
  {
    /**
     * The threshold value used to filter the rerank results, only documents with a relevance score greater than the threshold will be returned
     */
    threshold?: number | undefined;
  };

export type UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig = {
  enabled?: boolean | undefined;
  provider?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONProvider
    | undefined;
  /**
   * The name of the model to use
   */
  model?: string | undefined;
  /**
   * The ID of the model in the database
   */
  modelDbId?: string | undefined;
  modelType?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelType
    | undefined;
  modelParameters?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters
    | undefined;
  /**
   * The id of the resource
   */
  integrationId?: string | null | undefined;
};

export type UpdateKnowledgeRetrievalSettingsKnowledge3 = {
  type: UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONType;
  /**
   * Used to filter chunks that are most similar to the query
   */
  topK?: number | undefined;
  /**
   * Used to filter chunks that are most similar to the query. A value of `0` will be consider disabled.
   */
  threshold?: number | undefined;
  rerankConfig?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig
    | null
    | undefined;
};

export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Type = {
  KeywordSearch: "keyword_search",
} as const;
export type UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Type =
  ClosedEnum<typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Type>;

export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Provider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
  Jina: "jina",
  Togetherai: "togetherai",
  Elevenlabs: "elevenlabs",
} as const;
export type UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Provider =
  ClosedEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Provider
  >;

export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelType = {
  Rerank: "rerank",
} as const;
export type UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelType =
  ClosedEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelType
  >;

export type UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters =
  {
    /**
     * The threshold value used to filter the rerank results, only documents with a relevance score greater than the threshold will be returned
     */
    threshold?: number | undefined;
  };

export type UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig = {
  enabled?: boolean | undefined;
  provider?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Provider
    | undefined;
  /**
   * The name of the model to use
   */
  model?: string | undefined;
  /**
   * The ID of the model in the database
   */
  modelDbId?: string | undefined;
  modelType?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelType
    | undefined;
  modelParameters?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters
    | undefined;
  /**
   * The id of the resource
   */
  integrationId?: string | null | undefined;
};

export type UpdateKnowledgeRetrievalSettingsKnowledge2 = {
  type: UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Type;
  /**
   * Used to filter chunks that are most similar to the query
   */
  topK?: number | undefined;
  /**
   * Used to filter chunks that are most similar to the query. A value of `0` will be consider disabled.
   */
  threshold?: number | undefined;
  rerankConfig?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig
    | null
    | undefined;
};

export const UpdateKnowledgeRetrievalSettingsKnowledgeResponseType = {
  VectorSearch: "vector_search",
} as const;
export type UpdateKnowledgeRetrievalSettingsKnowledgeResponseType = ClosedEnum<
  typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponseType
>;

export const UpdateKnowledgeRetrievalSettingsKnowledgeResponseProvider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
  Jina: "jina",
  Togetherai: "togetherai",
  Elevenlabs: "elevenlabs",
} as const;
export type UpdateKnowledgeRetrievalSettingsKnowledgeResponseProvider =
  ClosedEnum<typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponseProvider>;

export const UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelType = {
  Rerank: "rerank",
} as const;
export type UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelType =
  ClosedEnum<typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelType>;

export type UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters = {
  /**
   * The threshold value used to filter the rerank results, only documents with a relevance score greater than the threshold will be returned
   */
  threshold?: number | undefined;
};

export type UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig = {
  enabled?: boolean | undefined;
  provider?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeResponseProvider
    | undefined;
  /**
   * The name of the model to use
   */
  model?: string | undefined;
  /**
   * The ID of the model in the database
   */
  modelDbId?: string | undefined;
  modelType?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelType
    | undefined;
  modelParameters?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters
    | undefined;
  /**
   * The id of the resource
   */
  integrationId?: string | null | undefined;
};

export type UpdateKnowledgeRetrievalSettingsKnowledge1 = {
  type: UpdateKnowledgeRetrievalSettingsKnowledgeResponseType;
  /**
   * Used to filter chunks that are most similar to the query
   */
  topK?: number | undefined;
  /**
   * Used to filter chunks that are most similar to the query. A value of `0` will be consider disabled.
   */
  threshold?: number | undefined;
  rerankConfig?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig
    | null
    | undefined;
};

export type UpdateKnowledgeKnowledgeRetrievalSettings =
  | UpdateKnowledgeRetrievalSettingsKnowledge1
  | UpdateKnowledgeRetrievalSettingsKnowledge2
  | UpdateKnowledgeRetrievalSettingsKnowledge3;

/**
 * Knowledge Base object
 */
export type UpdateKnowledgeResponseBody = {
  /**
   * The unique identifier of the knowledge base.
   */
  id: string;
  /**
   * The id of the resource
   */
  createdById: string;
  /**
   * The creation date of the knowledge base.
   */
  created: string;
  /**
   * The description of the knowledge base.
   */
  description?: string | undefined;
  /**
   * The unique key of the knowledge base.
   */
  key: string;
  metadata: UpdateKnowledgeMetadata;
  /**
   * The embeddings model used for the knowledge base.
   */
  model: string;
  /**
   * The path where the entity is stored in the project structure. The first element of the path always represents the project name. Any subsequent path element after the project will be created as a folder in the project if it does not exists.
   */
  path?: string | undefined;
  retrievalSettings:
    | UpdateKnowledgeRetrievalSettingsKnowledge1
    | UpdateKnowledgeRetrievalSettingsKnowledge2
    | UpdateKnowledgeRetrievalSettingsKnowledge3;
  /**
   * The id of the resource
   */
  updateById: string;
  /**
   * The last update date of the knowledge base.
   */
  updated: string;
};

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeRequestType$inboundSchema:
  z.ZodNativeEnum<typeof UpdateKnowledgeRetrievalSettingsKnowledgeRequestType> =
    z.nativeEnum(UpdateKnowledgeRetrievalSettingsKnowledgeRequestType);

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeRequestType$outboundSchema:
  z.ZodNativeEnum<typeof UpdateKnowledgeRetrievalSettingsKnowledgeRequestType> =
    UpdateKnowledgeRetrievalSettingsKnowledgeRequestType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeRequestType$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeRequestType$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeRequestType$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeRequestType$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeRequestType$outboundSchema;
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeRequestProvider$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeRequestProvider
  > = z.nativeEnum(UpdateKnowledgeRetrievalSettingsKnowledgeRequestProvider);

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeRequestProvider$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeRequestProvider
  > = UpdateKnowledgeRetrievalSettingsKnowledgeRequestProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeRequestProvider$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeRequestProvider$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeRequestProvider$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeRequestProvider$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeRequestProvider$outboundSchema;
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelType$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelType
  > = z.nativeEnum(UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelType);

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelType$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelType
  > = UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelType$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelType$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelType$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelType$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelType$outboundSchema;
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters$inboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters,
    z.ZodTypeDef,
    unknown
  > = z.object({
    threshold: z.number().optional(),
  });

/** @internal */
export type UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters$Outbound =
  {
    threshold?: number | undefined;
  };

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters$outboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters$Outbound,
    z.ZodTypeDef,
    UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters
  > = z.object({
    threshold: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters$Outbound` instead. */
  export type Outbound =
    UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters$Outbound;
}

export function updateKnowledgeRetrievalSettingsKnowledgeRequestModelParametersToJSON(
  updateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters:
    UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters,
): string {
  return JSON.stringify(
    UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters$outboundSchema
      .parse(updateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters),
  );
}

export function updateKnowledgeRetrievalSettingsKnowledgeRequestModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput$inboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean().optional(),
    provider:
      UpdateKnowledgeRetrievalSettingsKnowledgeRequestProvider$inboundSchema
        .optional(),
    model: z.string().optional(),
    model_db_id: z.string().optional(),
    model_type:
      UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelType$inboundSchema
        .optional(),
    model_parameters: z.lazy(() =>
      UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "model_db_id": "modelDbId",
      "model_type": "modelType",
      "model_parameters": "modelParameters",
    });
  });

/** @internal */
export type UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput$Outbound =
  {
    enabled?: boolean | undefined;
    provider?: string | undefined;
    model?: string | undefined;
    model_db_id?: string | undefined;
    model_type?: string | undefined;
    model_parameters?:
      | UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters$Outbound
      | undefined;
  };

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput$outboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput$Outbound,
    z.ZodTypeDef,
    UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput
  > = z.object({
    enabled: z.boolean().optional(),
    provider:
      UpdateKnowledgeRetrievalSettingsKnowledgeRequestProvider$outboundSchema
        .optional(),
    model: z.string().optional(),
    modelDbId: z.string().optional(),
    modelType:
      UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelType$outboundSchema
        .optional(),
    modelParameters: z.lazy(() =>
      UpdateKnowledgeRetrievalSettingsKnowledgeRequestModelParameters$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      modelDbId: "model_db_id",
      modelType: "model_type",
      modelParameters: "model_parameters",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput$Outbound` instead. */
  export type Outbound =
    UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput$Outbound;
}

export function updateKnowledgeRetrievalSettingsKnowledgeRerankConfigInputToJSON(
  updateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput:
    UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput,
): string {
  return JSON.stringify(
    UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput$outboundSchema
      .parse(updateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput),
  );
}

export function updateKnowledgeRetrievalSettingsKnowledgeRerankConfigInputFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRetrievalSettings3$inboundSchema: z.ZodType<
  UpdateKnowledgeRetrievalSettings3,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: UpdateKnowledgeRetrievalSettingsKnowledgeRequestType$inboundSchema,
  top_k: z.number().int().default(5),
  threshold: z.number().default(0),
  rerank_config: z.nullable(
    z.lazy(() =>
      UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput$inboundSchema
    ),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "top_k": "topK",
    "rerank_config": "rerankConfig",
  });
});

/** @internal */
export type UpdateKnowledgeRetrievalSettings3$Outbound = {
  type: string;
  top_k: number;
  threshold: number;
  rerank_config?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput$Outbound
    | null
    | undefined;
};

/** @internal */
export const UpdateKnowledgeRetrievalSettings3$outboundSchema: z.ZodType<
  UpdateKnowledgeRetrievalSettings3$Outbound,
  z.ZodTypeDef,
  UpdateKnowledgeRetrievalSettings3
> = z.object({
  type: UpdateKnowledgeRetrievalSettingsKnowledgeRequestType$outboundSchema,
  topK: z.number().int().default(5),
  threshold: z.number().default(0),
  rerankConfig: z.nullable(
    z.lazy(() =>
      UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfigInput$outboundSchema
    ),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    topK: "top_k",
    rerankConfig: "rerank_config",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettings3$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettings3$inboundSchema` instead. */
  export const inboundSchema = UpdateKnowledgeRetrievalSettings3$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettings3$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettings3$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettings3$Outbound` instead. */
  export type Outbound = UpdateKnowledgeRetrievalSettings3$Outbound;
}

export function updateKnowledgeRetrievalSettings3ToJSON(
  updateKnowledgeRetrievalSettings3: UpdateKnowledgeRetrievalSettings3,
): string {
  return JSON.stringify(
    UpdateKnowledgeRetrievalSettings3$outboundSchema.parse(
      updateKnowledgeRetrievalSettings3,
    ),
  );
}

export function updateKnowledgeRetrievalSettings3FromJSON(
  jsonString: string,
): SafeParseResult<UpdateKnowledgeRetrievalSettings3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateKnowledgeRetrievalSettings3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateKnowledgeRetrievalSettings3' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeType$inboundSchema:
  z.ZodNativeEnum<typeof UpdateKnowledgeRetrievalSettingsKnowledgeType> = z
    .nativeEnum(UpdateKnowledgeRetrievalSettingsKnowledgeType);

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeType$outboundSchema:
  z.ZodNativeEnum<typeof UpdateKnowledgeRetrievalSettingsKnowledgeType> =
    UpdateKnowledgeRetrievalSettingsKnowledgeType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeType$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeType$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeType$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeType$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeType$outboundSchema;
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeProvider$inboundSchema:
  z.ZodNativeEnum<typeof UpdateKnowledgeRetrievalSettingsKnowledgeProvider> = z
    .nativeEnum(UpdateKnowledgeRetrievalSettingsKnowledgeProvider);

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeProvider$outboundSchema:
  z.ZodNativeEnum<typeof UpdateKnowledgeRetrievalSettingsKnowledgeProvider> =
    UpdateKnowledgeRetrievalSettingsKnowledgeProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeProvider$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeProvider$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeProvider$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeProvider$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeProvider$outboundSchema;
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeModelType$inboundSchema:
  z.ZodNativeEnum<typeof UpdateKnowledgeRetrievalSettingsKnowledgeModelType> = z
    .nativeEnum(UpdateKnowledgeRetrievalSettingsKnowledgeModelType);

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeModelType$outboundSchema:
  z.ZodNativeEnum<typeof UpdateKnowledgeRetrievalSettingsKnowledgeModelType> =
    UpdateKnowledgeRetrievalSettingsKnowledgeModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeModelType$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeModelType$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeModelType$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeModelType$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeModelType$outboundSchema;
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters$inboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters,
    z.ZodTypeDef,
    unknown
  > = z.object({
    threshold: z.number().optional(),
  });

/** @internal */
export type UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters$Outbound =
  {
    threshold?: number | undefined;
  };

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters$outboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters$Outbound,
    z.ZodTypeDef,
    UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters
  > = z.object({
    threshold: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters$Outbound` instead. */
  export type Outbound =
    UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters$Outbound;
}

export function updateKnowledgeRetrievalSettingsKnowledgeModelParametersToJSON(
  updateKnowledgeRetrievalSettingsKnowledgeModelParameters:
    UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters,
): string {
  return JSON.stringify(
    UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters$outboundSchema
      .parse(updateKnowledgeRetrievalSettingsKnowledgeModelParameters),
  );
}

export function updateKnowledgeRetrievalSettingsKnowledgeModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsRerankConfigInput$inboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsRerankConfigInput,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean().optional(),
    provider: UpdateKnowledgeRetrievalSettingsKnowledgeProvider$inboundSchema
      .optional(),
    model: z.string().optional(),
    model_db_id: z.string().optional(),
    model_type: UpdateKnowledgeRetrievalSettingsKnowledgeModelType$inboundSchema
      .optional(),
    model_parameters: z.lazy(() =>
      UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "model_db_id": "modelDbId",
      "model_type": "modelType",
      "model_parameters": "modelParameters",
    });
  });

/** @internal */
export type UpdateKnowledgeRetrievalSettingsRerankConfigInput$Outbound = {
  enabled?: boolean | undefined;
  provider?: string | undefined;
  model?: string | undefined;
  model_db_id?: string | undefined;
  model_type?: string | undefined;
  model_parameters?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters$Outbound
    | undefined;
};

/** @internal */
export const UpdateKnowledgeRetrievalSettingsRerankConfigInput$outboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsRerankConfigInput$Outbound,
    z.ZodTypeDef,
    UpdateKnowledgeRetrievalSettingsRerankConfigInput
  > = z.object({
    enabled: z.boolean().optional(),
    provider: UpdateKnowledgeRetrievalSettingsKnowledgeProvider$outboundSchema
      .optional(),
    model: z.string().optional(),
    modelDbId: z.string().optional(),
    modelType: UpdateKnowledgeRetrievalSettingsKnowledgeModelType$outboundSchema
      .optional(),
    modelParameters: z.lazy(() =>
      UpdateKnowledgeRetrievalSettingsKnowledgeModelParameters$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      modelDbId: "model_db_id",
      modelType: "model_type",
      modelParameters: "model_parameters",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsRerankConfigInput$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsRerankConfigInput$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsRerankConfigInput$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsRerankConfigInput$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsRerankConfigInput$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsRerankConfigInput$Outbound` instead. */
  export type Outbound =
    UpdateKnowledgeRetrievalSettingsRerankConfigInput$Outbound;
}

export function updateKnowledgeRetrievalSettingsRerankConfigInputToJSON(
  updateKnowledgeRetrievalSettingsRerankConfigInput:
    UpdateKnowledgeRetrievalSettingsRerankConfigInput,
): string {
  return JSON.stringify(
    UpdateKnowledgeRetrievalSettingsRerankConfigInput$outboundSchema.parse(
      updateKnowledgeRetrievalSettingsRerankConfigInput,
    ),
  );
}

export function updateKnowledgeRetrievalSettingsRerankConfigInputFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateKnowledgeRetrievalSettingsRerankConfigInput,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateKnowledgeRetrievalSettingsRerankConfigInput$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateKnowledgeRetrievalSettingsRerankConfigInput' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRetrievalSettings2$inboundSchema: z.ZodType<
  UpdateKnowledgeRetrievalSettings2,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: UpdateKnowledgeRetrievalSettingsKnowledgeType$inboundSchema,
  top_k: z.number().int().default(5),
  threshold: z.number().default(0),
  rerank_config: z.nullable(
    z.lazy(() =>
      UpdateKnowledgeRetrievalSettingsRerankConfigInput$inboundSchema
    ),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "top_k": "topK",
    "rerank_config": "rerankConfig",
  });
});

/** @internal */
export type UpdateKnowledgeRetrievalSettings2$Outbound = {
  type: string;
  top_k: number;
  threshold: number;
  rerank_config?:
    | UpdateKnowledgeRetrievalSettingsRerankConfigInput$Outbound
    | null
    | undefined;
};

/** @internal */
export const UpdateKnowledgeRetrievalSettings2$outboundSchema: z.ZodType<
  UpdateKnowledgeRetrievalSettings2$Outbound,
  z.ZodTypeDef,
  UpdateKnowledgeRetrievalSettings2
> = z.object({
  type: UpdateKnowledgeRetrievalSettingsKnowledgeType$outboundSchema,
  topK: z.number().int().default(5),
  threshold: z.number().default(0),
  rerankConfig: z.nullable(
    z.lazy(() =>
      UpdateKnowledgeRetrievalSettingsRerankConfigInput$outboundSchema
    ),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    topK: "top_k",
    rerankConfig: "rerank_config",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettings2$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettings2$inboundSchema` instead. */
  export const inboundSchema = UpdateKnowledgeRetrievalSettings2$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettings2$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettings2$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettings2$Outbound` instead. */
  export type Outbound = UpdateKnowledgeRetrievalSettings2$Outbound;
}

export function updateKnowledgeRetrievalSettings2ToJSON(
  updateKnowledgeRetrievalSettings2: UpdateKnowledgeRetrievalSettings2,
): string {
  return JSON.stringify(
    UpdateKnowledgeRetrievalSettings2$outboundSchema.parse(
      updateKnowledgeRetrievalSettings2,
    ),
  );
}

export function updateKnowledgeRetrievalSettings2FromJSON(
  jsonString: string,
): SafeParseResult<UpdateKnowledgeRetrievalSettings2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateKnowledgeRetrievalSettings2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateKnowledgeRetrievalSettings2' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsType$inboundSchema:
  z.ZodNativeEnum<typeof UpdateKnowledgeRetrievalSettingsType> = z.nativeEnum(
    UpdateKnowledgeRetrievalSettingsType,
  );

/** @internal */
export const UpdateKnowledgeRetrievalSettingsType$outboundSchema:
  z.ZodNativeEnum<typeof UpdateKnowledgeRetrievalSettingsType> =
    UpdateKnowledgeRetrievalSettingsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsType$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsType$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsType$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsType$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsType$outboundSchema;
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsProvider$inboundSchema:
  z.ZodNativeEnum<typeof UpdateKnowledgeRetrievalSettingsProvider> = z
    .nativeEnum(UpdateKnowledgeRetrievalSettingsProvider);

/** @internal */
export const UpdateKnowledgeRetrievalSettingsProvider$outboundSchema:
  z.ZodNativeEnum<typeof UpdateKnowledgeRetrievalSettingsProvider> =
    UpdateKnowledgeRetrievalSettingsProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsProvider$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsProvider$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsProvider$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsProvider$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsProvider$outboundSchema;
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsModelType$inboundSchema:
  z.ZodNativeEnum<typeof UpdateKnowledgeRetrievalSettingsModelType> = z
    .nativeEnum(UpdateKnowledgeRetrievalSettingsModelType);

/** @internal */
export const UpdateKnowledgeRetrievalSettingsModelType$outboundSchema:
  z.ZodNativeEnum<typeof UpdateKnowledgeRetrievalSettingsModelType> =
    UpdateKnowledgeRetrievalSettingsModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsModelType$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsModelType$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsModelType$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsModelType$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsModelType$outboundSchema;
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsModelParameters$inboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsModelParameters,
    z.ZodTypeDef,
    unknown
  > = z.object({
    threshold: z.number().optional(),
  });

/** @internal */
export type UpdateKnowledgeRetrievalSettingsModelParameters$Outbound = {
  threshold?: number | undefined;
};

/** @internal */
export const UpdateKnowledgeRetrievalSettingsModelParameters$outboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsModelParameters$Outbound,
    z.ZodTypeDef,
    UpdateKnowledgeRetrievalSettingsModelParameters
  > = z.object({
    threshold: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsModelParameters$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsModelParameters$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsModelParameters$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsModelParameters$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsModelParameters$Outbound` instead. */
  export type Outbound =
    UpdateKnowledgeRetrievalSettingsModelParameters$Outbound;
}

export function updateKnowledgeRetrievalSettingsModelParametersToJSON(
  updateKnowledgeRetrievalSettingsModelParameters:
    UpdateKnowledgeRetrievalSettingsModelParameters,
): string {
  return JSON.stringify(
    UpdateKnowledgeRetrievalSettingsModelParameters$outboundSchema.parse(
      updateKnowledgeRetrievalSettingsModelParameters,
    ),
  );
}

export function updateKnowledgeRetrievalSettingsModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateKnowledgeRetrievalSettingsModelParameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateKnowledgeRetrievalSettingsModelParameters$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateKnowledgeRetrievalSettingsModelParameters' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsRerankConfig$inboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsRerankConfig,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean().optional(),
    provider: UpdateKnowledgeRetrievalSettingsProvider$inboundSchema.optional(),
    model: z.string().optional(),
    model_db_id: z.string().optional(),
    model_type: UpdateKnowledgeRetrievalSettingsModelType$inboundSchema
      .optional(),
    model_parameters: z.lazy(() =>
      UpdateKnowledgeRetrievalSettingsModelParameters$inboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "model_db_id": "modelDbId",
      "model_type": "modelType",
      "model_parameters": "modelParameters",
    });
  });

/** @internal */
export type UpdateKnowledgeRetrievalSettingsRerankConfig$Outbound = {
  enabled?: boolean | undefined;
  provider?: string | undefined;
  model?: string | undefined;
  model_db_id?: string | undefined;
  model_type?: string | undefined;
  model_parameters?:
    | UpdateKnowledgeRetrievalSettingsModelParameters$Outbound
    | undefined;
};

/** @internal */
export const UpdateKnowledgeRetrievalSettingsRerankConfig$outboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsRerankConfig$Outbound,
    z.ZodTypeDef,
    UpdateKnowledgeRetrievalSettingsRerankConfig
  > = z.object({
    enabled: z.boolean().optional(),
    provider: UpdateKnowledgeRetrievalSettingsProvider$outboundSchema
      .optional(),
    model: z.string().optional(),
    modelDbId: z.string().optional(),
    modelType: UpdateKnowledgeRetrievalSettingsModelType$outboundSchema
      .optional(),
    modelParameters: z.lazy(() =>
      UpdateKnowledgeRetrievalSettingsModelParameters$outboundSchema
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      modelDbId: "model_db_id",
      modelType: "model_type",
      modelParameters: "model_parameters",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsRerankConfig$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsRerankConfig$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsRerankConfig$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsRerankConfig$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsRerankConfig$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsRerankConfig$Outbound` instead. */
  export type Outbound = UpdateKnowledgeRetrievalSettingsRerankConfig$Outbound;
}

export function updateKnowledgeRetrievalSettingsRerankConfigToJSON(
  updateKnowledgeRetrievalSettingsRerankConfig:
    UpdateKnowledgeRetrievalSettingsRerankConfig,
): string {
  return JSON.stringify(
    UpdateKnowledgeRetrievalSettingsRerankConfig$outboundSchema.parse(
      updateKnowledgeRetrievalSettingsRerankConfig,
    ),
  );
}

export function updateKnowledgeRetrievalSettingsRerankConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateKnowledgeRetrievalSettingsRerankConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateKnowledgeRetrievalSettingsRerankConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateKnowledgeRetrievalSettingsRerankConfig' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRetrievalSettings1$inboundSchema: z.ZodType<
  UpdateKnowledgeRetrievalSettings1,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: UpdateKnowledgeRetrievalSettingsType$inboundSchema,
  top_k: z.number().int().default(5),
  threshold: z.number().default(0),
  rerank_config: z.nullable(
    z.lazy(() => UpdateKnowledgeRetrievalSettingsRerankConfig$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "top_k": "topK",
    "rerank_config": "rerankConfig",
  });
});

/** @internal */
export type UpdateKnowledgeRetrievalSettings1$Outbound = {
  type: string;
  top_k: number;
  threshold: number;
  rerank_config?:
    | UpdateKnowledgeRetrievalSettingsRerankConfig$Outbound
    | null
    | undefined;
};

/** @internal */
export const UpdateKnowledgeRetrievalSettings1$outboundSchema: z.ZodType<
  UpdateKnowledgeRetrievalSettings1$Outbound,
  z.ZodTypeDef,
  UpdateKnowledgeRetrievalSettings1
> = z.object({
  type: UpdateKnowledgeRetrievalSettingsType$outboundSchema,
  topK: z.number().int().default(5),
  threshold: z.number().default(0),
  rerankConfig: z.nullable(
    z.lazy(() => UpdateKnowledgeRetrievalSettingsRerankConfig$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    topK: "top_k",
    rerankConfig: "rerank_config",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettings1$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettings1$inboundSchema` instead. */
  export const inboundSchema = UpdateKnowledgeRetrievalSettings1$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettings1$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettings1$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettings1$Outbound` instead. */
  export type Outbound = UpdateKnowledgeRetrievalSettings1$Outbound;
}

export function updateKnowledgeRetrievalSettings1ToJSON(
  updateKnowledgeRetrievalSettings1: UpdateKnowledgeRetrievalSettings1,
): string {
  return JSON.stringify(
    UpdateKnowledgeRetrievalSettings1$outboundSchema.parse(
      updateKnowledgeRetrievalSettings1,
    ),
  );
}

export function updateKnowledgeRetrievalSettings1FromJSON(
  jsonString: string,
): SafeParseResult<UpdateKnowledgeRetrievalSettings1, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateKnowledgeRetrievalSettings1$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateKnowledgeRetrievalSettings1' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRetrievalSettings$inboundSchema: z.ZodType<
  UpdateKnowledgeRetrievalSettings,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => UpdateKnowledgeRetrievalSettings1$inboundSchema),
  z.lazy(() => UpdateKnowledgeRetrievalSettings2$inboundSchema),
  z.lazy(() => UpdateKnowledgeRetrievalSettings3$inboundSchema),
]);

/** @internal */
export type UpdateKnowledgeRetrievalSettings$Outbound =
  | UpdateKnowledgeRetrievalSettings1$Outbound
  | UpdateKnowledgeRetrievalSettings2$Outbound
  | UpdateKnowledgeRetrievalSettings3$Outbound;

/** @internal */
export const UpdateKnowledgeRetrievalSettings$outboundSchema: z.ZodType<
  UpdateKnowledgeRetrievalSettings$Outbound,
  z.ZodTypeDef,
  UpdateKnowledgeRetrievalSettings
> = z.union([
  z.lazy(() => UpdateKnowledgeRetrievalSettings1$outboundSchema),
  z.lazy(() => UpdateKnowledgeRetrievalSettings2$outboundSchema),
  z.lazy(() => UpdateKnowledgeRetrievalSettings3$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettings$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettings$inboundSchema` instead. */
  export const inboundSchema = UpdateKnowledgeRetrievalSettings$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettings$outboundSchema` instead. */
  export const outboundSchema = UpdateKnowledgeRetrievalSettings$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettings$Outbound` instead. */
  export type Outbound = UpdateKnowledgeRetrievalSettings$Outbound;
}

export function updateKnowledgeRetrievalSettingsToJSON(
  updateKnowledgeRetrievalSettings: UpdateKnowledgeRetrievalSettings,
): string {
  return JSON.stringify(
    UpdateKnowledgeRetrievalSettings$outboundSchema.parse(
      updateKnowledgeRetrievalSettings,
    ),
  );
}

export function updateKnowledgeRetrievalSettingsFromJSON(
  jsonString: string,
): SafeParseResult<UpdateKnowledgeRetrievalSettings, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateKnowledgeRetrievalSettings$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateKnowledgeRetrievalSettings' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRequestBody$inboundSchema: z.ZodType<
  UpdateKnowledgeRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  description: z.string().optional(),
  model: z.string().optional(),
  path: z.string().optional(),
  retrieval_settings: z.union([
    z.lazy(() => UpdateKnowledgeRetrievalSettings1$inboundSchema),
    z.lazy(() => UpdateKnowledgeRetrievalSettings2$inboundSchema),
    z.lazy(() => UpdateKnowledgeRetrievalSettings3$inboundSchema),
  ]).optional(),
}).transform((v) => {
  return remap$(v, {
    "retrieval_settings": "retrievalSettings",
  });
});

/** @internal */
export type UpdateKnowledgeRequestBody$Outbound = {
  description?: string | undefined;
  model?: string | undefined;
  path?: string | undefined;
  retrieval_settings?:
    | UpdateKnowledgeRetrievalSettings1$Outbound
    | UpdateKnowledgeRetrievalSettings2$Outbound
    | UpdateKnowledgeRetrievalSettings3$Outbound
    | undefined;
};

/** @internal */
export const UpdateKnowledgeRequestBody$outboundSchema: z.ZodType<
  UpdateKnowledgeRequestBody$Outbound,
  z.ZodTypeDef,
  UpdateKnowledgeRequestBody
> = z.object({
  description: z.string().optional(),
  model: z.string().optional(),
  path: z.string().optional(),
  retrievalSettings: z.union([
    z.lazy(() => UpdateKnowledgeRetrievalSettings1$outboundSchema),
    z.lazy(() => UpdateKnowledgeRetrievalSettings2$outboundSchema),
    z.lazy(() => UpdateKnowledgeRetrievalSettings3$outboundSchema),
  ]).optional(),
}).transform((v) => {
  return remap$(v, {
    retrievalSettings: "retrieval_settings",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRequestBody$ {
  /** @deprecated use `UpdateKnowledgeRequestBody$inboundSchema` instead. */
  export const inboundSchema = UpdateKnowledgeRequestBody$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRequestBody$outboundSchema` instead. */
  export const outboundSchema = UpdateKnowledgeRequestBody$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRequestBody$Outbound` instead. */
  export type Outbound = UpdateKnowledgeRequestBody$Outbound;
}

export function updateKnowledgeRequestBodyToJSON(
  updateKnowledgeRequestBody: UpdateKnowledgeRequestBody,
): string {
  return JSON.stringify(
    UpdateKnowledgeRequestBody$outboundSchema.parse(updateKnowledgeRequestBody),
  );
}

export function updateKnowledgeRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateKnowledgeRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateKnowledgeRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateKnowledgeRequestBody' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRequest$inboundSchema: z.ZodType<
  UpdateKnowledgeRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  knowledge_id: z.string(),
  RequestBody: z.lazy(() => UpdateKnowledgeRequestBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "knowledge_id": "knowledgeId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type UpdateKnowledgeRequest$Outbound = {
  knowledge_id: string;
  RequestBody: UpdateKnowledgeRequestBody$Outbound;
};

/** @internal */
export const UpdateKnowledgeRequest$outboundSchema: z.ZodType<
  UpdateKnowledgeRequest$Outbound,
  z.ZodTypeDef,
  UpdateKnowledgeRequest
> = z.object({
  knowledgeId: z.string(),
  requestBody: z.lazy(() => UpdateKnowledgeRequestBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    knowledgeId: "knowledge_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRequest$ {
  /** @deprecated use `UpdateKnowledgeRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateKnowledgeRequest$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateKnowledgeRequest$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRequest$Outbound` instead. */
  export type Outbound = UpdateKnowledgeRequest$Outbound;
}

export function updateKnowledgeRequestToJSON(
  updateKnowledgeRequest: UpdateKnowledgeRequest,
): string {
  return JSON.stringify(
    UpdateKnowledgeRequest$outboundSchema.parse(updateKnowledgeRequest),
  );
}

export function updateKnowledgeRequestFromJSON(
  jsonString: string,
): SafeParseResult<UpdateKnowledgeRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateKnowledgeRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateKnowledgeRequest' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeMetadata$inboundSchema: z.ZodType<
  UpdateKnowledgeMetadata,
  z.ZodTypeDef,
  unknown
> = z.object({
  word_count: z.number().int().default(0),
  document_count: z.number().int().default(0),
  sentences_count: z.number().int().default(0),
}).transform((v) => {
  return remap$(v, {
    "word_count": "wordCount",
    "document_count": "documentCount",
    "sentences_count": "sentencesCount",
  });
});

/** @internal */
export type UpdateKnowledgeMetadata$Outbound = {
  word_count: number;
  document_count: number;
  sentences_count: number;
};

/** @internal */
export const UpdateKnowledgeMetadata$outboundSchema: z.ZodType<
  UpdateKnowledgeMetadata$Outbound,
  z.ZodTypeDef,
  UpdateKnowledgeMetadata
> = z.object({
  wordCount: z.number().int().default(0),
  documentCount: z.number().int().default(0),
  sentencesCount: z.number().int().default(0),
}).transform((v) => {
  return remap$(v, {
    wordCount: "word_count",
    documentCount: "document_count",
    sentencesCount: "sentences_count",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeMetadata$ {
  /** @deprecated use `UpdateKnowledgeMetadata$inboundSchema` instead. */
  export const inboundSchema = UpdateKnowledgeMetadata$inboundSchema;
  /** @deprecated use `UpdateKnowledgeMetadata$outboundSchema` instead. */
  export const outboundSchema = UpdateKnowledgeMetadata$outboundSchema;
  /** @deprecated use `UpdateKnowledgeMetadata$Outbound` instead. */
  export type Outbound = UpdateKnowledgeMetadata$Outbound;
}

export function updateKnowledgeMetadataToJSON(
  updateKnowledgeMetadata: UpdateKnowledgeMetadata,
): string {
  return JSON.stringify(
    UpdateKnowledgeMetadata$outboundSchema.parse(updateKnowledgeMetadata),
  );
}

export function updateKnowledgeMetadataFromJSON(
  jsonString: string,
): SafeParseResult<UpdateKnowledgeMetadata, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateKnowledgeMetadata$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateKnowledgeMetadata' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONType$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONType
  > = z.nativeEnum(
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONType,
  );

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONType$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONType
  > =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONType$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONType$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONType$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONType$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONType$outboundSchema;
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONProvider$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONProvider
  > = z.nativeEnum(
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONProvider,
  );

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONProvider$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONProvider
  > =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONProvider$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONProvider$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONProvider$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONProvider$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONProvider$outboundSchema;
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelType$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelType
  > = z.nativeEnum(
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelType,
  );

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelType$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelType
  > =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelType$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelType$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelType$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelType$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelType$outboundSchema;
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters$inboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters,
    z.ZodTypeDef,
    unknown
  > = z.object({
    threshold: z.number().optional(),
  });

/** @internal */
export type UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters$Outbound =
  {
    threshold?: number | undefined;
  };

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters$outboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters$Outbound,
    z.ZodTypeDef,
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters
  > = z.object({
    threshold: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters$Outbound` instead. */
  export type Outbound =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters$Outbound;
}

export function updateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParametersToJSON(
  updateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters:
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters,
): string {
  return JSON.stringify(
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters$outboundSchema
      .parse(
        updateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters,
      ),
  );
}

export function updateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig$inboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean().optional(),
    provider:
      UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONProvider$inboundSchema
        .optional(),
    model: z.string().optional(),
    model_db_id: z.string().optional(),
    model_type:
      UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelType$inboundSchema
        .optional(),
    model_parameters: z.lazy(() =>
      UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters$inboundSchema
    ).optional(),
    integration_id: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "model_db_id": "modelDbId",
      "model_type": "modelType",
      "model_parameters": "modelParameters",
      "integration_id": "integrationId",
    });
  });

/** @internal */
export type UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig$Outbound =
  {
    enabled?: boolean | undefined;
    provider?: string | undefined;
    model?: string | undefined;
    model_db_id?: string | undefined;
    model_type?: string | undefined;
    model_parameters?:
      | UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters$Outbound
      | undefined;
    integration_id?: string | null | undefined;
  };

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig$outboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig$Outbound,
    z.ZodTypeDef,
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig
  > = z.object({
    enabled: z.boolean().optional(),
    provider:
      UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONProvider$outboundSchema
        .optional(),
    model: z.string().optional(),
    modelDbId: z.string().optional(),
    modelType:
      UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelType$outboundSchema
        .optional(),
    modelParameters: z.lazy(() =>
      UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONModelParameters$outboundSchema
    ).optional(),
    integrationId: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      modelDbId: "model_db_id",
      modelType: "model_type",
      modelParameters: "model_parameters",
      integrationId: "integration_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig$Outbound` instead. */
  export type Outbound =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig$Outbound;
}

export function updateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfigToJSON(
  updateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig:
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig,
): string {
  return JSON.stringify(
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig$outboundSchema
      .parse(updateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig),
  );
}

export function updateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledge3$inboundSchema:
  z.ZodType<UpdateKnowledgeRetrievalSettingsKnowledge3, z.ZodTypeDef, unknown> =
    z.object({
      type:
        UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONType$inboundSchema,
      top_k: z.number().int().default(5),
      threshold: z.number().default(0),
      rerank_config: z.nullable(
        z.lazy(() =>
          UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig$inboundSchema
        ),
      ).optional(),
    }).transform((v) => {
      return remap$(v, {
        "top_k": "topK",
        "rerank_config": "rerankConfig",
      });
    });

/** @internal */
export type UpdateKnowledgeRetrievalSettingsKnowledge3$Outbound = {
  type: string;
  top_k: number;
  threshold: number;
  rerank_config?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig$Outbound
    | null
    | undefined;
};

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledge3$outboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledge3$Outbound,
    z.ZodTypeDef,
    UpdateKnowledgeRetrievalSettingsKnowledge3
  > = z.object({
    type:
      UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ApplicationJSONType$outboundSchema,
    topK: z.number().int().default(5),
    threshold: z.number().default(0),
    rerankConfig: z.nullable(
      z.lazy(() =>
        UpdateKnowledgeRetrievalSettingsKnowledgeResponse200RerankConfig$outboundSchema
      ),
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      topK: "top_k",
      rerankConfig: "rerank_config",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledge3$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledge3$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledge3$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledge3$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledge3$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledge3$Outbound` instead. */
  export type Outbound = UpdateKnowledgeRetrievalSettingsKnowledge3$Outbound;
}

export function updateKnowledgeRetrievalSettingsKnowledge3ToJSON(
  updateKnowledgeRetrievalSettingsKnowledge3:
    UpdateKnowledgeRetrievalSettingsKnowledge3,
): string {
  return JSON.stringify(
    UpdateKnowledgeRetrievalSettingsKnowledge3$outboundSchema.parse(
      updateKnowledgeRetrievalSettingsKnowledge3,
    ),
  );
}

export function updateKnowledgeRetrievalSettingsKnowledge3FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateKnowledgeRetrievalSettingsKnowledge3,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateKnowledgeRetrievalSettingsKnowledge3$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateKnowledgeRetrievalSettingsKnowledge3' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Type$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Type
  > = z.nativeEnum(UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Type);

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Type$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Type
  > = UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Type$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Type$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Type$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Type$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Type$outboundSchema;
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Provider$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Provider
  > = z.nativeEnum(
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Provider,
  );

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Provider$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Provider
  > =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Provider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Provider$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Provider$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Provider$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Provider$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Provider$outboundSchema;
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelType$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelType
  > = z.nativeEnum(
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelType,
  );

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelType$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelType
  > =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelType$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelType$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelType$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelType$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelType$outboundSchema;
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters$inboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters,
    z.ZodTypeDef,
    unknown
  > = z.object({
    threshold: z.number().optional(),
  });

/** @internal */
export type UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters$Outbound =
  {
    threshold?: number | undefined;
  };

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters$outboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters$Outbound,
    z.ZodTypeDef,
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters
  > = z.object({
    threshold: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters$Outbound` instead. */
  export type Outbound =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters$Outbound;
}

export function updateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParametersToJSON(
  updateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters:
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters,
): string {
  return JSON.stringify(
    UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters$outboundSchema
      .parse(
        updateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters,
      ),
  );
}

export function updateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig$inboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean().optional(),
    provider:
      UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Provider$inboundSchema
        .optional(),
    model: z.string().optional(),
    model_db_id: z.string().optional(),
    model_type:
      UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelType$inboundSchema
        .optional(),
    model_parameters: z.lazy(() =>
      UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters$inboundSchema
    ).optional(),
    integration_id: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "model_db_id": "modelDbId",
      "model_type": "modelType",
      "model_parameters": "modelParameters",
      "integration_id": "integrationId",
    });
  });

/** @internal */
export type UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig$Outbound =
  {
    enabled?: boolean | undefined;
    provider?: string | undefined;
    model?: string | undefined;
    model_db_id?: string | undefined;
    model_type?: string | undefined;
    model_parameters?:
      | UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters$Outbound
      | undefined;
    integration_id?: string | null | undefined;
  };

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig$outboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig$Outbound,
    z.ZodTypeDef,
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig
  > = z.object({
    enabled: z.boolean().optional(),
    provider:
      UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Provider$outboundSchema
        .optional(),
    model: z.string().optional(),
    modelDbId: z.string().optional(),
    modelType:
      UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelType$outboundSchema
        .optional(),
    modelParameters: z.lazy(() =>
      UpdateKnowledgeRetrievalSettingsKnowledgeResponse200ModelParameters$outboundSchema
    ).optional(),
    integrationId: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      modelDbId: "model_db_id",
      modelType: "model_type",
      modelParameters: "model_parameters",
      integrationId: "integration_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig$Outbound` instead. */
  export type Outbound =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig$Outbound;
}

export function updateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfigToJSON(
  updateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig:
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig,
): string {
  return JSON.stringify(
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig$outboundSchema
      .parse(updateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig),
  );
}

export function updateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledge2$inboundSchema:
  z.ZodType<UpdateKnowledgeRetrievalSettingsKnowledge2, z.ZodTypeDef, unknown> =
    z.object({
      type:
        UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Type$inboundSchema,
      top_k: z.number().int().default(5),
      threshold: z.number().default(0),
      rerank_config: z.nullable(
        z.lazy(() =>
          UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig$inboundSchema
        ),
      ).optional(),
    }).transform((v) => {
      return remap$(v, {
        "top_k": "topK",
        "rerank_config": "rerankConfig",
      });
    });

/** @internal */
export type UpdateKnowledgeRetrievalSettingsKnowledge2$Outbound = {
  type: string;
  top_k: number;
  threshold: number;
  rerank_config?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig$Outbound
    | null
    | undefined;
};

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledge2$outboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledge2$Outbound,
    z.ZodTypeDef,
    UpdateKnowledgeRetrievalSettingsKnowledge2
  > = z.object({
    type:
      UpdateKnowledgeRetrievalSettingsKnowledgeResponse200Type$outboundSchema,
    topK: z.number().int().default(5),
    threshold: z.number().default(0),
    rerankConfig: z.nullable(
      z.lazy(() =>
        UpdateKnowledgeRetrievalSettingsKnowledgeResponseRerankConfig$outboundSchema
      ),
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      topK: "top_k",
      rerankConfig: "rerank_config",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledge2$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledge2$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledge2$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledge2$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledge2$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledge2$Outbound` instead. */
  export type Outbound = UpdateKnowledgeRetrievalSettingsKnowledge2$Outbound;
}

export function updateKnowledgeRetrievalSettingsKnowledge2ToJSON(
  updateKnowledgeRetrievalSettingsKnowledge2:
    UpdateKnowledgeRetrievalSettingsKnowledge2,
): string {
  return JSON.stringify(
    UpdateKnowledgeRetrievalSettingsKnowledge2$outboundSchema.parse(
      updateKnowledgeRetrievalSettingsKnowledge2,
    ),
  );
}

export function updateKnowledgeRetrievalSettingsKnowledge2FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateKnowledgeRetrievalSettingsKnowledge2,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateKnowledgeRetrievalSettingsKnowledge2$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateKnowledgeRetrievalSettingsKnowledge2' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponseType$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponseType
  > = z.nativeEnum(UpdateKnowledgeRetrievalSettingsKnowledgeResponseType);

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponseType$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponseType
  > = UpdateKnowledgeRetrievalSettingsKnowledgeResponseType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeResponseType$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponseType$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseType$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponseType$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseType$outboundSchema;
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponseProvider$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponseProvider
  > = z.nativeEnum(UpdateKnowledgeRetrievalSettingsKnowledgeResponseProvider);

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponseProvider$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponseProvider
  > = UpdateKnowledgeRetrievalSettingsKnowledgeResponseProvider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeResponseProvider$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponseProvider$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseProvider$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponseProvider$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseProvider$outboundSchema;
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelType$inboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelType
  > = z.nativeEnum(UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelType);

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelType$outboundSchema:
  z.ZodNativeEnum<
    typeof UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelType
  > = UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelType$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelType$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelType$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelType$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelType$outboundSchema;
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters$inboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters,
    z.ZodTypeDef,
    unknown
  > = z.object({
    threshold: z.number().optional(),
  });

/** @internal */
export type UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters$Outbound =
  {
    threshold?: number | undefined;
  };

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters$outboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters$Outbound,
    z.ZodTypeDef,
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters
  > = z.object({
    threshold: z.number().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters$Outbound` instead. */
  export type Outbound =
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters$Outbound;
}

export function updateKnowledgeRetrievalSettingsKnowledgeResponseModelParametersToJSON(
  updateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters:
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters,
): string {
  return JSON.stringify(
    UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters$outboundSchema
      .parse(updateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters),
  );
}

export function updateKnowledgeRetrievalSettingsKnowledgeResponseModelParametersFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig$inboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig,
    z.ZodTypeDef,
    unknown
  > = z.object({
    enabled: z.boolean().optional(),
    provider:
      UpdateKnowledgeRetrievalSettingsKnowledgeResponseProvider$inboundSchema
        .optional(),
    model: z.string().optional(),
    model_db_id: z.string().optional(),
    model_type:
      UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelType$inboundSchema
        .optional(),
    model_parameters: z.lazy(() =>
      UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters$inboundSchema
    ).optional(),
    integration_id: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      "model_db_id": "modelDbId",
      "model_type": "modelType",
      "model_parameters": "modelParameters",
      "integration_id": "integrationId",
    });
  });

/** @internal */
export type UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig$Outbound = {
  enabled?: boolean | undefined;
  provider?: string | undefined;
  model?: string | undefined;
  model_db_id?: string | undefined;
  model_type?: string | undefined;
  model_parameters?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters$Outbound
    | undefined;
  integration_id?: string | null | undefined;
};

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig$outboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig$Outbound,
    z.ZodTypeDef,
    UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig
  > = z.object({
    enabled: z.boolean().optional(),
    provider:
      UpdateKnowledgeRetrievalSettingsKnowledgeResponseProvider$outboundSchema
        .optional(),
    model: z.string().optional(),
    modelDbId: z.string().optional(),
    modelType:
      UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelType$outboundSchema
        .optional(),
    modelParameters: z.lazy(() =>
      UpdateKnowledgeRetrievalSettingsKnowledgeResponseModelParameters$outboundSchema
    ).optional(),
    integrationId: z.nullable(z.string()).optional(),
  }).transform((v) => {
    return remap$(v, {
      modelDbId: "model_db_id",
      modelType: "model_type",
      modelParameters: "model_parameters",
      integrationId: "integration_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig$Outbound` instead. */
  export type Outbound =
    UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig$Outbound;
}

export function updateKnowledgeRetrievalSettingsKnowledgeRerankConfigToJSON(
  updateKnowledgeRetrievalSettingsKnowledgeRerankConfig:
    UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig,
): string {
  return JSON.stringify(
    UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig$outboundSchema.parse(
      updateKnowledgeRetrievalSettingsKnowledgeRerankConfig,
    ),
  );
}

export function updateKnowledgeRetrievalSettingsKnowledgeRerankConfigFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledge1$inboundSchema:
  z.ZodType<UpdateKnowledgeRetrievalSettingsKnowledge1, z.ZodTypeDef, unknown> =
    z.object({
      type: UpdateKnowledgeRetrievalSettingsKnowledgeResponseType$inboundSchema,
      top_k: z.number().int().default(5),
      threshold: z.number().default(0),
      rerank_config: z.nullable(
        z.lazy(() =>
          UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig$inboundSchema
        ),
      ).optional(),
    }).transform((v) => {
      return remap$(v, {
        "top_k": "topK",
        "rerank_config": "rerankConfig",
      });
    });

/** @internal */
export type UpdateKnowledgeRetrievalSettingsKnowledge1$Outbound = {
  type: string;
  top_k: number;
  threshold: number;
  rerank_config?:
    | UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig$Outbound
    | null
    | undefined;
};

/** @internal */
export const UpdateKnowledgeRetrievalSettingsKnowledge1$outboundSchema:
  z.ZodType<
    UpdateKnowledgeRetrievalSettingsKnowledge1$Outbound,
    z.ZodTypeDef,
    UpdateKnowledgeRetrievalSettingsKnowledge1
  > = z.object({
    type: UpdateKnowledgeRetrievalSettingsKnowledgeResponseType$outboundSchema,
    topK: z.number().int().default(5),
    threshold: z.number().default(0),
    rerankConfig: z.nullable(
      z.lazy(() =>
        UpdateKnowledgeRetrievalSettingsKnowledgeRerankConfig$outboundSchema
      ),
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      topK: "top_k",
      rerankConfig: "rerank_config",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeRetrievalSettingsKnowledge1$ {
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledge1$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledge1$inboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledge1$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeRetrievalSettingsKnowledge1$outboundSchema;
  /** @deprecated use `UpdateKnowledgeRetrievalSettingsKnowledge1$Outbound` instead. */
  export type Outbound = UpdateKnowledgeRetrievalSettingsKnowledge1$Outbound;
}

export function updateKnowledgeRetrievalSettingsKnowledge1ToJSON(
  updateKnowledgeRetrievalSettingsKnowledge1:
    UpdateKnowledgeRetrievalSettingsKnowledge1,
): string {
  return JSON.stringify(
    UpdateKnowledgeRetrievalSettingsKnowledge1$outboundSchema.parse(
      updateKnowledgeRetrievalSettingsKnowledge1,
    ),
  );
}

export function updateKnowledgeRetrievalSettingsKnowledge1FromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateKnowledgeRetrievalSettingsKnowledge1,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateKnowledgeRetrievalSettingsKnowledge1$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateKnowledgeRetrievalSettingsKnowledge1' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeKnowledgeRetrievalSettings$inboundSchema: z.ZodType<
  UpdateKnowledgeKnowledgeRetrievalSettings,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => UpdateKnowledgeRetrievalSettingsKnowledge1$inboundSchema),
  z.lazy(() => UpdateKnowledgeRetrievalSettingsKnowledge2$inboundSchema),
  z.lazy(() => UpdateKnowledgeRetrievalSettingsKnowledge3$inboundSchema),
]);

/** @internal */
export type UpdateKnowledgeKnowledgeRetrievalSettings$Outbound =
  | UpdateKnowledgeRetrievalSettingsKnowledge1$Outbound
  | UpdateKnowledgeRetrievalSettingsKnowledge2$Outbound
  | UpdateKnowledgeRetrievalSettingsKnowledge3$Outbound;

/** @internal */
export const UpdateKnowledgeKnowledgeRetrievalSettings$outboundSchema:
  z.ZodType<
    UpdateKnowledgeKnowledgeRetrievalSettings$Outbound,
    z.ZodTypeDef,
    UpdateKnowledgeKnowledgeRetrievalSettings
  > = z.union([
    z.lazy(() => UpdateKnowledgeRetrievalSettingsKnowledge1$outboundSchema),
    z.lazy(() => UpdateKnowledgeRetrievalSettingsKnowledge2$outboundSchema),
    z.lazy(() => UpdateKnowledgeRetrievalSettingsKnowledge3$outboundSchema),
  ]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeKnowledgeRetrievalSettings$ {
  /** @deprecated use `UpdateKnowledgeKnowledgeRetrievalSettings$inboundSchema` instead. */
  export const inboundSchema =
    UpdateKnowledgeKnowledgeRetrievalSettings$inboundSchema;
  /** @deprecated use `UpdateKnowledgeKnowledgeRetrievalSettings$outboundSchema` instead. */
  export const outboundSchema =
    UpdateKnowledgeKnowledgeRetrievalSettings$outboundSchema;
  /** @deprecated use `UpdateKnowledgeKnowledgeRetrievalSettings$Outbound` instead. */
  export type Outbound = UpdateKnowledgeKnowledgeRetrievalSettings$Outbound;
}

export function updateKnowledgeKnowledgeRetrievalSettingsToJSON(
  updateKnowledgeKnowledgeRetrievalSettings:
    UpdateKnowledgeKnowledgeRetrievalSettings,
): string {
  return JSON.stringify(
    UpdateKnowledgeKnowledgeRetrievalSettings$outboundSchema.parse(
      updateKnowledgeKnowledgeRetrievalSettings,
    ),
  );
}

export function updateKnowledgeKnowledgeRetrievalSettingsFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateKnowledgeKnowledgeRetrievalSettings,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateKnowledgeKnowledgeRetrievalSettings$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateKnowledgeKnowledgeRetrievalSettings' from JSON`,
  );
}

/** @internal */
export const UpdateKnowledgeResponseBody$inboundSchema: z.ZodType<
  UpdateKnowledgeResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  _id: z.string(),
  created_by_id: z.string(),
  created: z.string(),
  description: z.string().optional(),
  key: z.string(),
  metadata: z.lazy(() => UpdateKnowledgeMetadata$inboundSchema),
  model: z.string(),
  path: z.string().optional(),
  retrieval_settings: z.union([
    z.lazy(() => UpdateKnowledgeRetrievalSettingsKnowledge1$inboundSchema),
    z.lazy(() => UpdateKnowledgeRetrievalSettingsKnowledge2$inboundSchema),
    z.lazy(() => UpdateKnowledgeRetrievalSettingsKnowledge3$inboundSchema),
  ]),
  update_by_id: z.string(),
  updated: z.string(),
}).transform((v) => {
  return remap$(v, {
    "_id": "id",
    "created_by_id": "createdById",
    "retrieval_settings": "retrievalSettings",
    "update_by_id": "updateById",
  });
});

/** @internal */
export type UpdateKnowledgeResponseBody$Outbound = {
  _id: string;
  created_by_id: string;
  created: string;
  description?: string | undefined;
  key: string;
  metadata: UpdateKnowledgeMetadata$Outbound;
  model: string;
  path?: string | undefined;
  retrieval_settings:
    | UpdateKnowledgeRetrievalSettingsKnowledge1$Outbound
    | UpdateKnowledgeRetrievalSettingsKnowledge2$Outbound
    | UpdateKnowledgeRetrievalSettingsKnowledge3$Outbound;
  update_by_id: string;
  updated: string;
};

/** @internal */
export const UpdateKnowledgeResponseBody$outboundSchema: z.ZodType<
  UpdateKnowledgeResponseBody$Outbound,
  z.ZodTypeDef,
  UpdateKnowledgeResponseBody
> = z.object({
  id: z.string(),
  createdById: z.string(),
  created: z.string(),
  description: z.string().optional(),
  key: z.string(),
  metadata: z.lazy(() => UpdateKnowledgeMetadata$outboundSchema),
  model: z.string(),
  path: z.string().optional(),
  retrievalSettings: z.union([
    z.lazy(() => UpdateKnowledgeRetrievalSettingsKnowledge1$outboundSchema),
    z.lazy(() => UpdateKnowledgeRetrievalSettingsKnowledge2$outboundSchema),
    z.lazy(() => UpdateKnowledgeRetrievalSettingsKnowledge3$outboundSchema),
  ]),
  updateById: z.string(),
  updated: z.string(),
}).transform((v) => {
  return remap$(v, {
    id: "_id",
    createdById: "created_by_id",
    retrievalSettings: "retrieval_settings",
    updateById: "update_by_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateKnowledgeResponseBody$ {
  /** @deprecated use `UpdateKnowledgeResponseBody$inboundSchema` instead. */
  export const inboundSchema = UpdateKnowledgeResponseBody$inboundSchema;
  /** @deprecated use `UpdateKnowledgeResponseBody$outboundSchema` instead. */
  export const outboundSchema = UpdateKnowledgeResponseBody$outboundSchema;
  /** @deprecated use `UpdateKnowledgeResponseBody$Outbound` instead. */
  export type Outbound = UpdateKnowledgeResponseBody$Outbound;
}

export function updateKnowledgeResponseBodyToJSON(
  updateKnowledgeResponseBody: UpdateKnowledgeResponseBody,
): string {
  return JSON.stringify(
    UpdateKnowledgeResponseBody$outboundSchema.parse(
      updateKnowledgeResponseBody,
    ),
  );
}

export function updateKnowledgeResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<UpdateKnowledgeResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateKnowledgeResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateKnowledgeResponseBody' from JSON`,
  );
}
