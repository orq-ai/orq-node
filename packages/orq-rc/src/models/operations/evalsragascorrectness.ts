/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type EvalsRagasCorrectnessRequestBody = {
  /**
   * Latest user message
   */
  input: string;
  /**
   * The generated response from the model
   */
  output: string;
  model: string;
  /**
   * The reference used to compare the output
   */
  reference?: string | undefined;
};

/**
 * Returns the correctness evaluation result
 */
export type EvalsRagasCorrectnessResponseBody = {
  value: number | null;
};

/** @internal */
export const EvalsRagasCorrectnessRequestBody$inboundSchema: z.ZodType<
  EvalsRagasCorrectnessRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  input: z.string(),
  output: z.string(),
  model: z.string(),
  reference: z.string().optional(),
});

/** @internal */
export type EvalsRagasCorrectnessRequestBody$Outbound = {
  input: string;
  output: string;
  model: string;
  reference?: string | undefined;
};

/** @internal */
export const EvalsRagasCorrectnessRequestBody$outboundSchema: z.ZodType<
  EvalsRagasCorrectnessRequestBody$Outbound,
  z.ZodTypeDef,
  EvalsRagasCorrectnessRequestBody
> = z.object({
  input: z.string(),
  output: z.string(),
  model: z.string(),
  reference: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsRagasCorrectnessRequestBody$ {
  /** @deprecated use `EvalsRagasCorrectnessRequestBody$inboundSchema` instead. */
  export const inboundSchema = EvalsRagasCorrectnessRequestBody$inboundSchema;
  /** @deprecated use `EvalsRagasCorrectnessRequestBody$outboundSchema` instead. */
  export const outboundSchema = EvalsRagasCorrectnessRequestBody$outboundSchema;
  /** @deprecated use `EvalsRagasCorrectnessRequestBody$Outbound` instead. */
  export type Outbound = EvalsRagasCorrectnessRequestBody$Outbound;
}

export function evalsRagasCorrectnessRequestBodyToJSON(
  evalsRagasCorrectnessRequestBody: EvalsRagasCorrectnessRequestBody,
): string {
  return JSON.stringify(
    EvalsRagasCorrectnessRequestBody$outboundSchema.parse(
      evalsRagasCorrectnessRequestBody,
    ),
  );
}

export function evalsRagasCorrectnessRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<EvalsRagasCorrectnessRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EvalsRagasCorrectnessRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EvalsRagasCorrectnessRequestBody' from JSON`,
  );
}

/** @internal */
export const EvalsRagasCorrectnessResponseBody$inboundSchema: z.ZodType<
  EvalsRagasCorrectnessResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.nullable(z.number()),
});

/** @internal */
export type EvalsRagasCorrectnessResponseBody$Outbound = {
  value: number | null;
};

/** @internal */
export const EvalsRagasCorrectnessResponseBody$outboundSchema: z.ZodType<
  EvalsRagasCorrectnessResponseBody$Outbound,
  z.ZodTypeDef,
  EvalsRagasCorrectnessResponseBody
> = z.object({
  value: z.nullable(z.number()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsRagasCorrectnessResponseBody$ {
  /** @deprecated use `EvalsRagasCorrectnessResponseBody$inboundSchema` instead. */
  export const inboundSchema = EvalsRagasCorrectnessResponseBody$inboundSchema;
  /** @deprecated use `EvalsRagasCorrectnessResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsRagasCorrectnessResponseBody$outboundSchema;
  /** @deprecated use `EvalsRagasCorrectnessResponseBody$Outbound` instead. */
  export type Outbound = EvalsRagasCorrectnessResponseBody$Outbound;
}

export function evalsRagasCorrectnessResponseBodyToJSON(
  evalsRagasCorrectnessResponseBody: EvalsRagasCorrectnessResponseBody,
): string {
  return JSON.stringify(
    EvalsRagasCorrectnessResponseBody$outboundSchema.parse(
      evalsRagasCorrectnessResponseBody,
    ),
  );
}

export function evalsRagasCorrectnessResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<EvalsRagasCorrectnessResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => EvalsRagasCorrectnessResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'EvalsRagasCorrectnessResponseBody' from JSON`,
  );
}
