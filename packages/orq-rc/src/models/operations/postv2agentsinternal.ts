/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostV2AgentsInternalRequestBody = {
  /**
   * The path where the entity is stored in the project structure. The first element of the path always represents the project name. Any subsequent path element after the project will be created as a folder in the project if it does not exists.
   */
  path: string;
  key: string;
  description: string;
  instructions: string;
  model: string;
  /**
   * Optional array of fallback model IDs to use when the primary model fails
   */
  fallbackModels?: Array<string> | undefined;
};

/** @internal */
export const PostV2AgentsInternalRequestBody$inboundSchema: z.ZodType<
  PostV2AgentsInternalRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  path: z.string(),
  key: z.string(),
  description: z.string(),
  instructions: z.string(),
  model: z.string(),
  fallback_models: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "fallback_models": "fallbackModels",
  });
});

/** @internal */
export type PostV2AgentsInternalRequestBody$Outbound = {
  path: string;
  key: string;
  description: string;
  instructions: string;
  model: string;
  fallback_models?: Array<string> | undefined;
};

/** @internal */
export const PostV2AgentsInternalRequestBody$outboundSchema: z.ZodType<
  PostV2AgentsInternalRequestBody$Outbound,
  z.ZodTypeDef,
  PostV2AgentsInternalRequestBody
> = z.object({
  path: z.string(),
  key: z.string(),
  description: z.string(),
  instructions: z.string(),
  model: z.string(),
  fallbackModels: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    fallbackModels: "fallback_models",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2AgentsInternalRequestBody$ {
  /** @deprecated use `PostV2AgentsInternalRequestBody$inboundSchema` instead. */
  export const inboundSchema = PostV2AgentsInternalRequestBody$inboundSchema;
  /** @deprecated use `PostV2AgentsInternalRequestBody$outboundSchema` instead. */
  export const outboundSchema = PostV2AgentsInternalRequestBody$outboundSchema;
  /** @deprecated use `PostV2AgentsInternalRequestBody$Outbound` instead. */
  export type Outbound = PostV2AgentsInternalRequestBody$Outbound;
}

export function postV2AgentsInternalRequestBodyToJSON(
  postV2AgentsInternalRequestBody: PostV2AgentsInternalRequestBody,
): string {
  return JSON.stringify(
    PostV2AgentsInternalRequestBody$outboundSchema.parse(
      postV2AgentsInternalRequestBody,
    ),
  );
}

export function postV2AgentsInternalRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<PostV2AgentsInternalRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2AgentsInternalRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2AgentsInternalRequestBody' from JSON`,
  );
}
