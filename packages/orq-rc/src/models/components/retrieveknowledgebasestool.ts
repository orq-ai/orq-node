/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const RetrieveKnowledgeBasesToolType = {
  RetrieveKnowledgeBases: "retrieve_knowledge_bases",
} as const;
export type RetrieveKnowledgeBasesToolType = ClosedEnum<
  typeof RetrieveKnowledgeBasesToolType
>;

/**
 * Lists available knowledge bases
 */
export type RetrieveKnowledgeBasesTool = {
  type: RetrieveKnowledgeBasesToolType;
  requiresApproval?: boolean | undefined;
};

/** @internal */
export const RetrieveKnowledgeBasesToolType$inboundSchema: z.ZodNativeEnum<
  typeof RetrieveKnowledgeBasesToolType
> = z.nativeEnum(RetrieveKnowledgeBasesToolType);

/** @internal */
export const RetrieveKnowledgeBasesToolType$outboundSchema: z.ZodNativeEnum<
  typeof RetrieveKnowledgeBasesToolType
> = RetrieveKnowledgeBasesToolType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetrieveKnowledgeBasesToolType$ {
  /** @deprecated use `RetrieveKnowledgeBasesToolType$inboundSchema` instead. */
  export const inboundSchema = RetrieveKnowledgeBasesToolType$inboundSchema;
  /** @deprecated use `RetrieveKnowledgeBasesToolType$outboundSchema` instead. */
  export const outboundSchema = RetrieveKnowledgeBasesToolType$outboundSchema;
}

/** @internal */
export const RetrieveKnowledgeBasesTool$inboundSchema: z.ZodType<
  RetrieveKnowledgeBasesTool,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: RetrieveKnowledgeBasesToolType$inboundSchema,
  requires_approval: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    "requires_approval": "requiresApproval",
  });
});

/** @internal */
export type RetrieveKnowledgeBasesTool$Outbound = {
  type: string;
  requires_approval: boolean;
};

/** @internal */
export const RetrieveKnowledgeBasesTool$outboundSchema: z.ZodType<
  RetrieveKnowledgeBasesTool$Outbound,
  z.ZodTypeDef,
  RetrieveKnowledgeBasesTool
> = z.object({
  type: RetrieveKnowledgeBasesToolType$outboundSchema,
  requiresApproval: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    requiresApproval: "requires_approval",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetrieveKnowledgeBasesTool$ {
  /** @deprecated use `RetrieveKnowledgeBasesTool$inboundSchema` instead. */
  export const inboundSchema = RetrieveKnowledgeBasesTool$inboundSchema;
  /** @deprecated use `RetrieveKnowledgeBasesTool$outboundSchema` instead. */
  export const outboundSchema = RetrieveKnowledgeBasesTool$outboundSchema;
  /** @deprecated use `RetrieveKnowledgeBasesTool$Outbound` instead. */
  export type Outbound = RetrieveKnowledgeBasesTool$Outbound;
}

export function retrieveKnowledgeBasesToolToJSON(
  retrieveKnowledgeBasesTool: RetrieveKnowledgeBasesTool,
): string {
  return JSON.stringify(
    RetrieveKnowledgeBasesTool$outboundSchema.parse(retrieveKnowledgeBasesTool),
  );
}

export function retrieveKnowledgeBasesToolFromJSON(
  jsonString: string,
): SafeParseResult<RetrieveKnowledgeBasesTool, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RetrieveKnowledgeBasesTool$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RetrieveKnowledgeBasesTool' from JSON`,
  );
}
