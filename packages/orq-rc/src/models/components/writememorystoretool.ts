/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const WriteMemoryStoreToolType = {
  WriteMemoryStore: "write_memory_store",
} as const;
export type WriteMemoryStoreToolType = ClosedEnum<
  typeof WriteMemoryStoreToolType
>;

/**
 * Writes information to agent memory stores
 */
export type WriteMemoryStoreTool = {
  type: WriteMemoryStoreToolType;
  requiresApproval?: boolean | undefined;
};

/** @internal */
export const WriteMemoryStoreToolType$inboundSchema: z.ZodNativeEnum<
  typeof WriteMemoryStoreToolType
> = z.nativeEnum(WriteMemoryStoreToolType);

/** @internal */
export const WriteMemoryStoreToolType$outboundSchema: z.ZodNativeEnum<
  typeof WriteMemoryStoreToolType
> = WriteMemoryStoreToolType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WriteMemoryStoreToolType$ {
  /** @deprecated use `WriteMemoryStoreToolType$inboundSchema` instead. */
  export const inboundSchema = WriteMemoryStoreToolType$inboundSchema;
  /** @deprecated use `WriteMemoryStoreToolType$outboundSchema` instead. */
  export const outboundSchema = WriteMemoryStoreToolType$outboundSchema;
}

/** @internal */
export const WriteMemoryStoreTool$inboundSchema: z.ZodType<
  WriteMemoryStoreTool,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: WriteMemoryStoreToolType$inboundSchema,
  requires_approval: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    "requires_approval": "requiresApproval",
  });
});

/** @internal */
export type WriteMemoryStoreTool$Outbound = {
  type: string;
  requires_approval: boolean;
};

/** @internal */
export const WriteMemoryStoreTool$outboundSchema: z.ZodType<
  WriteMemoryStoreTool$Outbound,
  z.ZodTypeDef,
  WriteMemoryStoreTool
> = z.object({
  type: WriteMemoryStoreToolType$outboundSchema,
  requiresApproval: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    requiresApproval: "requires_approval",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WriteMemoryStoreTool$ {
  /** @deprecated use `WriteMemoryStoreTool$inboundSchema` instead. */
  export const inboundSchema = WriteMemoryStoreTool$inboundSchema;
  /** @deprecated use `WriteMemoryStoreTool$outboundSchema` instead. */
  export const outboundSchema = WriteMemoryStoreTool$outboundSchema;
  /** @deprecated use `WriteMemoryStoreTool$Outbound` instead. */
  export type Outbound = WriteMemoryStoreTool$Outbound;
}

export function writeMemoryStoreToolToJSON(
  writeMemoryStoreTool: WriteMemoryStoreTool,
): string {
  return JSON.stringify(
    WriteMemoryStoreTool$outboundSchema.parse(writeMemoryStoreTool),
  );
}

export function writeMemoryStoreToolFromJSON(
  jsonString: string,
): SafeParseResult<WriteMemoryStoreTool, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WriteMemoryStoreTool$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WriteMemoryStoreTool' from JSON`,
  );
}
