/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const CurrentDateToolType = {
  CurrentDate: "current_date",
} as const;
export type CurrentDateToolType = ClosedEnum<typeof CurrentDateToolType>;

/**
 * Provides the current date and time
 */
export type CurrentDateTool = {
  type: CurrentDateToolType;
  requiresApproval?: boolean | undefined;
};

/** @internal */
export const CurrentDateToolType$inboundSchema: z.ZodNativeEnum<
  typeof CurrentDateToolType
> = z.nativeEnum(CurrentDateToolType);

/** @internal */
export const CurrentDateToolType$outboundSchema: z.ZodNativeEnum<
  typeof CurrentDateToolType
> = CurrentDateToolType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CurrentDateToolType$ {
  /** @deprecated use `CurrentDateToolType$inboundSchema` instead. */
  export const inboundSchema = CurrentDateToolType$inboundSchema;
  /** @deprecated use `CurrentDateToolType$outboundSchema` instead. */
  export const outboundSchema = CurrentDateToolType$outboundSchema;
}

/** @internal */
export const CurrentDateTool$inboundSchema: z.ZodType<
  CurrentDateTool,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: CurrentDateToolType$inboundSchema,
  requires_approval: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    "requires_approval": "requiresApproval",
  });
});

/** @internal */
export type CurrentDateTool$Outbound = {
  type: string;
  requires_approval: boolean;
};

/** @internal */
export const CurrentDateTool$outboundSchema: z.ZodType<
  CurrentDateTool$Outbound,
  z.ZodTypeDef,
  CurrentDateTool
> = z.object({
  type: CurrentDateToolType$outboundSchema,
  requiresApproval: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    requiresApproval: "requires_approval",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CurrentDateTool$ {
  /** @deprecated use `CurrentDateTool$inboundSchema` instead. */
  export const inboundSchema = CurrentDateTool$inboundSchema;
  /** @deprecated use `CurrentDateTool$outboundSchema` instead. */
  export const outboundSchema = CurrentDateTool$outboundSchema;
  /** @deprecated use `CurrentDateTool$Outbound` instead. */
  export type Outbound = CurrentDateTool$Outbound;
}

export function currentDateToolToJSON(
  currentDateTool: CurrentDateTool,
): string {
  return JSON.stringify(CurrentDateTool$outboundSchema.parse(currentDateTool));
}

export function currentDateToolFromJSON(
  jsonString: string,
): SafeParseResult<CurrentDateTool, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CurrentDateTool$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CurrentDateTool' from JSON`,
  );
}
