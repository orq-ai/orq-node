/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const RetrieveAgentsToolType = {
  RetrieveAgents: "retrieve_agents",
} as const;
export type RetrieveAgentsToolType = ClosedEnum<typeof RetrieveAgentsToolType>;

/**
 * Retrieves available agents in the system
 */
export type RetrieveAgentsTool = {
  type: RetrieveAgentsToolType;
  requiresApproval?: boolean | undefined;
};

/** @internal */
export const RetrieveAgentsToolType$inboundSchema: z.ZodNativeEnum<
  typeof RetrieveAgentsToolType
> = z.nativeEnum(RetrieveAgentsToolType);

/** @internal */
export const RetrieveAgentsToolType$outboundSchema: z.ZodNativeEnum<
  typeof RetrieveAgentsToolType
> = RetrieveAgentsToolType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetrieveAgentsToolType$ {
  /** @deprecated use `RetrieveAgentsToolType$inboundSchema` instead. */
  export const inboundSchema = RetrieveAgentsToolType$inboundSchema;
  /** @deprecated use `RetrieveAgentsToolType$outboundSchema` instead. */
  export const outboundSchema = RetrieveAgentsToolType$outboundSchema;
}

/** @internal */
export const RetrieveAgentsTool$inboundSchema: z.ZodType<
  RetrieveAgentsTool,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: RetrieveAgentsToolType$inboundSchema,
  requires_approval: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    "requires_approval": "requiresApproval",
  });
});

/** @internal */
export type RetrieveAgentsTool$Outbound = {
  type: string;
  requires_approval: boolean;
};

/** @internal */
export const RetrieveAgentsTool$outboundSchema: z.ZodType<
  RetrieveAgentsTool$Outbound,
  z.ZodTypeDef,
  RetrieveAgentsTool
> = z.object({
  type: RetrieveAgentsToolType$outboundSchema,
  requiresApproval: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    requiresApproval: "requires_approval",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RetrieveAgentsTool$ {
  /** @deprecated use `RetrieveAgentsTool$inboundSchema` instead. */
  export const inboundSchema = RetrieveAgentsTool$inboundSchema;
  /** @deprecated use `RetrieveAgentsTool$outboundSchema` instead. */
  export const outboundSchema = RetrieveAgentsTool$outboundSchema;
  /** @deprecated use `RetrieveAgentsTool$Outbound` instead. */
  export type Outbound = RetrieveAgentsTool$Outbound;
}

export function retrieveAgentsToolToJSON(
  retrieveAgentsTool: RetrieveAgentsTool,
): string {
  return JSON.stringify(
    RetrieveAgentsTool$outboundSchema.parse(retrieveAgentsTool),
  );
}

export function retrieveAgentsToolFromJSON(
  jsonString: string,
): SafeParseResult<RetrieveAgentsTool, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RetrieveAgentsTool$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RetrieveAgentsTool' from JSON`,
  );
}
