/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { OrqError } from "./orqerror.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type PostV2ProxyAudioTranslationsError = {
  message: string;
  type: string;
  param: string | null;
  code: string;
};

/**
 * Returns validation error
 */
export type PostV2ProxyAudioTranslationsResponseBodyData = {
  error: PostV2ProxyAudioTranslationsError;
};

/**
 * Returns validation error
 */
export class PostV2ProxyAudioTranslationsResponseBody extends OrqError {
  error: PostV2ProxyAudioTranslationsError;

  /** The original data that was passed to this error instance. */
  data$: PostV2ProxyAudioTranslationsResponseBodyData;

  constructor(
    err: PostV2ProxyAudioTranslationsResponseBodyData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.error?.message
      || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "PostV2ProxyAudioTranslationsResponseBody";
  }
}

/** @internal */
export const PostV2ProxyAudioTranslationsError$inboundSchema: z.ZodType<
  PostV2ProxyAudioTranslationsError,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
  type: z.string(),
  param: z.nullable(z.string()),
  code: z.string(),
});

/** @internal */
export type PostV2ProxyAudioTranslationsError$Outbound = {
  message: string;
  type: string;
  param: string | null;
  code: string;
};

/** @internal */
export const PostV2ProxyAudioTranslationsError$outboundSchema: z.ZodType<
  PostV2ProxyAudioTranslationsError$Outbound,
  z.ZodTypeDef,
  PostV2ProxyAudioTranslationsError
> = z.object({
  message: z.string(),
  type: z.string(),
  param: z.nullable(z.string()),
  code: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ProxyAudioTranslationsError$ {
  /** @deprecated use `PostV2ProxyAudioTranslationsError$inboundSchema` instead. */
  export const inboundSchema = PostV2ProxyAudioTranslationsError$inboundSchema;
  /** @deprecated use `PostV2ProxyAudioTranslationsError$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ProxyAudioTranslationsError$outboundSchema;
  /** @deprecated use `PostV2ProxyAudioTranslationsError$Outbound` instead. */
  export type Outbound = PostV2ProxyAudioTranslationsError$Outbound;
}

export function postV2ProxyAudioTranslationsErrorToJSON(
  postV2ProxyAudioTranslationsError: PostV2ProxyAudioTranslationsError,
): string {
  return JSON.stringify(
    PostV2ProxyAudioTranslationsError$outboundSchema.parse(
      postV2ProxyAudioTranslationsError,
    ),
  );
}

export function postV2ProxyAudioTranslationsErrorFromJSON(
  jsonString: string,
): SafeParseResult<PostV2ProxyAudioTranslationsError, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostV2ProxyAudioTranslationsError$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2ProxyAudioTranslationsError' from JSON`,
  );
}

/** @internal */
export const PostV2ProxyAudioTranslationsResponseBody$inboundSchema: z.ZodType<
  PostV2ProxyAudioTranslationsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.lazy(() => PostV2ProxyAudioTranslationsError$inboundSchema),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new PostV2ProxyAudioTranslationsResponseBody(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type PostV2ProxyAudioTranslationsResponseBody$Outbound = {
  error: PostV2ProxyAudioTranslationsError$Outbound;
};

/** @internal */
export const PostV2ProxyAudioTranslationsResponseBody$outboundSchema: z.ZodType<
  PostV2ProxyAudioTranslationsResponseBody$Outbound,
  z.ZodTypeDef,
  PostV2ProxyAudioTranslationsResponseBody
> = z.instanceof(PostV2ProxyAudioTranslationsResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.lazy(() => PostV2ProxyAudioTranslationsError$outboundSchema),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ProxyAudioTranslationsResponseBody$ {
  /** @deprecated use `PostV2ProxyAudioTranslationsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ProxyAudioTranslationsResponseBody$inboundSchema;
  /** @deprecated use `PostV2ProxyAudioTranslationsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ProxyAudioTranslationsResponseBody$outboundSchema;
  /** @deprecated use `PostV2ProxyAudioTranslationsResponseBody$Outbound` instead. */
  export type Outbound = PostV2ProxyAudioTranslationsResponseBody$Outbound;
}
