/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Internal server error
 */
export type EvalsAgeAppropriateEvalsResponseBodyData = {
  message: string;
};

/**
 * Internal server error
 */
export class EvalsAgeAppropriateEvalsResponseBody extends Error {
  /** The original data that was passed to this error instance. */
  data$: EvalsAgeAppropriateEvalsResponseBodyData;

  constructor(err: EvalsAgeAppropriateEvalsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.name = "EvalsAgeAppropriateEvalsResponseBody";
  }
}

/**
 * Evaluator not found
 */
export type EvalsAgeAppropriateResponseBodyData = {
  message: string;
};

/**
 * Evaluator not found
 */
export class EvalsAgeAppropriateResponseBody extends Error {
  /** The original data that was passed to this error instance. */
  data$: EvalsAgeAppropriateResponseBodyData;

  constructor(err: EvalsAgeAppropriateResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.name = "EvalsAgeAppropriateResponseBody";
  }
}

/** @internal */
export const EvalsAgeAppropriateEvalsResponseBody$inboundSchema: z.ZodType<
  EvalsAgeAppropriateEvalsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
})
  .transform((v) => {
    return new EvalsAgeAppropriateEvalsResponseBody(v);
  });

/** @internal */
export type EvalsAgeAppropriateEvalsResponseBody$Outbound = {
  message: string;
};

/** @internal */
export const EvalsAgeAppropriateEvalsResponseBody$outboundSchema: z.ZodType<
  EvalsAgeAppropriateEvalsResponseBody$Outbound,
  z.ZodTypeDef,
  EvalsAgeAppropriateEvalsResponseBody
> = z.instanceof(EvalsAgeAppropriateEvalsResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsAgeAppropriateEvalsResponseBody$ {
  /** @deprecated use `EvalsAgeAppropriateEvalsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    EvalsAgeAppropriateEvalsResponseBody$inboundSchema;
  /** @deprecated use `EvalsAgeAppropriateEvalsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsAgeAppropriateEvalsResponseBody$outboundSchema;
  /** @deprecated use `EvalsAgeAppropriateEvalsResponseBody$Outbound` instead. */
  export type Outbound = EvalsAgeAppropriateEvalsResponseBody$Outbound;
}

/** @internal */
export const EvalsAgeAppropriateResponseBody$inboundSchema: z.ZodType<
  EvalsAgeAppropriateResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
})
  .transform((v) => {
    return new EvalsAgeAppropriateResponseBody(v);
  });

/** @internal */
export type EvalsAgeAppropriateResponseBody$Outbound = {
  message: string;
};

/** @internal */
export const EvalsAgeAppropriateResponseBody$outboundSchema: z.ZodType<
  EvalsAgeAppropriateResponseBody$Outbound,
  z.ZodTypeDef,
  EvalsAgeAppropriateResponseBody
> = z.instanceof(EvalsAgeAppropriateResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsAgeAppropriateResponseBody$ {
  /** @deprecated use `EvalsAgeAppropriateResponseBody$inboundSchema` instead. */
  export const inboundSchema = EvalsAgeAppropriateResponseBody$inboundSchema;
  /** @deprecated use `EvalsAgeAppropriateResponseBody$outboundSchema` instead. */
  export const outboundSchema = EvalsAgeAppropriateResponseBody$outboundSchema;
  /** @deprecated use `EvalsAgeAppropriateResponseBody$Outbound` instead. */
  export type Outbound = EvalsAgeAppropriateResponseBody$Outbound;
}
