/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { OrqError } from "./orqerror.js";
import { SDKValidationError } from "./sdkvalidationerror.js";

export type PostV2ProxyAudioTranscriptionsError = {
  message: string;
  type: string;
  param: string | null;
  code: string;
};

/**
 * Returns validation error
 */
export type PostV2ProxyAudioTranscriptionsResponseBodyData = {
  error: PostV2ProxyAudioTranscriptionsError;
};

/**
 * Returns validation error
 */
export class PostV2ProxyAudioTranscriptionsResponseBody extends OrqError {
  error: PostV2ProxyAudioTranscriptionsError;

  /** The original data that was passed to this error instance. */
  data$: PostV2ProxyAudioTranscriptionsResponseBodyData;

  constructor(
    err: PostV2ProxyAudioTranscriptionsResponseBodyData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.error?.message
      || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "PostV2ProxyAudioTranscriptionsResponseBody";
  }
}

/** @internal */
export const PostV2ProxyAudioTranscriptionsError$inboundSchema: z.ZodType<
  PostV2ProxyAudioTranscriptionsError,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
  type: z.string(),
  param: z.nullable(z.string()),
  code: z.string(),
});

/** @internal */
export type PostV2ProxyAudioTranscriptionsError$Outbound = {
  message: string;
  type: string;
  param: string | null;
  code: string;
};

/** @internal */
export const PostV2ProxyAudioTranscriptionsError$outboundSchema: z.ZodType<
  PostV2ProxyAudioTranscriptionsError$Outbound,
  z.ZodTypeDef,
  PostV2ProxyAudioTranscriptionsError
> = z.object({
  message: z.string(),
  type: z.string(),
  param: z.nullable(z.string()),
  code: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ProxyAudioTranscriptionsError$ {
  /** @deprecated use `PostV2ProxyAudioTranscriptionsError$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ProxyAudioTranscriptionsError$inboundSchema;
  /** @deprecated use `PostV2ProxyAudioTranscriptionsError$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ProxyAudioTranscriptionsError$outboundSchema;
  /** @deprecated use `PostV2ProxyAudioTranscriptionsError$Outbound` instead. */
  export type Outbound = PostV2ProxyAudioTranscriptionsError$Outbound;
}

export function postV2ProxyAudioTranscriptionsErrorToJSON(
  postV2ProxyAudioTranscriptionsError: PostV2ProxyAudioTranscriptionsError,
): string {
  return JSON.stringify(
    PostV2ProxyAudioTranscriptionsError$outboundSchema.parse(
      postV2ProxyAudioTranscriptionsError,
    ),
  );
}

export function postV2ProxyAudioTranscriptionsErrorFromJSON(
  jsonString: string,
): SafeParseResult<PostV2ProxyAudioTranscriptionsError, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostV2ProxyAudioTranscriptionsError$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostV2ProxyAudioTranscriptionsError' from JSON`,
  );
}

/** @internal */
export const PostV2ProxyAudioTranscriptionsResponseBody$inboundSchema:
  z.ZodType<PostV2ProxyAudioTranscriptionsResponseBody, z.ZodTypeDef, unknown> =
    z.object({
      error: z.lazy(() => PostV2ProxyAudioTranscriptionsError$inboundSchema),
      request$: z.instanceof(Request),
      response$: z.instanceof(Response),
      body$: z.string(),
    })
      .transform((v) => {
        return new PostV2ProxyAudioTranscriptionsResponseBody(v, {
          request: v.request$,
          response: v.response$,
          body: v.body$,
        });
      });

/** @internal */
export type PostV2ProxyAudioTranscriptionsResponseBody$Outbound = {
  error: PostV2ProxyAudioTranscriptionsError$Outbound;
};

/** @internal */
export const PostV2ProxyAudioTranscriptionsResponseBody$outboundSchema:
  z.ZodType<
    PostV2ProxyAudioTranscriptionsResponseBody$Outbound,
    z.ZodTypeDef,
    PostV2ProxyAudioTranscriptionsResponseBody
  > = z.instanceof(PostV2ProxyAudioTranscriptionsResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      error: z.lazy(() => PostV2ProxyAudioTranscriptionsError$outboundSchema),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2ProxyAudioTranscriptionsResponseBody$ {
  /** @deprecated use `PostV2ProxyAudioTranscriptionsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostV2ProxyAudioTranscriptionsResponseBody$inboundSchema;
  /** @deprecated use `PostV2ProxyAudioTranscriptionsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostV2ProxyAudioTranscriptionsResponseBody$outboundSchema;
  /** @deprecated use `PostV2ProxyAudioTranscriptionsResponseBody$Outbound` instead. */
  export type Outbound = PostV2ProxyAudioTranscriptionsResponseBody$Outbound;
}
