/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { OrqError } from "./orqerror.js";

/**
 * Internal server error
 */
export type EvalsRagasContextEntitiesRecallEvalsResponseBodyData = {
  message: string;
};

/**
 * Internal server error
 */
export class EvalsRagasContextEntitiesRecallEvalsResponseBody extends OrqError {
  /** The original data that was passed to this error instance. */
  data$: EvalsRagasContextEntitiesRecallEvalsResponseBodyData;

  constructor(
    err: EvalsRagasContextEntitiesRecallEvalsResponseBodyData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;

    this.name = "EvalsRagasContextEntitiesRecallEvalsResponseBody";
  }
}

/**
 * Evaluator not found
 */
export type EvalsRagasContextEntitiesRecallResponseBodyData = {
  message: string;
};

/**
 * Evaluator not found
 */
export class EvalsRagasContextEntitiesRecallResponseBody extends OrqError {
  /** The original data that was passed to this error instance. */
  data$: EvalsRagasContextEntitiesRecallResponseBodyData;

  constructor(
    err: EvalsRagasContextEntitiesRecallResponseBodyData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;

    this.name = "EvalsRagasContextEntitiesRecallResponseBody";
  }
}

/** @internal */
export const EvalsRagasContextEntitiesRecallEvalsResponseBody$inboundSchema:
  z.ZodType<
    EvalsRagasContextEntitiesRecallEvalsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new EvalsRagasContextEntitiesRecallEvalsResponseBody(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type EvalsRagasContextEntitiesRecallEvalsResponseBody$Outbound = {
  message: string;
};

/** @internal */
export const EvalsRagasContextEntitiesRecallEvalsResponseBody$outboundSchema:
  z.ZodType<
    EvalsRagasContextEntitiesRecallEvalsResponseBody$Outbound,
    z.ZodTypeDef,
    EvalsRagasContextEntitiesRecallEvalsResponseBody
  > = z.instanceof(EvalsRagasContextEntitiesRecallEvalsResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsRagasContextEntitiesRecallEvalsResponseBody$ {
  /** @deprecated use `EvalsRagasContextEntitiesRecallEvalsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    EvalsRagasContextEntitiesRecallEvalsResponseBody$inboundSchema;
  /** @deprecated use `EvalsRagasContextEntitiesRecallEvalsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsRagasContextEntitiesRecallEvalsResponseBody$outboundSchema;
  /** @deprecated use `EvalsRagasContextEntitiesRecallEvalsResponseBody$Outbound` instead. */
  export type Outbound =
    EvalsRagasContextEntitiesRecallEvalsResponseBody$Outbound;
}

/** @internal */
export const EvalsRagasContextEntitiesRecallResponseBody$inboundSchema:
  z.ZodType<
    EvalsRagasContextEntitiesRecallResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    message: z.string(),
    request$: z.instanceof(Request),
    response$: z.instanceof(Response),
    body$: z.string(),
  })
    .transform((v) => {
      return new EvalsRagasContextEntitiesRecallResponseBody(v, {
        request: v.request$,
        response: v.response$,
        body: v.body$,
      });
    });

/** @internal */
export type EvalsRagasContextEntitiesRecallResponseBody$Outbound = {
  message: string;
};

/** @internal */
export const EvalsRagasContextEntitiesRecallResponseBody$outboundSchema:
  z.ZodType<
    EvalsRagasContextEntitiesRecallResponseBody$Outbound,
    z.ZodTypeDef,
    EvalsRagasContextEntitiesRecallResponseBody
  > = z.instanceof(EvalsRagasContextEntitiesRecallResponseBody)
    .transform(v => v.data$)
    .pipe(z.object({
      message: z.string(),
    }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsRagasContextEntitiesRecallResponseBody$ {
  /** @deprecated use `EvalsRagasContextEntitiesRecallResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    EvalsRagasContextEntitiesRecallResponseBody$inboundSchema;
  /** @deprecated use `EvalsRagasContextEntitiesRecallResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsRagasContextEntitiesRecallResponseBody$outboundSchema;
  /** @deprecated use `EvalsRagasContextEntitiesRecallResponseBody$Outbound` instead. */
  export type Outbound = EvalsRagasContextEntitiesRecallResponseBody$Outbound;
}
