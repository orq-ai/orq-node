/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Internal server error
 */
export type EvalsLengthGreaterThanEvalsResponseBodyData = {
  message: string;
};

/**
 * Internal server error
 */
export class EvalsLengthGreaterThanEvalsResponseBody extends Error {
  /** The original data that was passed to this error instance. */
  data$: EvalsLengthGreaterThanEvalsResponseBodyData;

  constructor(err: EvalsLengthGreaterThanEvalsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.name = "EvalsLengthGreaterThanEvalsResponseBody";
  }
}

/**
 * Evaluator not found
 */
export type EvalsLengthGreaterThanResponseBodyData = {
  message: string;
};

/**
 * Evaluator not found
 */
export class EvalsLengthGreaterThanResponseBody extends Error {
  /** The original data that was passed to this error instance. */
  data$: EvalsLengthGreaterThanResponseBodyData;

  constructor(err: EvalsLengthGreaterThanResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.name = "EvalsLengthGreaterThanResponseBody";
  }
}

/** @internal */
export const EvalsLengthGreaterThanEvalsResponseBody$inboundSchema: z.ZodType<
  EvalsLengthGreaterThanEvalsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
})
  .transform((v) => {
    return new EvalsLengthGreaterThanEvalsResponseBody(v);
  });

/** @internal */
export type EvalsLengthGreaterThanEvalsResponseBody$Outbound = {
  message: string;
};

/** @internal */
export const EvalsLengthGreaterThanEvalsResponseBody$outboundSchema: z.ZodType<
  EvalsLengthGreaterThanEvalsResponseBody$Outbound,
  z.ZodTypeDef,
  EvalsLengthGreaterThanEvalsResponseBody
> = z.instanceof(EvalsLengthGreaterThanEvalsResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsLengthGreaterThanEvalsResponseBody$ {
  /** @deprecated use `EvalsLengthGreaterThanEvalsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    EvalsLengthGreaterThanEvalsResponseBody$inboundSchema;
  /** @deprecated use `EvalsLengthGreaterThanEvalsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsLengthGreaterThanEvalsResponseBody$outboundSchema;
  /** @deprecated use `EvalsLengthGreaterThanEvalsResponseBody$Outbound` instead. */
  export type Outbound = EvalsLengthGreaterThanEvalsResponseBody$Outbound;
}

/** @internal */
export const EvalsLengthGreaterThanResponseBody$inboundSchema: z.ZodType<
  EvalsLengthGreaterThanResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
})
  .transform((v) => {
    return new EvalsLengthGreaterThanResponseBody(v);
  });

/** @internal */
export type EvalsLengthGreaterThanResponseBody$Outbound = {
  message: string;
};

/** @internal */
export const EvalsLengthGreaterThanResponseBody$outboundSchema: z.ZodType<
  EvalsLengthGreaterThanResponseBody$Outbound,
  z.ZodTypeDef,
  EvalsLengthGreaterThanResponseBody
> = z.instanceof(EvalsLengthGreaterThanResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsLengthGreaterThanResponseBody$ {
  /** @deprecated use `EvalsLengthGreaterThanResponseBody$inboundSchema` instead. */
  export const inboundSchema = EvalsLengthGreaterThanResponseBody$inboundSchema;
  /** @deprecated use `EvalsLengthGreaterThanResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsLengthGreaterThanResponseBody$outboundSchema;
  /** @deprecated use `EvalsLengthGreaterThanResponseBody$Outbound` instead. */
  export type Outbound = EvalsLengthGreaterThanResponseBody$Outbound;
}
