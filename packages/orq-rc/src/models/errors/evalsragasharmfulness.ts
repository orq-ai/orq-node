/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Internal server error
 */
export type EvalsRagasHarmfulnessEvalsResponseBodyData = {
  message: string;
};

/**
 * Internal server error
 */
export class EvalsRagasHarmfulnessEvalsResponseBody extends Error {
  /** The original data that was passed to this error instance. */
  data$: EvalsRagasHarmfulnessEvalsResponseBodyData;

  constructor(err: EvalsRagasHarmfulnessEvalsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.name = "EvalsRagasHarmfulnessEvalsResponseBody";
  }
}

/**
 * Evaluator not found
 */
export type EvalsRagasHarmfulnessResponseBodyData = {
  message: string;
};

/**
 * Evaluator not found
 */
export class EvalsRagasHarmfulnessResponseBody extends Error {
  /** The original data that was passed to this error instance. */
  data$: EvalsRagasHarmfulnessResponseBodyData;

  constructor(err: EvalsRagasHarmfulnessResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.name = "EvalsRagasHarmfulnessResponseBody";
  }
}

/** @internal */
export const EvalsRagasHarmfulnessEvalsResponseBody$inboundSchema: z.ZodType<
  EvalsRagasHarmfulnessEvalsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
})
  .transform((v) => {
    return new EvalsRagasHarmfulnessEvalsResponseBody(v);
  });

/** @internal */
export type EvalsRagasHarmfulnessEvalsResponseBody$Outbound = {
  message: string;
};

/** @internal */
export const EvalsRagasHarmfulnessEvalsResponseBody$outboundSchema: z.ZodType<
  EvalsRagasHarmfulnessEvalsResponseBody$Outbound,
  z.ZodTypeDef,
  EvalsRagasHarmfulnessEvalsResponseBody
> = z.instanceof(EvalsRagasHarmfulnessEvalsResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsRagasHarmfulnessEvalsResponseBody$ {
  /** @deprecated use `EvalsRagasHarmfulnessEvalsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    EvalsRagasHarmfulnessEvalsResponseBody$inboundSchema;
  /** @deprecated use `EvalsRagasHarmfulnessEvalsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsRagasHarmfulnessEvalsResponseBody$outboundSchema;
  /** @deprecated use `EvalsRagasHarmfulnessEvalsResponseBody$Outbound` instead. */
  export type Outbound = EvalsRagasHarmfulnessEvalsResponseBody$Outbound;
}

/** @internal */
export const EvalsRagasHarmfulnessResponseBody$inboundSchema: z.ZodType<
  EvalsRagasHarmfulnessResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
})
  .transform((v) => {
    return new EvalsRagasHarmfulnessResponseBody(v);
  });

/** @internal */
export type EvalsRagasHarmfulnessResponseBody$Outbound = {
  message: string;
};

/** @internal */
export const EvalsRagasHarmfulnessResponseBody$outboundSchema: z.ZodType<
  EvalsRagasHarmfulnessResponseBody$Outbound,
  z.ZodTypeDef,
  EvalsRagasHarmfulnessResponseBody
> = z.instanceof(EvalsRagasHarmfulnessResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsRagasHarmfulnessResponseBody$ {
  /** @deprecated use `EvalsRagasHarmfulnessResponseBody$inboundSchema` instead. */
  export const inboundSchema = EvalsRagasHarmfulnessResponseBody$inboundSchema;
  /** @deprecated use `EvalsRagasHarmfulnessResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsRagasHarmfulnessResponseBody$outboundSchema;
  /** @deprecated use `EvalsRagasHarmfulnessResponseBody$Outbound` instead. */
  export type Outbound = EvalsRagasHarmfulnessResponseBody$Outbound;
}
