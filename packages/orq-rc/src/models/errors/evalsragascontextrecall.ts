/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { OrqError } from "./orqerror.js";

/**
 * Internal server error
 */
export type EvalsRagasContextRecallEvalsResponseBodyData = {
  message: string;
};

/**
 * Internal server error
 */
export class EvalsRagasContextRecallEvalsResponseBody extends OrqError {
  /** The original data that was passed to this error instance. */
  data$: EvalsRagasContextRecallEvalsResponseBodyData;

  constructor(
    err: EvalsRagasContextRecallEvalsResponseBodyData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;

    this.name = "EvalsRagasContextRecallEvalsResponseBody";
  }
}

/**
 * Evaluator not found
 */
export type EvalsRagasContextRecallResponseBodyData = {
  message: string;
};

/**
 * Evaluator not found
 */
export class EvalsRagasContextRecallResponseBody extends OrqError {
  /** The original data that was passed to this error instance. */
  data$: EvalsRagasContextRecallResponseBodyData;

  constructor(
    err: EvalsRagasContextRecallResponseBodyData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.message || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;

    this.name = "EvalsRagasContextRecallResponseBody";
  }
}

/** @internal */
export const EvalsRagasContextRecallEvalsResponseBody$inboundSchema: z.ZodType<
  EvalsRagasContextRecallEvalsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new EvalsRagasContextRecallEvalsResponseBody(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type EvalsRagasContextRecallEvalsResponseBody$Outbound = {
  message: string;
};

/** @internal */
export const EvalsRagasContextRecallEvalsResponseBody$outboundSchema: z.ZodType<
  EvalsRagasContextRecallEvalsResponseBody$Outbound,
  z.ZodTypeDef,
  EvalsRagasContextRecallEvalsResponseBody
> = z.instanceof(EvalsRagasContextRecallEvalsResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsRagasContextRecallEvalsResponseBody$ {
  /** @deprecated use `EvalsRagasContextRecallEvalsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    EvalsRagasContextRecallEvalsResponseBody$inboundSchema;
  /** @deprecated use `EvalsRagasContextRecallEvalsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsRagasContextRecallEvalsResponseBody$outboundSchema;
  /** @deprecated use `EvalsRagasContextRecallEvalsResponseBody$Outbound` instead. */
  export type Outbound = EvalsRagasContextRecallEvalsResponseBody$Outbound;
}

/** @internal */
export const EvalsRagasContextRecallResponseBody$inboundSchema: z.ZodType<
  EvalsRagasContextRecallResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new EvalsRagasContextRecallResponseBody(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type EvalsRagasContextRecallResponseBody$Outbound = {
  message: string;
};

/** @internal */
export const EvalsRagasContextRecallResponseBody$outboundSchema: z.ZodType<
  EvalsRagasContextRecallResponseBody$Outbound,
  z.ZodTypeDef,
  EvalsRagasContextRecallResponseBody
> = z.instanceof(EvalsRagasContextRecallResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.string(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EvalsRagasContextRecallResponseBody$ {
  /** @deprecated use `EvalsRagasContextRecallResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    EvalsRagasContextRecallResponseBody$inboundSchema;
  /** @deprecated use `EvalsRagasContextRecallResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    EvalsRagasContextRecallResponseBody$outboundSchema;
  /** @deprecated use `EvalsRagasContextRecallResponseBody$Outbound` instead. */
  export type Outbound = EvalsRagasContextRecallResponseBody$Outbound;
}
