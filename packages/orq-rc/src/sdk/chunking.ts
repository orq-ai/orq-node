/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { chunkingParse } from "../funcs/chunkingParse.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Chunking extends ClientSDK {
  /**
   * Parse text
   *
   * @remarks
   * Split large text documents into smaller, manageable chunks using different chunking strategies optimized for RAG (Retrieval-Augmented Generation) workflows. This endpoint supports multiple chunking algorithms including token-based, sentence-based, recursive, semantic, and specialized strategies.
   */
  async parse(
    request: operations.ParseChunkingRequest,
    options?: RequestOptions,
  ): Promise<operations.ParseResponseBody> {
    return unwrapAsync(chunkingParse(
      this,
      request,
      options,
    ));
  }
}
