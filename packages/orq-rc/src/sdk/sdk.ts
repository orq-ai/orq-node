/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { postV2AgentsInternal } from "../funcs/postV2AgentsInternal.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { Agents } from "./agents.js";
import { Budgets } from "./budgets.js";
import { Chunking } from "./chunking.js";
import { Contacts } from "./contacts.js";
import { Datasets } from "./datasets.js";
import { Deployments } from "./deployments.js";
import { Evals } from "./evals.js";
import { Feedback } from "./feedback.js";
import { Files } from "./files.js";
import { Knowledge } from "./knowledge.js";
import { MemoryStores } from "./memorystores.js";
import { Models } from "./models.js";
import { Prompts } from "./prompts.js";
import { Remoteconfigs } from "./remoteconfigs.js";

export class Orq extends ClientSDK {
  private _contacts?: Contacts;
  get contacts(): Contacts {
    return (this._contacts ??= new Contacts(this._options));
  }

  private _feedback?: Feedback;
  get feedback(): Feedback {
    return (this._feedback ??= new Feedback(this._options));
  }

  private _deployments?: Deployments;
  get deployments(): Deployments {
    return (this._deployments ??= new Deployments(this._options));
  }

  private _agents?: Agents;
  get agents(): Agents {
    return (this._agents ??= new Agents(this._options));
  }

  private _files?: Files;
  get files(): Files {
    return (this._files ??= new Files(this._options));
  }

  private _prompts?: Prompts;
  get prompts(): Prompts {
    return (this._prompts ??= new Prompts(this._options));
  }

  private _remoteconfigs?: Remoteconfigs;
  get remoteconfigs(): Remoteconfigs {
    return (this._remoteconfigs ??= new Remoteconfigs(this._options));
  }

  private _models?: Models;
  get models(): Models {
    return (this._models ??= new Models(this._options));
  }

  private _memoryStores?: MemoryStores;
  get memoryStores(): MemoryStores {
    return (this._memoryStores ??= new MemoryStores(this._options));
  }

  private _datasets?: Datasets;
  get datasets(): Datasets {
    return (this._datasets ??= new Datasets(this._options));
  }

  private _knowledge?: Knowledge;
  get knowledge(): Knowledge {
    return (this._knowledge ??= new Knowledge(this._options));
  }

  private _chunking?: Chunking;
  get chunking(): Chunking {
    return (this._chunking ??= new Chunking(this._options));
  }

  private _evals?: Evals;
  get evals(): Evals {
    return (this._evals ??= new Evals(this._options));
  }

  private _budgets?: Budgets;
  get budgets(): Budgets {
    return (this._budgets ??= new Budgets(this._options));
  }

  async postV2AgentsInternal(
    request?: operations.PostV2AgentsInternalRequestBody | undefined,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(postV2AgentsInternal(
      this,
      request,
      options,
    ));
  }
}
